var app=function(){"use strict";function S(){}const E=S=>S;function A(S){return S()}function O(){return Object.create(null)}function e(S){S.forEach(A)}function R(S){return"function"==typeof S}function t(S,E){return S!=S?E==E:S!==E||S&&"object"==typeof S||"function"==typeof S}function I(E,A,O){E.$$.on_destroy.push(function(E,...A){if(null==E)return S;const O=E.subscribe(...A);return O.unsubscribe?()=>O.unsubscribe():O}(A,O))}function L(S,E,A,O){if(S){const e=T(S,E,A,O);return S[0](e)}}function T(S,E,A,O){return S[1]&&O?function(S,E){for(const A in E)S[A]=E[A];return S}(A.ctx.slice(),S[1](O(E))):A.ctx}function n(S,E,A,O){if(S[2]&&O){const e=S[2](O(A));if(void 0===E.dirty)return e;if("object"==typeof e){const S=[],A=Math.max(E.dirty.length,e.length);for(let O=0;O<A;O+=1)S[O]=E.dirty[O]|e[O];return S}return E.dirty|e}return E.dirty}function N(S,E,A,O,e,R){if(e){const t=T(E,A,O,R);S.p(t,e)}}function s(S){if(S.ctx.length>32){const E=[],A=S.ctx.length/32;for(let S=0;S<A;S++)E[S]=-1;return E}return-1}function i(S){return null==S?"":S}function U(S){const E="string"==typeof S&&S.match(/^\s*(-?[\d.]+)([^\s]*)\s*$/);return E?[parseFloat(E[1]),E[2]||"px"]:[S,"px"]}const o="undefined"!=typeof window;let D=o?()=>window.performance.now():()=>Date.now(),r=o?S=>requestAnimationFrame(S):S;const C=new Set;function P(S){C.forEach((E=>{E.c(S)||(C.delete(E),E.f())})),0!==C.size&&r(P)}function Y(S,E){S.appendChild(E)}function M(S){if(!S)return document;const E=S.getRootNode?S.getRootNode():S.ownerDocument;return E&&E.host?E:S.ownerDocument}function a(S){const E=B("style");return function(S,E){Y(S.head||S,E),E.sheet}(M(S),E),E.sheet}function l(S,E,A){S.insertBefore(E,A||null)}function c(S){S.parentNode&&S.parentNode.removeChild(S)}function H(S,E){for(let A=0;A<S.length;A+=1)S[A]&&S[A].d(E)}function B(S){return document.createElement(S)}function G(S){return document.createTextNode(S)}function K(){return G(" ")}function u(){return G("")}function d(S,E,A,O){return S.addEventListener(E,A,O),()=>S.removeEventListener(E,A,O)}function h(S,E,A){null==A?S.removeAttribute(E):S.getAttribute(E)!==A&&S.setAttribute(E,A)}function F(S,E){E=""+E,S.data!==E&&(S.data=E)}function W(S,E){S.value=null==E?"":E}function f(S,E,A,O){null==A?S.style.removeProperty(E):S.style.setProperty(E,A,O?"important":"")}function p(S,E,A){S.classList[A?"add":"remove"](E)}function V(S,E,{bubbles:A=!1,cancelable:O=!1}={}){const e=document.createEvent("CustomEvent");return e.initCustomEvent(S,A,O,E),e}const g=new Map;let m,b=0;function y(S,E,A,O,e,R,t,I=0){const L=16.666/O;let T="{\n";for(let S=0;S<=1;S+=L){const O=E+(A-E)*R(S);T+=100*S+`%{${t(O,1-O)}}\n`}const n=T+`100% {${t(A,1-A)}}\n}`,N=`__svelte_${function(S){let E=5381,A=S.length;for(;A--;)E=(E<<5)-E^S.charCodeAt(A);return E>>>0}(n)}_${I}`,s=M(S),{stylesheet:i,rules:U}=g.get(s)||function(S,E){const A={stylesheet:a(E),rules:{}};return g.set(S,A),A}(s,S);U[N]||(U[N]=!0,i.insertRule(`@keyframes ${N} ${n}`,i.cssRules.length));const o=S.style.animation||"";return S.style.animation=`${o?`${o}, `:""}${N} ${O}ms linear ${e}ms 1 both`,b+=1,N}function Z(S,E){const A=(S.style.animation||"").split(", "),O=A.filter(E?S=>S.indexOf(E)<0:S=>-1===S.indexOf("__svelte")),e=A.length-O.length;e&&(S.style.animation=O.join(", "),b-=e,b||r((()=>{b||(g.forEach((S=>{const{ownerNode:E}=S.stylesheet;E&&c(E)})),g.clear())})))}function w(S){m=S}function J(){if(!m)throw new Error("Function called outside component initialization");return m}function X(S,E){const A=S.$$.callbacks[E.type];A&&A.slice().forEach((S=>S.call(this,E)))}const v=[],$=[];let k=[];const x=[],Q=Promise.resolve();let q=!1;function j(S){k.push(S)}const _=new Set;let z,SS=0;function ES(){if(0!==SS)return;const S=m;do{try{for(;SS<v.length;){const S=v[SS];SS++,w(S),AS(S.$$)}}catch(S){throw v.length=0,SS=0,S}for(w(null),v.length=0,SS=0;$.length;)$.pop()();for(let S=0;S<k.length;S+=1){const E=k[S];_.has(E)||(_.add(E),E())}k.length=0}while(v.length);for(;x.length;)x.pop()();q=!1,_.clear(),w(S)}function AS(S){if(null!==S.fragment){S.update(),e(S.before_update);const E=S.dirty;S.dirty=[-1],S.fragment&&S.fragment.p(S.ctx,E),S.after_update.forEach(j)}}function OS(S,E,A){S.dispatchEvent(V(`${E?"intro":"outro"}${A}`))}const eS=new Set;let RS;function tS(){RS={r:0,c:[],p:RS}}function IS(){RS.r||e(RS.c),RS=RS.p}function LS(S,E){S&&S.i&&(eS.delete(S),S.i(E))}function TS(S,E,A,O){if(S&&S.o){if(eS.has(S))return;eS.add(S),RS.c.push((()=>{eS.delete(S),O&&(A&&S.d(1),O())})),S.o(E)}else O&&O()}const nS={duration:0};function NS(A,O,t,I){const L={direction:"both"};let T=O(A,t,L),n=I?0:1,N=null,s=null,i=null;function U(){i&&Z(A,i)}function o(S,E){const A=S.b-n;return E*=Math.abs(A),{a:n,b:S.b,d:A,duration:E,start:S.start,end:S.start+E,group:S.group}}function Y(O){const{delay:R=0,duration:t=300,easing:I=E,tick:L=S,css:Y}=T||nS,M={start:D()+R,b:O};O||(M.group=RS,RS.r+=1),N||s?s=M:(Y&&(U(),i=y(A,n,O,t,R,I,Y)),O&&L(0,1),N=o(M,t),j((()=>OS(A,O,"start"))),function(S){let E;0===C.size&&r(P),new Promise((A=>{C.add(E={c:S,f:A})}))}((S=>{if(s&&S>s.start&&(N=o(s,t),s=null,OS(A,N.b,"start"),Y&&(U(),i=y(A,n,N.b,N.duration,0,I,T.css))),N)if(S>=N.end)L(n=N.b,1-n),OS(A,N.b,"end"),s||(N.b?U():--N.group.r||e(N.group.c)),N=null;else if(S>=N.start){const E=S-N.start;n=N.a+N.d*I(E/N.duration),L(n,1-n)}return!(!N&&!s)})))}return{run(S){R(T)?(z||(z=Promise.resolve(),z.then((()=>{z=null}))),z).then((()=>{T=T(L),Y(S)})):Y(S)},end(){U(),N=s=null}}}function sS(S){S&&S.c()}function iS(S,E,O,t){const{fragment:I,after_update:L}=S.$$;I&&I.m(E,O),t||j((()=>{const E=S.$$.on_mount.map(A).filter(R);S.$$.on_destroy?S.$$.on_destroy.push(...E):e(E),S.$$.on_mount=[]})),L.forEach(j)}function US(S,E){const A=S.$$;null!==A.fragment&&(!function(S){const E=[],A=[];k.forEach((O=>-1===S.indexOf(O)?E.push(O):A.push(O))),A.forEach((S=>S())),k=E}(A.after_update),e(A.on_destroy),A.fragment&&A.fragment.d(E),A.on_destroy=A.fragment=null,A.ctx=[])}function oS(S,E){-1===S.$$.dirty[0]&&(v.push(S),q||(q=!0,Q.then(ES)),S.$$.dirty.fill(0)),S.$$.dirty[E/31|0]|=1<<E%31}function DS(E,A,R,t,I,L,T,n=[-1]){const N=m;w(E);const s=E.$$={fragment:null,ctx:[],props:L,update:S,not_equal:I,bound:O(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(A.context||(N?N.$$.context:[])),callbacks:O(),dirty:n,skip_bound:!1,root:A.target||N.$$.root};T&&T(s.root);let i=!1;if(s.ctx=R?R(E,A.props||{},((S,A,...O)=>{const e=O.length?O[0]:A;return s.ctx&&I(s.ctx[S],s.ctx[S]=e)&&(!s.skip_bound&&s.bound[S]&&s.bound[S](e),i&&oS(E,S)),A})):[],s.update(),i=!0,e(s.before_update),s.fragment=!!t&&t(s.ctx),A.target){if(A.hydrate){const S=function(S){return Array.from(S.childNodes)}(A.target);s.fragment&&s.fragment.l(S),S.forEach(c)}else s.fragment&&s.fragment.c();A.intro&&LS(E.$$.fragment),iS(E,A.target,A.anchor,A.customElement),ES()}w(N)}class rS{$destroy(){US(this,1),this.$destroy=S}$on(E,A){if(!R(A))return S;const O=this.$$.callbacks[E]||(this.$$.callbacks[E]=[]);return O.push(A),()=>{const S=O.indexOf(A);-1!==S&&O.splice(S,1)}}$set(S){var E;this.$$set&&(E=S,0!==Object.keys(E).length)&&(this.$$.skip_bound=!0,this.$$set(S),this.$$.skip_bound=!1)}}const CS=[];function PS(E,A=S){let O;const e=new Set;function R(S){if(t(E,S)&&(E=S,O)){const S=!CS.length;for(const S of e)S[1](),CS.push(S,E);if(S){for(let S=0;S<CS.length;S+=2)CS[S][0](CS[S+1]);CS.length=0}}}return{set:R,update:function(S){R(S(E))},subscribe:function(t,I=S){const L=[t,I];return e.add(L),1===e.size&&(O=A(R)||S),t(E),()=>{e.delete(L),0===e.size&&O&&(O(),O=null)}}}}const YS=["SENDS","STAYS","EXTRA","MOUSE","RELAY","GRILL","COLOR","HOUSE","MAILS","BRUSH","FRONT","POINT","PLAYS","ISAAC","PLANS","SHOWS","SCOPE","DANNY","GUARD","SLATE","CAUSE","DEALT","WINDS","ALERT","GHOST","MEEKO","SEEMS","PIECE","FUNNY","DRILL","MEANT","GIVEN","VIEWS","JOSEE","PROVE","SAVED","SOLID","ABOVE","WOULD","AUDET","PEPIN","OLDER","TYPED","DRIVE","VOTED","TYPES","ARISE","LEASE","FLIES","ELENA","TODAY","CHARM","WALLS","UPSET","OPTIC","TAPED","BRYAN","DELAY","GONNA","GRATE","SETUP","FILLS","RETRO","ORDER","FAXES","KEITH","SPOKE","BATCH","ENJOY","ELIAS","CHIEF","APART","YEARS","ZONES","WIPES","LINES","BUILT","METRO","PAGES","TRUNK","STUCK","RAINY","PRIOR","OPENS","SPARE","SPRAY","SMITH","IDEAS","SOUND","WORTH","HEAVY","ALLAN","SANTA","MINOR","INPUT","THREW","TELUS","SHIPS","SEATS","VIRUS","RAMPS","READY","TASKS","TRICK","SKYPE","BAKIR","PRIMO","PRINT","SPECS","QUITE","MEANS","NANCY","FIXES","CARON","SHAPE","ANNIE","BASED","DEBUG","ABUSE","TEETH","PETIT","SONIA","JULES","REACH","WATER","RIVER","RADIO","MATTE","PLUGS","STOPS","FRESH","TOUGH","REUSE","LOCAL","MERRY","FRAME","UPPER","BASIC","CHUBB","TOTAL","FAVOR","TAPES","NASTY","UMIKO","STILL","ALIAS","LEGAL","KNOWS","AMONG","JULIE","STAND","UNTIL","RAVEN","MOVES","PARTS","SINCE","TALLY","CHIPS","BENCH","TRAIN","SAINT","HELLO","SPITE","IDEAL","RETRY","LABOR","WOODS","CLEAN","SEIZE","JASON","NEEDS","LEAST","PRIME","HARRY","USUAL","CHRIS","TAXES","SENSE","STORE","CACHE","FUSER","BOBBY","FIELD","TALKS","WEIRD","AWAIT","BLACK","HINTS","HTTPS","HAPPY","LASTS","BRAND","SNEAK","SLIDE","WATTS","KEEPS","BOUND","PLANT","PAUSE","NANUK","FILED","MASSE","ALIQU","OCCUR","IRONY","THOSE","SCORE","TUMIC","WIRED","NORTH","WIDTH","TABLE","FRITZ","BASIS","SANDY","MUSIC","WITCH","SAFER","SUITE","MINDS","PINCH","WRONG","FAYES","BILLS","EXIST","ZELDA","CELIA","BOOTS","LOGON","THERE","CARRY","ROUTE","ADOBE","GLOBE","INTEL","DISKS","CIVIL","MARCO","RULES","SIGLS","OTHER","GRAPH","LOYAL","VALID","NINJA","ALLOW","MAKER","FAITH","GLASS","CDROM","LIVES","APTLY","NODES","THROW","WANNA","FEELS","UNDER","UNZIP","COULD","SAMMY","MARKS","CARGO","SIDES","TESTS","PETER","INNER","PROMO","MICRO","RANGE","JAMIE","LINDA","TRUCK","TOMMY","LEAVE","PROXY","MAJOR","FLOOR","PANEL","SHARP","SADLY","MARIO","TWICE","PAULU","HUMOR","WEEKS","APPLE","PILOT","TAKEN","STICK","LISTS","MARIE","SHEET","EJECT","CLAIM","ANKLE","STUDY","BULKY","MOVED","TRACY","STEVE","FACES","NOTED","ENDED","MOUNT","HEARD","HALTS","LABEL","CHAIR","SPLIT","WRITE","LASER","METAL","AVOID","YIELD","FINDS","CANON","LOOPS","SITES","DRONE","STORY","FALSE","BLOCK","LEVEL","DONNA","TONER","MAKES","CALLS","HOPEM","TINYS","ERICA","FONTS","SHOOT","CLEAR","PHASE","CRASH","SMALL","STUBS","COVID","TIGHT","CLOTH","TRUST","YOURI","WORKS","MODEL","MATCH","STEPS","SKIDS","NEVER","QUICK","GREEN","ROUND","LOOSE","VOICE","ELITE","SCAMS","LARRY","SLAVE","ALONG","THEME","CRACK","REACT","DAISY","FLAWS","VALUE","RATIO","GRACE","FACTS","CHECK","SURGE","FLOAT","RATES","LEARN","BRUNO","FOCUS","SDRAM","FALLS","KAREN","LIKED","RESET","PATCH","TREAT","GLOSS","FAULT","EQUIP","CYCLE","AWARD","CADDY","OKPIK","ITEMS","WORRY","SWING","SULUK","AHEAD","ALIKE","GIFTS","FORCE","PARTY","TELLS","GIANT","HEATS","TOOLS","KEVIN","BELLY","JOINS","WANTS","INBOX","THESE","DOCKS","LOSES","DJAPA","DYING","FULLY","CHART","CABLE","DIGIT","ARGUE","PRESS","INCUR","ROLLS","GROUP","HOLDS","SEVER","PHONE","ABACK","LARGE","GIRLS","CARDS","JOSIE","CLOCK","DAVIS","SHALL","FANCY","HARSH","GRASP","ZEROS","JOLLY","CRAWL","IGLOO","TRASH","ROGER","ABOUT","TRIPS","TAKES","BOILS","KITTY","ECHOS","TEACH","MEDIA","TITLE","KAUKI","SLEEP","SMART","DRAIN","GRAND","PLATE","RELAX","SHRED","DENIS","EAGER","ADAMS","PRICE","JOKES","SIMON","SUPER","FRAUD","TECHS","LUNCH","AUDIT","TRACE","CATCH","LEADS","TRIAL","ELISA","EXAMS","ANITA","GOING","STYLE","SAVES","SARAH","ANDRE","SPEND","SWIPE","MISTY","SALES","SWELL","FLAKY","MONEY","NAIVE","CYBER","IMAGE","COURT","MAYBE","BEGIN","ALAIN","TIMES","FADED","AGAIN","WAVES","POPUP","OFTEN","BREAK","ARMOR","GUIDE","SCALE","SPACE","EMAIL","ASKED","ROBOT","TYPOS","DEALS","STAFF","THIRD","LAVAL","APPLY","SORTS","START","MOSES","ALAKU","MONTH","LAYER","NOTES","WASTE","WHITE","THICK","MAGIC","BRAIN","AZURE","FIXED","NIGAQ","FIBER","PUNCH","ALTER","AGENT","LUCIE","CREEP","BIRDS","DEFER","BOOTH","RANDY","COAST","HIRES","TANKS","AVAST","TUKTU","CROSS","HENRI","BRIEF","TERMS","ASIDE","DUMAS","NIGHT","CLOUD","LOCKS","BAKER","FOLKS","THEIR","CLERK","SAIMA","SORRY","AGBOR","EDGES","KELLY","ADAPT","REPLY","STRIP","NEWER","NAMES","BACKS","AXIOM","INFRA","SLOWS","WHEEL","MACRO","DATES","FIRST","BUYER","POSED","WROTE","DIRTY","EMILY","LYSOL","PORCH","MANOR","ENTRY","ROUGH","CADOT","PICKS","WORSE","METER","PINGS","MARCH","HENRY","FAXED","STAGE","FLYNN","SCANS","LOGIN","MIRON","FRIED","INUIT","SLEDS","GUESS","DESKS","NAMED","TOWER","FAILS","ADULT","PLAIN","RESTS","TREND","CHAIN","DEREK","THINK","SHAWN","KICKS","QUEUE","BUILD","DRUMS","DOZEN","GRIEF","DEBIT","FUMES","INFOS","WARMS","REFIT","PORTS","URBAN","DUBAI","TRACK","COMES","STUFF","EPSON","FORTH","TEAMS","RINGS","TIRED","WHOLE","LEVER","WORDS","TRAYS","HUMAN","ALIVE","SHINY","CELLS","LOADS","USING","TOUCH","ENTER","QUOTE","EVERY","SPELL","HYDRO","FLEET","SHOWN","PLANE","TRUDY","THEFT","RULED","TOPIC","SOULS","KNOWN","STACK","TIMED","BRIAN","BIRTH","REFER","BINDS","DAVID","SLACK","CLASS","FILES","HEART","ANGMA","BOXED","ARIAL","ALARM","BOXES","AVAYA","NOVEL","HOTEL","SILLY","WATCH","WEBUI","POSTS","COMBO","EVENT","AGREE","MODEM","LUPIN","BROKE","COUNT","BEARS","APRIL","SHARE","BOOST","WORLD","UNITS","BYTES","GRIST","MEETS","ULAYU","FIGHT","DEATH","RAPID","AUDIO","CODES","SOUTH","HOSTS","WIRES","HENCE","AFTER","HELPS","PAINS","EXCEL","INFER","GRANT","PAINT","BROAD","VISIT","LIGHT","WRAPS","NURSE","THUMB","SHEER","CLOSE","GIVES","PHOTO","READS","BRING","LUCKY","ALONE","DIANE","SIZES","BOARD","SALTY","JPEGS","ANNOY","XEROX","QUIET","SELLS","DREAM","DRAWN","USERS","SPENT","PASTE","MIGHT","STORM","LOWER","SEVEN","FOUND","JACOB","PAPER","ADMIN","SLOPE","JOBIE","STATE","BEGUN","WHICH","ARROW","BOYER","PROOF","RISKS","AIPAI","BEING","CISCO","WHOSE","TRULY","SPEAK","TRUTH","PURGE","ELDER","BLANK","DEBTS","FISET","LOUIS","FORMS","RAISE","SMELL","AKIAK","ADDED","WILLY","EMPTY","LIKES","AWARE","ROYAL","NIKON","TURNS","LAURA","HEADS","JONAS","BILLY","BELOW","PIVOT","CODED","STOCK","WORST","CLUED","NEWLY","SIDED","BRACE","SHELL","CLICK","MIXUP","HIRED","DOORS","DRAFT","LOOKS","FROZE","DROPS","FINAL","WHILE","LATER","SERVE","SHORT","RYZEN","GOODS","CLONE","AUBIN","RIGHT","KINDS","SHELF","DATED","BRICK","RATED","INDEX","GREAT","POWER","JONES","CLARA","BRUCE","JIMMY","WHERE","RENEW","UNDUE","KEYED","OWNER","QUERY","GREET","CLARK","SOLVE","SPEED","TRIED","GMAIL","FETCH","EXACT","VISIO","COSTS","GUEST","BLAME","MERGE","HANDS","LINKS","RACKS","ISSUE","THING","YOURS","ROOMS","ZEBRA","OCEAN","KEVEN","DOUBT","CORDS","ASSET","WIDER","LIMIT","BOOKS","HOURS","MARSH","ALIGN","CASES","ACTED","CABIN","JACKS","NOISE","QUINN","VIDEO","USAGE","JOINT","KOTAK","MENUS","FLASH","ERROR","ICONS","EQUAL","BUNCH","SUCKS","AREAS","RISKY","AGING","TRIES","TOWED","BEATS","WHATS","ERASE","THREE","DOING","OFFER","THANK","EARLY","ARRAY","CRAZY","DAILY","TILLY","COVER"],MS=["AAHED","AALII","AARGH","AARTI","ABACA","ABACI","ABACS","ABAFT","ABAKA","ABAMP","ABAND","ABASE","ABASH","ABASK","ABATE","ABAYA","ABBAS","ABBED","ABBES","ABBEY","ABBOT","ABCEE","ABEAM","ABEAR","ABELE","ABERS","ABETS","ABHOR","ABIDE","ABIES","ABLED","ABLER","ABLES","ABLET","ABLOW","ABMHO","ABODE","ABOHM","ABOIL","ABOMA","ABOON","ABORD","ABORE","ABORT","ABRAM","ABRAY","ABRIM","ABRIN","ABRIS","ABSEY","ABSIT","ABUNA","ABUNE","ABUTS","ABUZZ","ABYES","ABYSM","ABYSS","ACAIS","ACARI","ACCAS","ACCOY","ACERB","ACERS","ACETA","ACHAR","ACHED","ACHES","ACHOO","ACIDS","ACIDY","ACING","ACINI","ACKEE","ACKER","ACMES","ACMIC","ACNED","ACNES","ACOCK","ACOLD","ACORN","ACRED","ACRES","ACRID","ACROS","ACTIN","ACTON","ACTOR","ACUTE","ACYLS","ADAGE","ADAWS","ADAYS","ADBOT","ADDAX","ADDER","ADDIO","ADDLE","ADEEM","ADEPT","ADHAN","ADIEU","ADIOS","ADITS","ADMAN","ADMEN","ADMIT","ADMIX","ADOBO","ADOPT","ADORE","ADORN","ADOWN","ADOZE","ADRAD","ADRED","ADSUM","ADUKI","ADUNC","ADUST","ADVEW","ADYTA","ADZED","ADZES","AECIA","AEDES","AEGIS","AEONS","AERIE","AEROS","AESIR","AFALD","AFARA","AFARS","AFEAR","AFFIX","AFIRE","AFLAJ","AFOOT","AFORE","AFOUL","AFRIT","AFROS","AGAMA","AGAMI","AGAPE","AGARS","AGAST","AGATE","AGAVE","AGAZE","AGENE","AGERS","AGGER","AGGIE","AGGRI","AGGRO","AGGRY","AGHAS","AGILA","AGILE","AGIOS","AGISM","AGIST","AGITA","AGLEE","AGLET","AGLEY","AGLOO","AGLOW","AGLUS","AGMAS","AGOGE","AGONE","AGONS","AGONY","AGOOD","AGORA","AGRIA","AGRIN","AGROS","AGUED","AGUES","AGUNA","AGUTI","AHEAP","AHENT","AHIGH","AHIND","AHING","AHINT","AHOLD","AHULL","AHURU","AIDAS","AIDED","AIDER","AIDES","AIDOI","AIDOS","AIERY","AIGAS","AIGHT","AILED","AIMED","AIMER","AINEE","AINGA","AIOLI","AIRED","AIRER","AIRNS","AIRTH","AIRTS","AISLE","AITCH","AITUS","AIVER","AIYEE","AIZLE","AJIES","AJIVA","AJUGA","AJWAN","AKEES","AKELA","AKENE","AKING","AKITA","AKKAS","ALAAP","ALACK","ALAMO","ALAND","ALANE","ALANG","ALANS","ALANT","ALAPA","ALAPS","ALARY","ALATE","ALAYS","ALBAS","ALBEE","ALBUM","ALCID","ALCOS","ALDEA","ALDER","ALDOL","ALECK","ALECS","ALEFS","ALEFT","ALEPH","ALEWS","ALEYE","ALFAS","ALGAE","ALGAL","ALGAS","ALGID","ALGIN","ALGOR","ALGUM","ALIBI","ALIEN","ALIFS","ALINE","ALIST","ALIYA","ALKIE","ALKOS","ALKYD","ALKYL","ALLAY","ALLEE","ALLEL","ALLEY","ALLIS","ALLOD","ALLOT","ALLOY","ALLYL","ALMAH","ALMAS","ALMEH","ALMES","ALMUD","ALMUG","ALODS","ALOED","ALOES","ALOFT","ALOHA","ALOIN","ALOOF","ALOOS","ALOUD","ALOWE","ALPHA","ALTAR","ALTHO","ALTOS","ALULA","ALUMS","ALURE","ALVAR","ALWAY","AMAHS","AMAIN","AMASS","AMATE","AMAUT","AMAZE","AMBAN","AMBER","AMBIT","AMBLE","AMBOS","AMBRY","AMEBA","AMEER","AMEND","AMENE","AMENS","AMENT","AMIAS","AMICE","AMICI","AMIDE","AMIDO","AMIDS","AMIES","AMIGA","AMIGO","AMINE","AMINO","AMINS","AMIRS","AMISS","AMITY","AMLAS","AMMAN","AMMON","AMMOS","AMNIA","AMNIC","AMNIO","AMOKS","AMOLE","AMORT","AMOUR","AMOVE","AMOWT","AMPED","AMPLE","AMPLY","AMPUL","AMRIT","AMUCK","AMUSE","AMYLS","ANANA","ANATA","ANCHO","ANCLE","ANCON","ANDRO","ANEAR","ANELE","ANENT","ANGAS","ANGEL","ANGER","ANGLE","ANGLO","ANGRY","ANGST","ANIGH","ANILE","ANILS","ANIMA","ANIME","ANIMI","ANION","ANISE","ANKER","ANKHS","ANKUS","ANLAS","ANNAL","ANNAS","ANNAT","ANNEX","ANNUL","ANOAS","ANODE","ANOLE","ANOMY","ANSAE","ANTAE","ANTAR","ANTAS","ANTED","ANTES","ANTIC","ANTIS","ANTRA","ANTRE","ANTSY","ANURA","ANVIL","ANYON","AORTA","APACE","APAGE","APAID","APAYD","APAYS","APEAK","APEEK","APERS","APERT","APERY","APGAR","APHID","APHIS","APIAN","APING","APIOL","APISH","APISM","APNEA","APODE","APODS","APOOP","APORT","APPAL","APPAY","APPEL","APPRO","APPUI","APPUY","APRES","APRON","APSES","APSIS","APSOS","APTED","APTER","AQUAE","AQUAS","ARABA","ARAKS","ARAME","ARARS","ARBAS","ARBOR","ARCED","ARCHI","ARCOS","ARCUS","ARDEB","ARDOR","ARDRI","AREAD","AREAE","AREAL","AREAR","ARECA","AREDD","AREDE","AREFY","AREIC","ARENA","ARENE","AREPA","ARERE","ARETE","ARETS","ARETT","ARGAL","ARGAN","ARGIL","ARGLE","ARGOL","ARGON","ARGOT","ARGUS","ARHAT","ARIAS","ARIEL","ARIKI","ARILS","ARIOT","ARISH","ARKED","ARLED","ARLES","ARMED","ARMER","ARMET","ARMIL","ARNAS","ARNUT","AROBA","AROHA","AROID","AROMA","AROSE","ARPAS","ARPEN","ARRAH","ARRAS","ARRET","ARRIS","ARROZ","ARSED","ARSES","ARSEY","ARSIS","ARSON","ARTAL","ARTEL","ARTIC","ARTIS","ARTSY","ARUHE","ARUMS","ARVAL","ARVEE","ARVOS","ARYLS","ASANA","ASCON","ASCOT","ASCUS","ASDIC","ASHED","ASHEN","ASHES","ASHET","ASKER","ASKEW","ASKOI","ASKOS","ASPEN","ASPER","ASPIC","ASPIE","ASPIS","ASPRO","ASSAI","ASSAM","ASSAY","ASSES","ASSEZ","ASSOT","ASTER","ASTIR","ASTUN","ASURA","ASWAY","ASWIM","ASYLA","ATAPS","ATAXY","ATIGI","ATILT","ATIMY","ATLAS","ATMAN","ATMAS","ATMOS","ATOCS","ATOKE","ATOKS","ATOLL","ATOMS","ATOMY","ATONE","ATONY","ATOPY","ATRIA","ATRIP","ATTAP","ATTAR","ATTIC","ATUAS","AUDAD","AUGER","AUGHT","AUGUR","AULAS","AULIC","AULOI","AULOS","AUMIL","AUNES","AUNTS","AUNTY","AURAE","AURAL","AURAR","AURAS","AUREI","AURES","AURIC","AURIS","AURUM","AUTOS","AUXIN","AVAIL","AVALE","AVANT","AVELS","AVENS","AVERS","AVERT","AVGAS","AVIAN","AVINE","AVION","AVISE","AVISO","AVIZE","AVOWS","AVYZE","AWAKE","AWARN","AWASH","AWATO","AWAVE","AWAYS","AWDLS","AWEEL","AWETO","AWFUL","AWING","AWMRY","AWNED","AWNER","AWOKE","AWOLS","AWORK","AXELS","AXIAL","AXILE","AXILS","AXING","AXION","AXITE","AXLED","AXLES","AXMAN","AXMEN","AXOID","AXONE","AXONS","AYAHS","AYAYA","AYELP","AYGRE","AYINS","AYONT","AYRES","AYRIE","AZANS","AZIDE","AZIDO","AZINE","AZLON","AZOIC","AZOLE","AZONS","AZOTE","AZOTH","AZUKI","AZURN","AZURY","AZYGY","AZYME","AZYMS","BAAED","BAALS","BABAS","BABEL","BABES","BABKA","BABOO","BABUL","BABUS","BACCA","BACCO","BACCY","BACHA","BACHS","BACON","BADDY","BADGE","BADLY","BAELS","BAFFS","BAFFY","BAFTS","BAGEL","BAGGY","BAGHS","BAGIE","BAHTS","BAHUS","BAHUT","BAILS","BAIRN","BAISA","BAITH","BAITS","BAIZA","BAIZE","BAJAN","BAJRA","BAJRI","BAJUS","BAKED","BAKEN","BAKES","BAKRA","BALAS","BALDS","BALDY","BALED","BALER","BALES","BALKS","BALKY","BALLS","BALLY","BALMS","BALMY","BALOO","BALSA","BALTI","BALUN","BALUS","BAMBI","BANAK","BANAL","BANCO","BANCS","BANDA","BANDH","BANDS","BANDY","BANED","BANES","BANGS","BANIA","BANJO","BANKS","BANNS","BANTS","BANTU","BANTY","BANYA","BAPUS","BARBE","BARBS","BARBY","BARCA","BARDE","BARDO","BARDS","BARDY","BARED","BARER","BARES","BARFI","BARFS","BARGE","BARIC","BARKS","BARKY","BARMS","BARMY","BARNS","BARNY","BARON","BARPS","BARRA","BARRE","BARRO","BARRY","BARYE","BASAL","BASAN","BASEN","BASER","BASES","BASHO","BASIJ","BASIL","BASIN","BASKS","BASON","BASSE","BASSI","BASSO","BASSY","BASTA","BASTE","BASTI","BASTO","BASTS","BATED","BATES","BATHE","BATHS","BATIK","BATON","BATTA","BATTS","BATTU","BATTY","BAUDS","BAUKS","BAULK","BAURS","BAVIN","BAWDS","BAWDY","BAWKS","BAWLS","BAWNS","BAWRS","BAWTY","BAYED","BAYER","BAYES","BAYLE","BAYOU","BAYTS","BAZAR","BAZOO","BEACH","BEADS","BEADY","BEAKS","BEAKY","BEALS","BEAMS","BEAMY","BEANO","BEANS","BEANY","BEARD","BEARE","BEAST","BEATH","BEATY","BEAUS","BEAUT","BEAUX","BEBOP","BECAP","BECKE","BECKS","BEDAD","BEDEL","BEDES","BEDEW","BEDIM","BEDYE","BEECH","BEEDI","BEEFS","BEEFY","BEEPS","BEERS","BEERY","BEETS","BEFIT","BEFOG","BEGAD","BEGAN","BEGAR","BEGAT","BEGEM","BEGET","BEGOT","BEGUM","BEIGE","BEIGY","BEINS","BEKAH","BELAH","BELAR","BELAY","BELCH","BELEE","BELGA","BELIE","BELLE","BELLS","BELON","BELTS","BEMAD","BEMAS","BEMIX","BEMUD","BENDS","BENDY","BENES","BENET","BENGA","BENIS","BENNE","BENNI","BENNY","BENTO","BENTS","BENTY","BEPAT","BERAY","BERES","BERET","BERGS","BERKO","BERKS","BERME","BERMS","BEROB","BERRY","BERTH","BERYL","BESAT","BESAW","BESEE","BESES","BESET","BESIT","BESOM","BESOT","BESTI","BESTS","BETAS","BETED","BETEL","BETES","BETHS","BETID","BETON","BETTA","BETTY","BEVEL","BEVER","BEVOR","BEVUE","BEVVY","BEWET","BEWIG","BEZEL","BEZES","BEZIL","BEZZY","BHAIS","BHAJI","BHANG","BHATS","BHELS","BHOOT","BHUNA","BHUTS","BIACH","BIALI","BIALY","BIBBS","BIBES","BIBLE","BICCY","BICEP","BICES","BIDDY","BIDED","BIDER","BIDES","BIDET","BIDIS","BIDON","BIELD","BIERS","BIFFO","BIFFS","BIFFY","BIFID","BIGAE","BIGGS","BIGGY","BIGHA","BIGHT","BIGLY","BIGOS","BIGOT","BIJOU","BIKED","BIKER","BIKES","BIKIE","BILBO","BILBY","BILED","BILES","BILGE","BILGY","BILKS","BIMAH","BIMAS","BIMBO","BINAL","BINDI","BINER","BINES","BINGE","BINGO","BINGS","BINGY","BINIT","BINKS","BINTS","BIOGS","BIOME","BIONT","BIOTA","BIPED","BIPOD","BIRCH","BIRKS","BIRLE","BIRLS","BIROS","BIRRS","BIRSE","BIRSY","BISES","BISKS","BISOM","BISON","BITCH","BITER","BITES","BITOS","BITOU","BITSY","BITTE","BITTS","BITTY","BIVIA","BIVVY","BIZES","BIZZO","BIZZY","BLABS","BLADE","BLADS","BLADY","BLAER","BLAES","BLAFF","BLAGS","BLAHS","BLAIN","BLAMS","BLAND","BLARE","BLART","BLASE","BLASH","BLAST","BLATE","BLATS","BLATT","BLAUD","BLAWN","BLAWS","BLAYS","BLAZE","BLEAK","BLEAR","BLEAT","BLEBS","BLECH","BLEED","BLEEP","BLEES","BLEND","BLENT","BLERT","BLESS","BLEST","BLETS","BLEYS","BLIMP","BLIMY","BLIND","BLING","BLINI","BLINK","BLINS","BLINY","BLIPS","BLISS","BLIST","BLITE","BLITS","BLITZ","BLIVE","BLOAT","BLOBS","BLOCS","BLOGS","BLOKE","BLOND","BLOOD","BLOOK","BLOOM","BLOOP","BLORE","BLOTS","BLOWN","BLOWS","BLOWY","BLUBS","BLUDE","BLUDS","BLUDY","BLUED","BLUER","BLUES","BLUET","BLUEY","BLUFF","BLUID","BLUME","BLUNK","BLUNT","BLURB","BLURS","BLURT","BLUSH","BLYPE","BOABS","BOAKS","BOARS","BOART","BOAST","BOATS","BOBAC","BOBAK","BOBAS","BOBOL","BOBOS","BOCCA","BOCCE","BOCCI","BOCHE","BOCKS","BODED","BODES","BODGE","BODHI","BODLE","BOEPS","BOETS","BOEUF","BOFFO","BOFFS","BOGAN","BOGEY","BOGGY","BOGIE","BOGLE","BOGUE","BOGUS","BOHEA","BOHOS","BOING","BOINK","BOITE","BOKED","BOKEH","BOKES","BOKOS","BOLAR","BOLAS","BOLDS","BOLES","BOLIX","BOLLS","BOLOS","BOLTS","BOLUS","BOMAS","BOMBE","BOMBO","BOMBS","BONCE","BONDS","BONED","BONER","BONES","BONEY","BONGO","BONGS","BONIE","BONKS","BONNE","BONNY","BONUS","BONZA","BONZE","BOOAI","BOOAY","BOOBS","BOOBY","BOODY","BOOED","BOOFY","BOOGY","BOOHS","BOOKY","BOOLS","BOOMS","BOOMY","BOONG","BOONS","BOORD","BOORS","BOOSE","BOOTY","BOOZE","BOOZY","BOPPY","BORAK","BORAL","BORAS","BORAX","BORDE","BORDS","BORED","BOREE","BOREL","BORER","BORES","BORGO","BORIC","BORKS","BORMS","BORNA","BORNE","BORON","BORTS","BORTY","BORTZ","BOSIE","BOSKS","BOSKY","BOSOM","BOSON","BOSSY","BOSUN","BOTAS","BOTCH","BOTEL","BOTES","BOTHY","BOTTE","BOTTS","BOTTY","BOUGE","BOUGH","BOUKS","BOULE","BOULT","BOUNS","BOURD","BOURG","BOURN","BOUSE","BOUSY","BOUTS","BOVID","BOWAT","BOWED","BOWEL","BOWER","BOWES","BOWET","BOWIE","BOWLS","BOWNE","BOWRS","BOWSE","BOXEN","BOXER","BOXLA","BOXTY","BOYAR","BOYAU","BOYED","BOYFS","BOYGS","BOYLA","BOYOS","BOYSY","BOZOS","BRAAI","BRACH","BRACK","BRACT","BRADS","BRAES","BRAGS","BRAID","BRAIL","BRAKE","BRAKS","BRAKY","BRAME","BRANE","BRANK","BRANS","BRANT","BRASH","BRASS","BRAST","BRATS","BRAVA","BRAVE","BRAVI","BRAVO","BRAWL","BRAWN","BRAWS","BRAXY","BRAYS","BRAZA","BRAZE","BREAD","BREAM","BREDE","BREDS","BREED","BREEM","BREER","BREES","BREID","BREIS","BREME","BRENS","BRENT","BRERE","BRERS","BREVE","BREWS","BREYS","BRIAR","BRIBE","BRIDE","BRIER","BRIES","BRIGS","BRIKI","BRIKS","BRILL","BRIMS","BRINE","BRINK","BRINS","BRINY","BRIOS","BRISE","BRISK","BRISS","BRITH","BRITS","BRITT","BRIZE","BROCH","BROCK","BRODS","BROGH","BROGS","BROIL","BROME","BROMO","BRONC","BROND","BROOD","BROOK","BROOL","BROOM","BROOS","BROSE","BROSY","BROTH","BROWN","BROWS","BRUGH","BRUIN","BRUIT","BRULE","BRUME","BRUNG","BRUNT","BRUSK","BRUST","BRUTE","BRUTS","BUATS","BUAZE","BUBAL","BUBAS","BUBBA","BUBBE","BUBBY","BUBUS","BUCHU","BUCKO","BUCKS","BUCKU","BUDAS","BUDDY","BUDGE","BUDIS","BUDOS","BUFFA","BUFFE","BUFFI","BUFFO","BUFFS","BUFFY","BUFOS","BUFTY","BUGGY","BUGLE","BUHLS","BUHRS","BUIKS","BUIST","BUKES","BULBS","BULGE","BULGY","BULKS","BULLA","BULLS","BULLY","BULSE","BUMBO","BUMFS","BUMPH","BUMPS","BUMPY","BUNAS","BUNCE","BUNCO","BUNDE","BUNDH","BUNDS","BUNDT","BUNDU","BUNDY","BUNGS","BUNGY","BUNIA","BUNJE","BUNJY","BUNKO","BUNKS","BUNNS","BUNNY","BUNTS","BUNTY","BUNYA","BUOYS","BUPPY","BURAN","BURAS","BURBS","BURDS","BURET","BURFI","BURGH","BURGS","BURIN","BURKA","BURKE","BURKS","BURLS","BURLY","BURNS","BURNT","BUROO","BURPS","BURQA","BURRO","BURRS","BURRY","BURSA","BURSE","BURST","BUSBY","BUSED","BUSES","BUSHY","BUSKS","BUSKY","BUSSU","BUSTI","BUSTS","BUSTY","BUTCH","BUTEO","BUTES","BUTLE","BUTOH","BUTTE","BUTTS","BUTTY","BUTUT","BUTYL","BUXOM","BUZZY","BWANA","BWAZI","BYDED","BYDES","BYKED","BYKES","BYLAW","BYRES","BYRLS","BYSSI","BYWAY","CAAED","CABAL","CABAS","CABBY","CABER","CABOB","CABOC","CABRE","CACAO","CACAS","CACKS","CACKY","CACTI","CADEE","CADES","CADET","CADGE","CADGY","CADIE","CADIS","CADRE","CAECA","CAESE","CAFES","CAFFS","CAGED","CAGER","CAGES","CAGEY","CAGOT","CAHOW","CAIDS","CAINS","CAIRD","CAIRN","CAJON","CAJUN","CAKED","CAKES","CAKEY","CALFS","CALID","CALIF","CALIX","CALKS","CALLA","CALMS","CALMY","CALOS","CALPA","CALPS","CALVE","CALYX","CAMAN","CAMAS","CAMEL","CAMEO","CAMES","CAMIS","CAMOS","CAMPI","CAMPO","CAMPS","CAMPY","CAMUS","CANAL","CANDY","CANED","CANEH","CANER","CANES","CANGS","CANID","CANNA","CANNS","CANNY","CANOE","CANSO","CANST","CANTO","CANTS","CANTY","CAPAS","CAPED","CAPER","CAPES","CAPEX","CAPHS","CAPIZ","CAPLE","CAPON","CAPOS","CAPOT","CAPRI","CAPUL","CAPUT","CARAP","CARAT","CARBO","CARBS","CARBY","CARDI","CARDY","CARED","CARER","CARES","CARET","CAREX","CARKS","CARLE","CARLS","CARNS","CARNY","CAROB","CAROL","CAROM","CARPI","CARPS","CARRS","CARSE","CARTA","CARTE","CARTS","CARVE","CARVY","CASAS","CASCO","CASED","CASKS","CASKY","CASTE","CASTS","CASUS","CATER","CATES","CATTY","CAUDA","CAUKS","CAULD","CAULK","CAULS","CAUMS","CAUPS","CAURI","CAUSA","CAVAS","CAVED","CAVEL","CAVER","CAVES","CAVIE","CAVIL","CAWED","CAWKS","CAXON","CEASE","CEAZE","CEBID","CECAL","CECUM","CEDAR","CEDED","CEDER","CEDES","CEDIS","CEIBA","CEILI","CEILS","CELEB","CELLA","CELLI","CELLO","CELOM","CELTS","CENSE","CENTO","CENTS","CENTU","CEORL","CEPES","CERCI","CERED","CERES","CERGE","CERIA","CERIC","CERNE","CEROC","CEROS","CERTS","CERTY","CESSE","CESTA","CESTI","CETES","CETYL","CEZVE","CHACE","CHACK","CHACO","CHADO","CHADS","CHAFE","CHAFF","CHAFT","CHAIS","CHALK","CHALS","CHAMP","CHAMS","CHANA","CHANG","CHANK","CHANT","CHAOS","CHAPE","CHAPS","CHAPT","CHARA","CHARD","CHARE","CHARK","CHARR","CHARS","CHARY","CHASE","CHASM","CHATS","CHAVE","CHAVS","CHAWK","CHAWS","CHAYA","CHAYS","CHEAP","CHEAT","CHEEK","CHEEP","CHEER","CHEFS","CHEKA","CHELA","CHELP","CHEMO","CHEMS","CHERE","CHERT","CHESS","CHEST","CHETH","CHEVY","CHEWS","CHEWY","CHIAO","CHIAS","CHIBS","CHICA","CHICH","CHICK","CHICO","CHICS","CHIDE","CHIEL","CHIKS","CHILD","CHILE","CHILI","CHILL","CHIMB","CHIME","CHIMO","CHIMP","CHINA","CHINE","CHING","CHINK","CHINO","CHINS","CHIRK","CHIRL","CHIRM","CHIRO","CHIRP","CHIRR","CHIRT","CHIRU","CHITS","CHIVE","CHIVS","CHIVY","CHIZZ","CHOCK","CHOCO","CHOCS","CHODE","CHOGS","CHOIL","CHOIR","CHOKE","CHOKO","CHOKY","CHOLA","CHOLI","CHOLO","CHOMP","CHONS","CHOOF","CHOOK","CHOOM","CHOON","CHOPS","CHORD","CHORE","CHOSE","CHOTA","CHOTT","CHOUT","CHOUX","CHOWK","CHOWS","CHUBS","CHUCK","CHUFA","CHUFF","CHUGS","CHUMP","CHUMS","CHUNK","CHURL","CHURN","CHURR","CHUSE","CHUTE","CHUTS","CHYLE","CHYME","CHYND","CIBOL","CIDED","CIDER","CIDES","CIELS","CIGAR","CIGGY","CILIA","CILLS","CIMAR","CIMEX","CINCH","CINCT","CINES","CINQS","CIONS","CIPPI","CIRCA","CIRCS","CIRES","CIRLS","CIRRI","CISSY","CISTS","CITAL","CITED","CITER","CITES","CIVES","CIVET","CIVIC","CIVIE","CIVVY","CLACH","CLACK","CLADE","CLADS","CLAES","CLAGS","CLAME","CLAMP","CLAMS","CLANG","CLANK","CLANS","CLAPS","CLAPT","CLARO","CLART","CLARY","CLASH","CLASP","CLAST","CLATS","CLAUT","CLAVE","CLAVI","CLAWS","CLAYS","CLEAT","CLECK","CLEEK","CLEEP","CLEFS","CLEFT","CLEGS","CLEIK","CLEMS","CLEPE","CLEPT","CLEVE","CLEWS","CLIED","CLIES","CLIFF","CLIFT","CLIMB","CLIME","CLINE","CLING","CLINK","CLINT","CLIPE","CLIPS","CLIPT","CLITS","CLOAK","CLOAM","CLODS","CLOFF","CLOGS","CLOKE","CLOMB","CLOMP","CLONK","CLONS","CLOOP","CLOOT","CLOPS","CLOTE","CLOTS","CLOUR","CLOUS","CLOUT","CLOVE","CLOWN","CLOWS","CLOYE","CLOYS","CLOZE","CLUBS","CLUCK","CLUES","CLUEY","CLUMP","CLUNG","CLUNK","CLYPE","CNIDA","COACH","COACT","COADY","COALA","COALS","COALY","COAPT","COARB","COATE","COATI","COATS","COBBS","COBBY","COBIA","COBLE","COBRA","COBZA","COCAS","COCCI","COCCO","COCKS","COCKY","COCOA","COCOS","CODAS","CODEC","CODEN","CODER","CODEX","CODON","COEDS","COFFS","COGIE","COGON","COGUE","COHAB","COHEN","COHOE","COHOG","COHOS","COIFS","COIGN","COILS","COINS","COIRS","COITS","COKED","COKES","COLAS","COLBY","COLDS","COLED","COLES","COLEY","COLIC","COLIN","COLLS","COLLY","COLOG","COLON","COLTS","COLZA","COMAE","COMAL","COMAS","COMBE","COMBI","COMBS","COMBY","COMER","COMET","COMFY","COMIC","COMIX","COMMA","COMMO","COMMS","COMMY","COMPO","COMPS","COMPT","COMTE","COMUS","CONCH","CONDO","CONED","CONES","CONEY","CONFS","CONGA","CONGE","CONGO","CONIA","CONIC","CONIN","CONKS","CONKY","CONNE","CONNS","CONTE","CONTO","CONUS","CONVO","COOCH","COOED","COOEE","COOER","COOEY","COOFS","COOKS","COOKY","COOLS","COOLY","COOMB","COOMS","COOMY","COONS","COOPS","COOPT","COOST","COOTS","COOZE","COPAL","COPAY","COPED","COPEN","COPER","COPES","COPPY","COPRA","COPSE","COPSY","COQUI","CORAL","CORAM","CORBE","CORBY","CORED","CORER","CORES","COREY","CORGI","CORIA","CORKS","CORKY","CORMS","CORNI","CORNO","CORNS","CORNU","CORNY","CORPS","CORSE","CORSO","COSEC","COSED","COSES","COSET","COSEY","COSIE","COSTA","COSTE","COTAN","COTED","COTES","COTHS","COTTA","COTTS","COUCH","COUDE","COUGH","COUPE","COUPS","COURB","COURD","COURE","COURS","COUTA","COUTH","COVED","COVEN","COVES","COVET","COVEY","COVIN","COWAL","COWAN","COWED","COWER","COWKS","COWLS","COWPS","COWRY","COXAE","COXAL","COXED","COXES","COXIB","COYAU","COYED","COYER","COYLY","COYPU","COZED","COZEN","COZES","COZEY","COZIE","CRAAL","CRABS","CRAFT","CRAGS","CRAIC","CRAIG","CRAKE","CRAME","CRAMP","CRAMS","CRANE","CRANK","CRANS","CRAPE","CRAPS","CRAPY","CRARE","CRASS","CRATE","CRAVE","CRAWS","CRAYS","CRAZE","CREAK","CREAM","CREDO","CREDS","CREED","CREEK","CREEL","CREES","CREME","CREMS","CRENA","CREPE","CREPS","CREPT","CREPY","CRESS","CREST","CREWE","CREWS","CRIAS","CRIBS","CRICK","CRIED","CRIER","CRIES","CRIME","CRIMP","CRIMS","CRINE","CRIOS","CRIPE","CRIPS","CRISE","CRISP","CRITH","CRITS","CROAK","CROCI","CROCK","CROCS","CROFT","CROGS","CROMB","CROME","CRONE","CRONK","CRONS","CRONY","CROOK","CROOL","CROON","CROPS","CRORE","CROST","CROUP","CROUT","CROWD","CROWN","CROWS","CROZE","CRUCK","CRUDE","CRUDO","CRUDS","CRUDY","CRUEL","CRUES","CRUET","CRUFT","CRUMB","CRUMP","CRUNK","CRUOR","CRURA","CRUSE","CRUSH","CRUST","CRUSY","CRUVE","CRWTH","CRYER","CRYPT","CTENE","CUBBY","CUBEB","CUBED","CUBER","CUBES","CUBIC","CUBIT","CUDDY","CUFFO","CUFFS","CUIFS","CUING","CUISH","CUITS","CUKES","CULCH","CULET","CULEX","CULLS","CULLY","CULMS","CULPA","CULTI","CULTS","CULTY","CUMEC","CUMIN","CUNDY","CUNEI","CUNIT","CUNTS","CUPEL","CUPID","CUPPA","CUPPY","CURAT","CURBS","CURCH","CURDS","CURDY","CURED","CURER","CURES","CURET","CURFS","CURIA","CURIE","CURIO","CURLI","CURLS","CURLY","CURNS","CURNY","CURRS","CURRY","CURSE","CURSI","CURST","CURVE","CURVY","CUSEC","CUSHY","CUSKS","CUSPS","CUSPY","CUSSO","CUSUM","CUTCH","CUTER","CUTES","CUTEY","CUTIE","CUTIN","CUTIS","CUTTO","CUTTY","CUTUP","CUVEE","CUZES","CWTCH","CYANO","CYANS","CYCAD","CYCAS","CYCLO","CYDER","CYLIX","CYMAE","CYMAR","CYMAS","CYMES","CYMOL","CYNIC","CYSTS","CYTES","CYTON","CZARS","DAALS","DABBA","DACES","DACHA","DACKS","DADAH","DADAS","DADDY","DADOS","DAFFS","DAFFY","DAGGA","DAGGY","DAGOS","DAHLS","DAIKO","DAINE","DAINT","DAIRY","DAKER","DALED","DALES","DALIS","DALLE","DALLY","DALTS","DAMAN","DAMAR","DAMES","DAMME","DAMNS","DAMPS","DAMPY","DANCE","DANCY","DANDY","DANGS","DANIO","DANKS","DANTS","DARAF","DARBS","DARCY","DARED","DARER","DARES","DARGA","DARGS","DARIC","DARIS","DARKS","DARKY","DARNS","DARRE","DARTS","DARZI","DASHI","DASHY","DATAL","DATER","DATOS","DATTO","DATUM","DAUBE","DAUBS","DAUBY","DAUDS","DAULT","DAUNT","DAURS","DAUTS","DAVEN","DAVIT","DAWAH","DAWDS","DAWED","DAWEN","DAWKS","DAWNS","DAWTS","DAYAN","DAYCH","DAYNT","DAZED","DAZER","DAZES","DEADS","DEAIR","DEANS","DEARE","DEARN","DEARS","DEARY","DEASH","DEAVE","DEAWS","DEAWY","DEBAG","DEBAR","DEBBY","DEBEL","DEBES","DEBUD","DEBUR","DEBUS","DEBUT","DEBYE","DECAD","DECAF","DECAL","DECAN","DECAY","DECKO","DECKS","DECOR","DECOS","DECOY","DECRY","DEDAL","DEEDS","DEEDY","DEELY","DEEMS","DEENS","DEEPS","DEERE","DEERS","DEETS","DEEVE","DEEVS","DEFAT","DEFFO","DEFIS","DEFOG","DEGAS","DEGUM","DEGUS","DEICE","DEIDS","DEIFY","DEIGN","DEILS","DEISM","DEIST","DEITY","DEKED","DEKES","DEKKO","DELED","DELES","DELFS","DELFT","DELIS","DELLS","DELLY","DELOS","DELPH","DELTA","DELTS","DELVE","DEMAN","DEMES","DEMIC","DEMIT","DEMOB","DEMOI","DEMON","DEMOS","DEMPT","DEMUR","DENAR","DENAY","DENCH","DENES","DENET","DENIM","DENSE","DENTS","DEOXY","DEPOT","DEPTH","DERAT","DERAY","DERBY","DERED","DERES","DERIG","DERMA","DERMS","DERNS","DERNY","DEROS","DERRO","DERRY","DERTH","DERVS","DESEX","DESHI","DESIS","DESSE","DETER","DETOX","DEUCE","DEVAS","DEVEL","DEVIL","DEVIS","DEVON","DEVOS","DEVOT","DEWAN","DEWAR","DEWAX","DEWED","DEXES","DEXIE","DHABA","DHAKS","DHALS","DHIKR","DHOBI","DHOLE","DHOLL","DHOLS","DHOTI","DHOWS","DHUTI","DIACT","DIALS","DIARY","DIAZO","DIBBS","DICED","DICER","DICES","DICEY","DICHT","DICKS","DICKY","DICOT","DICTA","DICTS","DICTY","DIDDY","DIDIE","DIDOS","DIDST","DIEBS","DIELS","DIENE","DIETS","DIFFS","DIGHT","DIKAS","DIKED","DIKER","DIKES","DIKEY","DILDO","DILLI","DILLS","DILLY","DIMBO","DIMER","DIMES","DIMLY","DIMPS","DINAR","DINED","DINER","DINES","DINGE","DINGO","DINGS","DINGY","DINIC","DINKS","DINKY","DINNA","DINOS","DINTS","DIODE","DIOLS","DIOTA","DIPPY","DIPSO","DIRAM","DIRER","DIRGE","DIRKE","DIRKS","DIRLS","DIRTS","DISAS","DISCI","DISCO","DISCS","DISHY","DISME","DITAL","DITAS","DITCH","DITED","DITES","DITSY","DITTO","DITTS","DITTY","DITZY","DIVAN","DIVAS","DIVED","DIVER","DIVES","DIVIS","DIVNA","DIVOS","DIVOT","DIVVY","DIWAN","DIXIE","DIXIT","DIYAS","DIZEN","DIZZY","DJINN","DJINS","DOABS","DOATS","DOBBY","DOBES","DOBIE","DOBLA","DOBRA","DOBRO","DOCHT","DOCOS","DOCUS","DODDY","DODGE","DODGY","DODOS","DOEKS","DOERS","DOEST","DOETH","DOFFS","DOGAN","DOGES","DOGEY","DOGGO","DOGGY","DOGIE","DOGMA","DOHYO","DOILT","DOILY","DOITS","DOJOS","DOLCE","DOLCI","DOLED","DOLES","DOLIA","DOLLS","DOLLY","DOLMA","DOLOR","DOLOS","DOLTS","DOMAL","DOMED","DOMES","DOMIC","DONAH","DONAS","DONEE","DONER","DONGA","DONGS","DONKO","DONNE","DONNY","DONOR","DONSY","DONUT","DOOBS","DOOCE","DOODY","DOOKS","DOOLE","DOOLS","DOOLY","DOOMS","DOOMY","DOONA","DOORN","DOOZY","DOPAS","DOPED","DOPER","DOPES","DOPEY","DORAD","DORBA","DORBS","DOREE","DORES","DORIC","DORIS","DORKS","DORKY","DORMS","DORMY","DORPS","DORRS","DORSA","DORSE","DORTS","DORTY","DOSAI","DOSAS","DOSED","DOSEH","DOSER","DOSES","DOSHA","DOTAL","DOTED","DOTER","DOTES","DOTTY","DOUAR","DOUCE","DOUCS","DOUGH","DOUKS","DOULA","DOUMA","DOUMS","DOUPS","DOURA","DOUSE","DOUTS","DOVED","DOVEN","DOVER","DOVES","DOVIE","DOWAR","DOWDS","DOWDY","DOWED","DOWEL","DOWER","DOWIE","DOWLE","DOWLS","DOWLY","DOWNA","DOWNS","DOWNY","DOWPS","DOWRY","DOWSE","DOWTS","DOXED","DOXES","DOXIE","DOYEN","DOYLY","DOZED","DOZER","DOZES","DRABS","DRACK","DRACO","DRAFF","DRAGS","DRAIL","DRAKE","DRAMA","DRAMS","DRANK","DRANT","DRAPE","DRAPS","DRATS","DRAVE","DRAWL","DRAWS","DRAYS","DREAD","DREAR","DRECK","DREED","DREER","DREES","DREGS","DREKS","DRENT","DRERE","DRESS","DREST","DREYS","DRIBS","DRICE","DRIED","DRIER","DRIES","DRIFT","DRILY","DRINK","DRIPS","DRIPT","DROID","DROIL","DROIT","DROKE","DROLE","DROLL","DROME","DRONY","DROOB","DROOG","DROOK","DROOL","DROOP","DROPT","DROSS","DROUK","DROVE","DROWN","DROWS","DRUBS","DRUGS","DRUID","DRUNK","DRUPE","DRUSE","DRUSY","DRUXY","DRYAD","DRYAS","DRYER","DRYLY","DSOBO","DSOMO","DUADS","DUALS","DUANS","DUARS","DUBBO","DUCAL","DUCAT","DUCES","DUCHY","DUCKS","DUCKY","DUCTS","DUDDY","DUDED","DUDES","DUELS","DUETS","DUETT","DUFFS","DUFUS","DUING","DUITS","DUKAS","DUKED","DUKES","DUKKA","DULCE","DULES","DULIA","DULLS","DULLY","DULSE","DUMBO","DUMBS","DUMKA","DUMKY","DUMMY","DUMPS","DUMPY","DUNAM","DUNCE","DUNCH","DUNES","DUNGS","DUNGY","DUNKS","DUNNO","DUNNY","DUNSH","DUNTS","DUOMI","DUOMO","DUPED","DUPER","DUPES","DUPLE","DUPLY","DUPPY","DURAL","DURAS","DURED","DURES","DURGY","DURNS","DUROC","DUROS","DUROY","DURRA","DURRS","DURRY","DURST","DURUM","DURZI","DUSKS","DUSKY","DUSTS","DUSTY","DUTCH","DUVET","DUXES","DWAAL","DWALE","DWALM","DWAMS","DWANG","DWARF","DWAUM","DWEEB","DWELL","DWELT","DWILE","DWINE","DYADS","DYERS","DYKED","DYKES","DYKEY","DYKON","DYNEL","DYNES","DZHOS","EAGLE","EAGRE","EALED","EALES","EANED","EARDS","EARED","EARLS","EARNS","EARNT","EARST","EARTH","EASED","EASEL","EASER","EASES","EASLE","EASTS","EATEN","EATER","EATHE","EAVED","EAVES","EBBED","EBBET","EBONS","EBONY","EBOOK","ECADS","ECHED","ECHES","ECLAT","ECRUS","EDEMA","EDGED","EDGER","EDICT","EDIFY","EDILE","EDITS","EDUCE","EDUCT","EEJIT","EENSY","EERIE","EEVEN","EEVNS","EFFED","EGADS","EGERS","EGEST","EGGAR","EGGED","EGGER","EGMAS","EGRET","EHING","EIDER","EIDOS","EIGHT","EIGNE","EIKED","EIKON","EILDS","EISEL","EJIDO","EKING","EKKAS","ELAIN","ELAND","ELANS","ELATE","ELBOW","ELCHI","ELDIN","ELECT","ELEGY","ELEMI","ELFED","ELFIN","ELIAD","ELIDE","ELINT","ELMEN","ELOGE","ELOGY","ELOIN","ELOPE","ELOPS","ELPEE","ELSIN","ELUDE","ELUTE","ELVAN","ELVEN","ELVER","ELVES","EMACS","EMBAR","EMBAY","EMBED","EMBER","EMBOG","EMBOW","EMBOX","EMBUS","EMCEE","EMEER","EMEND","EMERG","EMERY","EMEUS","EMICS","EMIRS","EMITS","EMMAS","EMMER","EMMET","EMMEW","EMMYS","EMOJI","EMONG","EMOTE","EMOVE","EMPTS","EMULE","EMURE","EMYDE","EMYDS","ENACT","ENARM","ENATE","ENDER","ENDEW","ENDOW","ENDUE","ENEMA","ENEMY","ENEWS","ENFIX","ENIAC","ENLIT","ENMEW","ENNOG","ENNUI","ENOKI","ENOLS","ENORM","ENOWS","ENROL","ENSEW","ENSKY","ENSUE","ENTIA","ENURE","ENURN","ENVOI","ENVOY","ENZYM","EORLS","EOSIN","EPACT","EPEES","EPHAH","EPHAS","EPHOD","EPHOR","EPICS","EPOCH","EPODE","EPOPT","EPOXY","EPRIS","EQUES","EQUID","ERBIA","ERECT","EREVS","ERGON","ERGOS","ERGOT","ERHUS","ERICK","ERICS","ERING","ERNED","ERNES","ERODE","EROSE","ERRED","ERSES","ERUCT","ERUGO","ERUPT","ERUVS","ERVEN","ERVIL","ESCAR","ESCOT","ESILE","ESKAR","ESKER","ESNES","ESSAY","ESSES","ESTER","ESTOC","ESTOP","ESTRO","ETAGE","ETAPE","ETATS","ETENS","ETHAL","ETHER","ETHIC","ETHNE","ETHOS","ETHYL","ETICS","ETNAS","ETTIN","ETTLE","ETUDE","ETUIS","ETWEE","ETYMA","EUGHS","EUKED","EUPAD","EUROS","EUSOL","EVADE","EVENS","EVERT","EVETS","EVHOE","EVICT","EVILS","EVITE","EVOHE","EVOKE","EWERS","EWEST","EWHOW","EWKED","EXALT","EXEAT","EXECS","EXEEM","EXEME","EXERT","EXFIL","EXIES","EXILE","EXINE","EXING","EXITS","EXODE","EXOME","EXONS","EXPAT","EXPEL","EXPOS","EXTOL","EXUDE","EXULS","EXULT","EXURB","EYASS","EYERS","EYING","EYOTS","EYRAS","EYRES","EYRIE","EYRIR","EZINE","FABBY","FABLE","FACED","FACER","FACET","FACIA","FACTA","FADDY","FADER","FADES","FADGE","FADOS","FAENA","FAERY","FAFFS","FAFFY","FAGGY","FAGIN","FAGOT","FAIKS","FAINE","FAINS","FAINT","FAIRS","FAIRY","FAKED","FAKER","FAKES","FAKEY","FAKIE","FAKIR","FALAJ","FAMED","FAMES","FANAL","FANDS","FANES","FANGA","FANGO","FANGS","FANKS","FANNY","FANON","FANOS","FANUM","FAQIR","FARAD","FARCE","FARCI","FARCY","FARDS","FARED","FARER","FARES","FARLE","FARLS","FARMS","FAROS","FARRO","FARSE","FARTS","FASCI","FASTI","FASTS","FATAL","FATED","FATES","FATLY","FATSO","FATTY","FATWA","FAUGH","FAULD","FAUNA","FAUNS","FAURD","FAUTS","FAUVE","FAVAS","FAVEL","FAVER","FAVES","FAVUS","FAWNS","FAWNY","FAYED","FAYER","FAYNE","FAYRE","FAZED","FAZES","FEALS","FEARE","FEARS","FEART","FEASE","FEAST","FEATS","FEAZE","FECAL","FECES","FECHT","FECIT","FECKS","FEDEX","FEEBS","FEEDS","FEENS","FEERS","FEESE","FEEZE","FEHME","FEIGN","FEINT","FEIST","FELCH","FELID","FELLA","FELLS","FELLY","FELON","FELTS","FELTY","FEMAL","FEMES","FEMME","FEMMY","FEMUR","FENCE","FENDS","FENDY","FENIS","FENKS","FENNY","FENTS","FEODS","FEOFF","FERAL","FERER","FERES","FERIA","FERLY","FERMI","FERMS","FERNS","FERNY","FERRY","FESSE","FESTA","FESTS","FESTY","FETAL","FETAS","FETED","FETES","FETID","FETOR","FETTA","FETTS","FETUS","FETWA","FEUAR","FEUDS","FEUED","FEVER","FEWER","FEYED","FEYER","FEYLY","FEZES","FEZZY","FIARS","FIATS","FIBRE","FIBRO","FICES","FICHE","FICHU","FICIN","FICOS","FICUS","FIDES","FIDGE","FIDOS","FIEFS","FIEND","FIENT","FIERE","FIERS","FIERY","FIEST","FIFED","FIFER","FIFES","FIFIS","FIFTH","FIFTY","FIGGY","FIGOS","FIKED","FIKES","FILAR","FILCH","FILER","FILET","FILII","FILKS","FILLE","FILLO","FILLY","FILMI","FILMS","FILMY","FILOS","FILTH","FILUM","FINCA","FINCH","FINED","FINER","FINES","FINIS","FINKS","FINNY","FINOS","FIORD","FIQHS","FIQUE","FIRED","FIRER","FIRES","FIRIE","FIRKS","FIRMS","FIRNS","FIRRY","FIRTH","FISCS","FISHY","FISKS","FISTS","FISTY","FITCH","FITLY","FITNA","FITTE","FITTS","FIVER","FIVES","FIXER","FIXIT","FIZZY","FJELD","FJORD","FLABS","FLACK","FLAFF","FLAGS","FLAIL","FLAIR","FLAKE","FLAKS","FLAME","FLAMM","FLAMS","FLAMY","FLANE","FLANK","FLANS","FLAPS","FLARE","FLARY","FLASK","FLATS","FLAVA","FLAWN","FLAWY","FLAXY","FLAYS","FLEAM","FLEAS","FLECK","FLEEK","FLEER","FLEES","FLEGS","FLEME","FLESH","FLEUR","FLEWS","FLEXI","FLEXO","FLEYS","FLICK","FLICS","FLIED","FLIER","FLIMP","FLIMS","FLING","FLINT","FLIPS","FLIRS","FLIRT","FLISK","FLITE","FLITS","FLITT","FLOBS","FLOCK","FLOCS","FLOES","FLOGS","FLONG","FLOOD","FLOPS","FLORA","FLORS","FLORY","FLOSH","FLOSS","FLOTA","FLOTE","FLOUR","FLOUT","FLOWN","FLOWS","FLUBS","FLUED","FLUES","FLUEY","FLUFF","FLUID","FLUKE","FLUKY","FLUME","FLUMP","FLUNG","FLUNK","FLUOR","FLURR","FLUSH","FLUTE","FLUTY","FLUYT","FLYBY","FLYER","FLYPE","FLYTE","FOALS","FOAMS","FOAMY","FOCAL","FOEHN","FOGEY","FOGGY","FOGIE","FOGLE","FOGOU","FOHNS","FOIDS","FOILS","FOINS","FOIST","FOLDS","FOLEY","FOLIA","FOLIC","FOLIE","FOLIO","FOLKY","FOLLY","FOMES","FONDA","FONDS","FONDU","FONES","FONLY","FOODS","FOODY","FOOLS","FOOTS","FOOTY","FORAM","FORAY","FORBS","FORBY","FORDO","FORDS","FOREL","FORES","FOREX","FORGE","FORGO","FORKS","FORKY","FORME","FORTE","FORTS","FORTY","FORUM","FORZA","FORZE","FOSSA","FOSSE","FOUAT","FOUDS","FOUER","FOUET","FOULE","FOULS","FOUNT","FOURS","FOUTH","FOVEA","FOWLS","FOWTH","FOXED","FOXES","FOXIE","FOYER","FOYLE","FOYNE","FRABS","FRACK","FRACT","FRAGS","FRAIL","FRAIM","FRANC","FRANK","FRAPE","FRAPS","FRASS","FRATE","FRATI","FRATS","FRAUS","FRAYS","FREAK","FREED","FREER","FREES","FREET","FREIT","FREMD","FRENA","FREON","FRERE","FRETS","FRIAR","FRIBS","FRIER","FRIES","FRIGS","FRILL","FRISE","FRISK","FRIST","FRITH","FRITS","FRITT","FRIZE","FRIZZ","FROCK","FROES","FROGS","FROND","FRONS","FRORE","FRORN","FRORY","FROSH","FROST","FROTH","FROWN","FROWS","FROWY","FRUGS","FRUIT","FRUMP","FRUSH","FRUST","FRYER","FUBAR","FUBBY","FUBSY","FUCKS","FUCUS","FUDDY","FUDGE","FUDGY","FUELS","FUERO","FUFFS","FUFFY","FUGAL","FUGGY","FUGIE","FUGIO","FUGLE","FUGLY","FUGUE","FUGUS","FUJIS","FULLS","FUMED","FUMER","FUMET","FUNDI","FUNDS","FUNDY","FUNGI","FUNGO","FUNGS","FUNKS","FUNKY","FURAL","FURAN","FURCA","FURLS","FUROL","FUROR","FURRS","FURRY","FURTH","FURZE","FURZY","FUSED","FUSEE","FUSEL","FUSES","FUSIL","FUSKS","FUSSY","FUSTS","FUSTY","FUTON","FUZED","FUZEE","FUZES","FUZIL","FUZZY","FYCES","FYKED","FYKES","FYLES","FYRDS","FYTTE","GABBA","GABBY","GABLE","GADDI","GADES","GADGE","GADID","GADIS","GADJE","GADJO","GADSO","GAFFE","GAFFS","GAGED","GAGER","GAGES","GAIDS","GAILY","GAINS","GAIRS","GAITA","GAITS","GAITT","GAJOS","GALAH","GALAS","GALAX","GALEA","GALED","GALES","GALLS","GALLY","GALOP","GALUT","GALVO","GAMAS","GAMAY","GAMBA","GAMBE","GAMBO","GAMBS","GAMED","GAMER","GAMES","GAMEY","GAMIC","GAMIN","GAMMA","GAMME","GAMMY","GAMPS","GAMUT","GANCH","GANDY","GANEF","GANEV","GANGS","GANJA","GANOF","GANTS","GAOLS","GAPED","GAPER","GAPES","GAPOS","GAPPY","GARBE","GARBO","GARBS","GARDA","GARES","GARIS","GARMS","GARNI","GARRE","GARTH","GARUM","GASES","GASPS","GASPY","GASSY","GASTS","GATCH","GATED","GATER","GATES","GATHS","GATOR","GAUCH","GAUCY","GAUDS","GAUDY","GAUGE","GAUJE","GAULT","GAUMS","GAUMY","GAUNT","GAUPS","GAURS","GAUSS","GAUZE","GAUZY","GAVEL","GAVOT","GAWCY","GAWDS","GAWKS","GAWKY","GAWPS","GAWSY","GAYAL","GAYER","GAYLY","GAZAL","GAZAR","GAZED","GAZER","GAZES","GAZON","GAZOO","GEALS","GEANS","GEARE","GEARS","GEATS","GEBUR","GECKO","GECKS","GEEKS","GEEKY","GEEPS","GEESE","GEEST","GEIST","GEITS","GELDS","GELEE","GELID","GELLY","GELTS","GEMEL","GEMMA","GEMMY","GEMOT","GENAL","GENAS","GENES","GENET","GENIC","GENIE","GENII","GENIP","GENNY","GENOA","GENOM","GENRE","GENRO","GENTS","GENTY","GENUA","GENUS","GEODE","GEOID","GERAH","GERBE","GERES","GERLE","GERMS","GERMY","GERNE","GESSE","GESSO","GESTE","GESTS","GETAS","GETUP","GEUMS","GEYAN","GEYER","GHAST","GHATS","GHAUT","GHAZI","GHEES","GHEST","GHOUL","GHYLL","GIBED","GIBEL","GIBER","GIBES","GIBLI","GIBUS","GIDDY","GIGAS","GIGHE","GIGOT","GIGUE","GILAS","GILDS","GILET","GILLS","GILLY","GILPY","GILTS","GIMEL","GIMME","GIMPS","GIMPY","GINCH","GINGE","GINGS","GINKS","GINNY","GINZO","GIPON","GIPPO","GIPPY","GIPSY","GIRDS","GIRLY","GIRNS","GIRON","GIROS","GIRRS","GIRSH","GIRTH","GIRTS","GISMO","GISMS","GISTS","GITCH","GITES","GIUST","GIVED","GIVER","GIZMO","GLACE","GLADE","GLADS","GLADY","GLAIK","GLAIR","GLAMS","GLAND","GLANS","GLARE","GLARY","GLAUM","GLAUR","GLAZE","GLAZY","GLEAM","GLEAN","GLEBA","GLEBE","GLEBY","GLEDE","GLEDS","GLEED","GLEEK","GLEES","GLEET","GLEIS","GLENS","GLENT","GLEYS","GLIAL","GLIAS","GLIBS","GLIDE","GLIFF","GLIFT","GLIKE","GLIME","GLIMS","GLINT","GLISK","GLITS","GLITZ","GLOAM","GLOAT","GLOBI","GLOBS","GLOBY","GLODE","GLOGG","GLOMS","GLOOM","GLOOP","GLOPS","GLORY","GLOST","GLOUT","GLOVE","GLOWS","GLOZE","GLUED","GLUER","GLUES","GLUEY","GLUGS","GLUME","GLUMS","GLUON","GLUTE","GLUTS","GLYPH","GNARL","GNARR","GNARS","GNASH","GNATS","GNAWN","GNAWS","GNOME","GNOWS","GOADS","GOAFS","GOALS","GOARY","GOATS","GOATY","GOBAN","GOBAR","GOBBI","GOBBO","GOBBY","GOBIS","GOBOS","GODET","GODLY","GODSO","GOELS","GOERS","GOEST","GOETH","GOETY","GOFER","GOFFS","GOGGA","GOGOS","GOIER","GOJIS","GOLDS","GOLDY","GOLEM","GOLES","GOLFS","GOLLY","GOLPE","GOLPS","GOMBO","GOMER","GOMPA","GONAD","GONCH","GONEF","GONER","GONGS","GONIA","GONIF","GONKS","GONOF","GONYS","GONZO","GOOBY","GOODY","GOOEY","GOOFS","GOOFY","GOOGS","GOOKS","GOOKY","GOOLD","GOOLS","GOOLY","GOONS","GOONY","GOOPS","GOOPY","GOORS","GOORY","GOOSE","GOOSY","GOPAK","GOPIK","GORAL","GORAS","GORED","GORES","GORGE","GORIS","GORMS","GORMY","GORPS","GORSE","GORSY","GOSHT","GOSSE","GOTCH","GOTHS","GOTHY","GOTTA","GOUCH","GOUGE","GOUKS","GOURA","GOURD","GOUTS","GOUTY","GOWAN","GOWDS","GOWFS","GOWKS","GOWLS","GOWNS","GOXES","GOYIM","GOYLE","GRAAL","GRABS","GRADE","GRADS","GRAFF","GRAFT","GRAIL","GRAIN","GRAIP","GRAMA","GRAME","GRAMP","GRAMS","GRANA","GRANS","GRAPE","GRAPY","GRASS","GRAVE","GRAVS","GRAVY","GRAYS","GRAZE","GREBE","GREBO","GRECE","GREED","GREEK","GREES","GREGE","GREGO","GREIN","GRENS","GRESE","GREVE","GREWS","GREYS","GRICE","GRIDE","GRIDS","GRIFF","GRIFT","GRIGS","GRIKE","GRIME","GRIMY","GRIND","GRINS","GRIOT","GRIPE","GRIPS","GRIPT","GRIPY","GRISE","GRISY","GRITH","GRITS","GRIZE","GROAN","GROAT","GRODY","GROGS","GROIN","GROKS","GROMA","GRONE","GROOF","GROOM","GROPE","GROSS","GROSZ","GROTS","GROUF","GROUT","GROVE","GROVY","GROWL","GROWN","GROWS","GRRLS","GRRRL","GRUBS","GRUED","GRUEL","GRUES","GRUFE","GRUFF","GRUME","GRUMP","GRUND","GRUNT","GRYCE","GRYDE","GRYKE","GRYPE","GRYPT","GUACO","GUANA","GUANO","GUANS","GUARS","GUAVA","GUCKS","GUCKY","GUDES","GUFFS","GUGAS","GUIDS","GUILD","GUILE","GUILT","GUIMP","GUIRO","GUISE","GULAG","GULAR","GULAS","GULCH","GULES","GULET","GULFS","GULFY","GULLS","GULLY","GULPH","GULPS","GULPY","GUMBO","GUMMA","GUMMI","GUMMY","GUMPS","GUNDY","GUNGE","GUNGY","GUNKS","GUNKY","GUNNY","GUPPY","GUQIN","GURDY","GURGE","GURLS","GURLY","GURNS","GURRY","GURSH","GURUS","GUSHY","GUSLA","GUSLE","GUSLI","GUSSY","GUSTO","GUSTS","GUSTY","GUTSY","GUTTA","GUTTY","GUYED","GUYLE","GUYOT","GUYSE","GWINE","GYALS","GYANS","GYBED","GYBES","GYELD","GYMPS","GYNAE","GYNIE","GYNNY","GYNOS","GYOZA","GYPOS","GYPPO","GYPPY","GYPSY","GYRAL","GYRED","GYRES","GYRON","GYROS","GYRUS","GYTES","GYVED","GYVES","HAAFS","HAARS","HABIT","HABLE","HABUS","HACEK","HACKS","HADAL","HADED","HADES","HADJI","HADST","HAEMS","HAETS","HAFFS","HAFIZ","HAFTS","HAGGS","HAHAS","HAICK","HAIKA","HAIKS","HAIKU","HAILS","HAILY","HAINS","HAINT","HAIRS","HAIRY","HAITH","HAJES","HAJIS","HAJJI","HAKAM","HAKAS","HAKEA","HAKES","HAKIM","HAKUS","HALAL","HALED","HALER","HALES","HALFA","HALFS","HALID","HALLO","HALLS","HALMA","HALMS","HALON","HALOS","HALSE","HALVA","HALVE","HALWA","HAMAL","HAMBA","HAMED","HAMES","HAMMY","HAMZA","HANAP","HANCE","HANCH","HANDY","HANGI","HANGS","HANKS","HANKY","HANSA","HANSE","HANTS","HAOLE","HAOMA","HAPAX","HAPLY","HAPPI","HAPUS","HARAM","HARDS","HARDY","HARED","HAREM","HARES","HARIM","HARKS","HARLS","HARMS","HARNS","HAROS","HARPS","HARPY","HARTS","HASHY","HASKS","HASPS","HASTA","HASTE","HASTY","HATCH","HATED","HATER","HATES","HATHA","HAUDS","HAUFS","HAUGH","HAULD","HAULM","HAULS","HAULT","HAUNS","HAUNT","HAUSE","HAUTE","HAVEN","HAVER","HAVES","HAVOC","HAWED","HAWKS","HAWMS","HAWSE","HAYED","HAYER","HAYEY","HAYLE","HAZAN","HAZED","HAZEL","HAZER","HAZES","HEADY","HEALD","HEALS","HEAME","HEAPS","HEAPY","HEARE","HEARS","HEAST","HEATH","HEAVE","HEBEN","HEBES","HECHT","HECKS","HEDER","HEDGE","HEDGY","HEEDS","HEEDY","HEELS","HEEZE","HEFTE","HEFTS","HEFTY","HEIDS","HEIGH","HEILS","HEIRS","HEIST","HEJAB","HEJRA","HELED","HELES","HELIO","HELIX","HELLS","HELMS","HELOS","HELOT","HELVE","HEMAL","HEMES","HEMIC","HEMIN","HEMPS","HEMPY","HENCH","HENDS","HENGE","HENNA","HENNY","HENTS","HEPAR","HERBS","HERBY","HERDS","HERES","HERLS","HERMA","HERMS","HERNS","HERON","HEROS","HERRY","HERSE","HERTZ","HERYE","HESPS","HESTS","HETES","HETHS","HEUCH","HEUGH","HEVEA","HEWED","HEWER","HEWGH","HEXAD","HEXED","HEXER","HEXES","HEXYL","HEYED","HIANT","HICKS","HIDED","HIDER","HIDES","HIEMS","HIGHS","HIGHT","HIJAB","HIJRA","HIKED","HIKER","HIKES","HIKOI","HILAR","HILCH","HILLO","HILLS","HILLY","HILTS","HILUM","HILUS","HIMBO","HINAU","HINDS","HINGE","HINGS","HINKY","HINNY","HIOIS","HIPLY","HIPPO","HIPPY","HIREE","HIRER","HISSY","HISTS","HITCH","HITHE","HIVED","HIVER","HIVES","HIZEN","HOAED","HOAGY","HOARD","HOARS","HOARY","HOAST","HOBBY","HOBOS","HOCKS","HOCUS","HODAD","HODJA","HOERS","HOGAN","HOGEN","HOGGS","HOGHS","HOHED","HOICK","HOIED","HOIKS","HOING","HOISE","HOIST","HOKAS","HOKED","HOKES","HOKEY","HOKIS","HOKKU","HOKUM","HOLED","HOLES","HOLEY","HOLKS","HOLLA","HOLLO","HOLLY","HOLME","HOLMS","HOLON","HOLOS","HOLTS","HOMAS","HOMED","HOMER","HOMES","HOMEY","HOMIE","HOMME","HOMOS","HONAN","HONDA","HONDS","HONED","HONER","HONES","HONEY","HONGI","HONGS","HONKS","HONKY","HONOR","HOOCH","HOODS","HOODY","HOOEY","HOOFS","HOOKA","HOOKS","HOOKY","HOOLY","HOONS","HOOPS","HOORD","HOORS","HOOSH","HOOTS","HOOTY","HOOVE","HOPAK","HOPED","HOPER","HOPES","HOPPY","HORAH","HORAL","HORAS","HORDE","HORIS","HORKS","HORME","HORNS","HORNY","HORSE","HORST","HORSY","HOSED","HOSEL","HOSEN","HOSER","HOSES","HOSEY","HOSTA","HOTCH","HOTEN","HOTLY","HOTTY","HOUFF","HOUFS","HOUGH","HOUND","HOURI","HOUTS","HOVEA","HOVED","HOVEL","HOVEN","HOVER","HOVES","HOWBE","HOWDY","HOWES","HOWFF","HOWFS","HOWKS","HOWLS","HOWRE","HOWSO","HOXED","HOXES","HOYAS","HOYED","HOYLE","HUBBY","HUCKS","HUDNA","HUDUD","HUERS","HUFFS","HUFFY","HUGER","HUGGY","HUHUS","HUIAS","HULAS","HULES","HULKS","HULKY","HULLO","HULLS","HULLY","HUMAS","HUMFS","HUMIC","HUMID","HUMPH","HUMPS","HUMPY","HUMUS","HUNCH","HUNKS","HUNKY","HUNTS","HURDS","HURLS","HURLY","HURRA","HURRY","HURST","HURTS","HUSHY","HUSKS","HUSKY","HUSOS","HUSSY","HUTCH","HUTIA","HUZZA","HUZZY","HWYLS","HYDRA","HYENA","HYENS","HYGGE","HYING","HYKES","HYLAS","HYLEG","HYLES","HYLIC","HYMEN","HYMNS","HYNDE","HYOID","HYPED","HYPER","HYPES","HYPHA","HYPHY","HYPOS","HYRAX","HYSON","HYTHE","IAMBI","IAMBS","IBRIK","ICERS","ICHED","ICHES","ICHOR","ICIER","ICILY","ICING","ICKER","ICKLE","ICTAL","ICTIC","ICTUS","IDANT","IDEES","IDENT","IDIOM","IDIOT","IDLED","IDLER","IDLES","IDOLA","IDOLS","IDYLL","IDYLS","IFTAR","IGAPO","IGGED","IGLUS","IHRAM","IKANS","IKATS","IKONS","ILEAC","ILEAL","ILEUM","ILEUS","ILIAC","ILIAD","ILIAL","ILIUM","ILLER","ILLTH","IMAGO","IMAMS","IMARI","IMAUM","IMBAR","IMBED","IMBUE","IMIDE","IMIDO","IMIDS","IMINE","IMINO","IMMEW","IMMIT","IMMIX","IMPED","IMPEL","IMPIS","IMPLY","IMPOT","IMPRO","IMSHI","IMSHY","INANE","INAPT","INARM","INBYE","INCEL","INCLE","INCOG","INCUS","INCUT","INDEW","INDIA","INDIE","INDOL","INDOW","INDRI","INDUE","INEPT","INERM","INERT","INFIX","INGAN","INGLE","INGOT","INION","INKED","INKER","INKLE","INLAY","INLET","INNED","INNIT","INORB","INRUN","INSET","INSPO","INTER","INTIL","INTIS","INTRA","INTRO","INULA","INURE","INURN","INUST","INVAR","INWIT","IODIC","IODID","IODIN","IONIC","IOTAS","IPPON","IRADE","IRATE","IRIDS","IRING","IRKED","IROKO","IRONE","IRONS","ISBAS","ISHES","ISLED","ISLES","ISLET","ISNAE","ISSEI","ISTLE","ITCHY","ITHER","IVIED","IVIES","IVORY","IXIAS","IXNAY","IXORA","IXTLE","IZARD","IZARS","IZZAT","JAAPS","JABOT","JACAL","JACKY","JADED","JADES","JAFAS","JAFFA","JAGAS","JAGER","JAGGS","JAGGY","JAGIR","JAGRA","JAILS","JAKER","JAKES","JAKEY","JALAP","JALOP","JAMBE","JAMBO","JAMBS","JAMBU","JAMES","JAMMY","JAMON","JANES","JANNS","JANNY","JANTY","JAPAN","JAPED","JAPER","JAPES","JARKS","JARLS","JARPS","JARTA","JARUL","JASEY","JASPE","JASPS","JATOS","JAUKS","JAUNT","JAUPS","JAVAS","JAVEL","JAWAN","JAWED","JAXIE","JAZZY","JEANS","JEATS","JEBEL","JEDIS","JEELS","JEELY","JEEPS","JEERS","JEEZE","JEFES","JEFFS","JEHAD","JEHUS","JELAB","JELLO","JELLS","JELLY","JEMBE","JEMMY","JENNY","JEONS","JERID","JERKS","JERKY","JERRY","JESSE","JESTS","JESUS","JETES","JETON","JETTY","JEUNE","JEWED","JEWEL","JEWIE","JHALA","JIAOS","JIBBA","JIBBS","JIBED","JIBER","JIBES","JIFFS","JIFFY","JIGGY","JIGOT","JIHAD","JILLS","JILTS","JIMPY","JINGO","JINKS","JINNE","JINNI","JINNS","JIRDS","JIRGA","JIRRE","JISMS","JIVED","JIVER","JIVES","JIVEY","JNANA","JOBED","JOBES","JOCKO","JOCKS","JOCKY","JOCOS","JODEL","JOEYS","JOHNS","JOIST","JOKED","JOKER","JOKEY","JOKOL","JOLED","JOLES","JOLLS","JOLTS","JOLTY","JOMON","JOMOS","JONGS","JONTY","JOOKS","JORAM","JORUM","JOTAS","JOTTY","JOTUN","JOUAL","JOUGS","JOUKS","JOULE","JOURS","JOUST","JOWAR","JOWED","JOWLS","JOWLY","JOYED","JUBAS","JUBES","JUCOS","JUDAS","JUDGE","JUDGY","JUDOS","JUGAL","JUGUM","JUICE","JUICY","JUJUS","JUKED","JUKES","JUKUS","JULEP","JUMAR","JUMBO","JUMBY","JUMPS","JUMPY","JUNCO","JUNKS","JUNKY","JUNTA","JUNTO","JUPES","JUPON","JURAL","JURAT","JUREL","JURES","JUROR","JUSTS","JUTES","JUTTY","JUVES","JUVIE","KAAMA","KABAB","KABAR","KABOB","KACHA","KACKS","KADAI","KADES","KADIS","KAFIR","KAGOS","KAGUS","KAHAL","KAIAK","KAIDS","KAIES","KAIFS","KAIKA","KAIKS","KAILS","KAIMS","KAING","KAINS","KAKAS","KAKIS","KALAM","KALES","KALIF","KALIS","KALPA","KAMAS","KAMES","KAMIK","KAMIS","KAMME","KANAE","KANAS","KANDY","KANEH","KANES","KANGA","KANGS","KANJI","KANTS","KANZU","KAONS","KAPAS","KAPHS","KAPOK","KAPOW","KAPPA","KAPUS","KAPUT","KARAS","KARAT","KARKS","KARMA","KARNS","KAROO","KAROS","KARRI","KARST","KARSY","KARTS","KARZY","KASHA","KASME","KATAL","KATAS","KATIS","KATTI","KAUGH","KAURI","KAURU","KAURY","KAVAL","KAVAS","KAWAS","KAWAU","KAWED","KAYAK","KAYLE","KAYOS","KAZIS","KAZOO","KBARS","KEBAB","KEBAR","KEBOB","KECKS","KEDGE","KEDGY","KEECH","KEEFS","KEEKS","KEELS","KEEMA","KEENO","KEENS","KEETS","KEEVE","KEFIR","KEHUA","KEIRS","KELEP","KELIM","KELLS","KELPS","KELPY","KELTS","KELTY","KEMBO","KEMBS","KEMPS","KEMPT","KEMPY","KENAF","KENCH","KENDO","KENOS","KENTE","KENTS","KEPIS","KERBS","KEREL","KERFS","KERKY","KERMA","KERNE","KERNS","KEROS","KERRY","KERVE","KESAR","KESTS","KETAS","KETCH","KETES","KETOL","KEVEL","KEVIL","KEXES","KEYER","KHADI","KHAFS","KHAKI","KHANS","KHAPH","KHATS","KHAYA","KHAZI","KHEDA","KHETH","KHETS","KHOJA","KHORS","KHOUM","KHUDS","KIAAT","KIACK","KIANG","KIBBE","KIBBI","KIBEI","KIBES","KIBLA","KICKY","KIDDO","KIDDY","KIDEL","KIDGE","KIEFS","KIERS","KIEVE","KIEVS","KIGHT","KIKES","KIKOI","KILEY","KILIM","KILLS","KILNS","KILOS","KILPS","KILTS","KILTY","KIMBO","KINAS","KINDA","KINDY","KINES","KINGS","KININ","KINKS","KINKY","KINOS","KIORE","KIOSK","KIPES","KIPPA","KIPPS","KIRBY","KIRKS","KIRNS","KIRRI","KISAN","KISSY","KISTS","KITED","KITER","KITES","KITHE","KITHS","KITUL","KIVAS","KIWIS","KLANG","KLAPS","KLETT","KLICK","KLIEG","KLIKS","KLONG","KLOOF","KLUGE","KLUTZ","KNACK","KNAGS","KNAPS","KNARL","KNARS","KNAUR","KNAVE","KNAWE","KNEAD","KNEED","KNEEL","KNEES","KNELL","KNELT","KNIFE","KNISH","KNITS","KNIVE","KNOBS","KNOCK","KNOLL","KNOPS","KNOSP","KNOTS","KNOUT","KNOWE","KNUBS","KNURL","KNURR","KNURS","KNUTS","KOALA","KOANS","KOAPS","KOBAN","KOBOS","KOELS","KOFFS","KOFTA","KOGAL","KOHAS","KOHEN","KOHLS","KOINE","KOJIS","KOKAM","KOKAS","KOKER","KOKRA","KOKUM","KOLAS","KOLOS","KOMBU","KONBU","KONDO","KONKS","KOOKS","KOOKY","KOORI","KOPEK","KOPHS","KOPJE","KOPPA","KORAI","KORAS","KORAT","KORES","KORMA","KOROS","KORUN","KORUS","KOSES","KOTCH","KOTOS","KOTOW","KOURA","KRAAL","KRABS","KRAFT","KRAIS","KRAIT","KRANG","KRANS","KRANZ","KRAUT","KRAYS","KREEP","KRENG","KREWE","KRILL","KRONA","KRONE","KROON","KRUBI","KRUNK","KSARS","KUBIE","KUDOS","KUDUS","KUDZU","KUFIS","KUGEL","KUIAS","KUKRI","KUKUS","KULAK","KULAN","KULAS","KULFI","KUMIS","KUMYS","KURIS","KURRE","KURTA","KURUS","KUSSO","KUTAS","KUTCH","KUTIS","KUTUS","KUZUS","KVASS","KVELL","KWELA","KYACK","KYAKS","KYANG","KYARS","KYATS","KYBOS","KYDST","KYLES","KYLIE","KYLIN","KYLIX","KYLOE","KYNDE","KYNDS","KYPES","KYRIE","KYTES","KYTHE","LAARI","LABDA","LABIA","LABIS","LABRA","LACED","LACER","LACES","LACET","LACEY","LACKS","LADDY","LADED","LADEN","LADER","LADES","LADLE","LAERS","LAEVO","LAGAN","LAGER","LAHAL","LAHAR","LAICH","LAICS","LAIDS","LAIGH","LAIKA","LAIKS","LAIRD","LAIRS","LAIRY","LAITH","LAITY","LAKED","LAKER","LAKES","LAKHS","LAKIN","LAKSA","LALDY","LALLS","LAMAS","LAMBS","LAMBY","LAMED","LAMER","LAMES","LAMIA","LAMMY","LAMPS","LANAI","LANAS","LANCE","LANCH","LANDE","LANDS","LANES","LANKS","LANKY","LANTS","LAPEL","LAPIN","LAPIS","LAPJE","LAPSE","LARCH","LARDS","LARDY","LAREE","LARES","LARGO","LARIS","LARKS","LARKY","LARNS","LARNT","LARUM","LARVA","LASED","LASES","LASSI","LASSO","LASSU","LASSY","LATAH","LATCH","LATED","LATEN","LATEX","LATHE","LATHI","LATHS","LATHY","LATKE","LATTE","LATUS","LAUAN","LAUCH","LAUDS","LAUFS","LAUGH","LAUND","LAVAS","LAVED","LAVER","LAVES","LAVRA","LAVVY","LAWED","LAWER","LAWIN","LAWKS","LAWNS","LAWNY","LAXED","LAXER","LAXES","LAXLY","LAYED","LAYIN","LAYUP","LAZAR","LAZED","LAZES","LAZOS","LAZZI","LAZZO","LEACH","LEADY","LEAFS","LEAFY","LEAKS","LEAKY","LEAMS","LEANS","LEANT","LEANY","LEAPS","LEAPT","LEARE","LEARS","LEARY","LEASH","LEATS","LEAVY","LEAZE","LEBEN","LECCY","LEDES","LEDGE","LEDGY","LEDUM","LEEAR","LEECH","LEEKS","LEEPS","LEERS","LEERY","LEESE","LEETS","LEEZE","LEFTE","LEFTS","LEFTY","LEGER","LEGES","LEGGE","LEGGO","LEGGY","LEGIT","LEHRS","LEHUA","LEIRS","LEISH","LEMAN","LEMED","LEMEL","LEMES","LEMMA","LEMME","LEMON","LEMUR","LENDS","LENES","LENGS","LENIS","LENOS","LENSE","LENTI","LENTO","LEONE","LEPER","LEPID","LEPRA","LEPTA","LERED","LERES","LERPS","LESBO","LESES","LESTS","LETCH","LETHE","LETUP","LEUCH","LEUCO","LEUDS","LEUGH","LEVAS","LEVEE","LEVES","LEVIN","LEVIS","LEWIS","LEXES","LEXIS","LEZES","LEZZA","LEZZY","LIANA","LIANE","LIANG","LIARD","LIARS","LIART","LIBEL","LIBER","LIBRA","LIBRI","LICHI","LICHT","LICIT","LICKS","LIDAR","LIDOS","LIEFS","LIEGE","LIENS","LIERS","LIEUS","LIEVE","LIFER","LIFES","LIFTS","LIGAN","LIGER","LIGGE","LIGNE","LIKEN","LIKER","LIKIN","LILAC","LILLS","LILOS","LILTS","LIMAN","LIMAS","LIMAX","LIMBA","LIMBI","LIMBO","LIMBS","LIMBY","LIMED","LIMEN","LIMES","LIMEY","LIMMA","LIMNS","LIMOS","LIMPA","LIMPS","LINAC","LINCH","LINDS","LINDY","LINED","LINEN","LINER","LINEY","LINGA","LINGO","LINGS","LINGY","LININ","LINKY","LINNS","LINNY","LINOS","LINTS","LINTY","LINUM","LINUX","LIONS","LIPAS","LIPES","LIPID","LIPIN","LIPOS","LIPPY","LIRAS","LIRKS","LIROT","LISKS","LISLE","LISPS","LITAI","LITAS","LITED","LITER","LITES","LITHE","LITHO","LITHS","LITRE","LIVED","LIVEN","LIVER","LIVID","LIVOR","LIVRE","LLAMA","LLANO","LOACH","LOAFS","LOAMS","LOAMY","LOANS","LOAST","LOATH","LOAVE","LOBAR","LOBBY","LOBED","LOBES","LOBOS","LOBUS","LOCHE","LOCHS","LOCIE","LOCIS","LOCOS","LOCUM","LOCUS","LODEN","LODES","LODGE","LOESS","LOFTS","LOFTY","LOGAN","LOGES","LOGGY","LOGIA","LOGIC","LOGIE","LOGOI","LOGOS","LOHAN","LOIDS","LOINS","LOIPE","LOIRS","LOKES","LOLLS","LOLLY","LOLOG","LOMAS","LOMED","LOMES","LONER","LONGA","LONGE","LONGS","LOOBY","LOOED","LOOEY","LOOFA","LOOFS","LOOIE","LOOKY","LOOMS","LOONS","LOONY","LOOPY","LOORD","LOOTS","LOPED","LOPER","LOPES","LOPPY","LORAL","LORAN","LORDS","LORDY","LOREL","LORES","LORIC","LORIS","LORRY","LOSED","LOSEL","LOSEN","LOSER","LOSSY","LOTAH","LOTAS","LOTES","LOTIC","LOTOS","LOTSA","LOTTA","LOTTE","LOTTO","LOTUS","LOUED","LOUGH","LOUIE","LOUMA","LOUND","LOUNS","LOUPE","LOUPS","LOURE","LOURS","LOURY","LOUSE","LOUSY","LOUTS","LOVAT","LOVED","LOVER","LOVES","LOVEY","LOVIE","LOWAN","LOWED","LOWES","LOWLY","LOWND","LOWNE","LOWNS","LOWPS","LOWRY","LOWSE","LOWTS","LOXED","LOXES","LOZEN","LUACH","LUAUS","LUBED","LUBES","LUBRA","LUCES","LUCID","LUCKS","LUCRE","LUDES","LUDIC","LUDOS","LUFFA","LUFFS","LUGED","LUGER","LUGES","LULLS","LULUS","LUMAS","LUMBI","LUMEN","LUMME","LUMMY","LUMPS","LUMPY","LUNAR","LUNAS","LUNES","LUNET","LUNGE","LUNGI","LUNGS","LUNKS","LUNTS","LUPUS","LURCH","LURED","LURER","LURES","LUREX","LURGI","LURGY","LURID","LURKS","LURRY","LURVE","LUSER","LUSHY","LUSKS","LUSTS","LUSTY","LUSUS","LUTEA","LUTED","LUTER","LUTES","LUVVY","LUXED","LUXER","LUXES","LWEIS","LYAMS","LYARD","LYART","LYASE","LYCEA","LYCEE","LYCRA","LYING","LYMES","LYMPH","LYNCH","LYNES","LYRES","LYRIC","LYSED","LYSES","LYSIN","LYSIS","LYSSA","LYTED","LYTES","LYTHE","LYTIC","LYTTA","MAAED","MAARE","MAARS","MABES","MACAS","MACAW","MACED","MACER","MACES","MACHE","MACHI","MACHO","MACHS","MACKS","MACLE","MACON","MADAM","MADGE","MADID","MADLY","MADRE","MAERL","MAFIA","MAFIC","MAGES","MAGGS","MAGMA","MAGOT","MAGUS","MAHOE","MAHUA","MAHWA","MAIDS","MAIKO","MAIKS","MAILE","MAILL","MAIMS","MAINS","MAIRE","MAIRS","MAISE","MAIST","MAIZE","MAKAR","MAKIS","MAKOS","MALAM","MALAR","MALAS","MALAX","MALES","MALIC","MALIK","MALIS","MALLS","MALMS","MALMY","MALTS","MALTY","MALUS","MALVA","MALWA","MAMAS","MAMBA","MAMBO","MAMEE","MAMEY","MAMIE","MAMMA","MAMMY","MANAS","MANAT","MANDI","MANEB","MANED","MANEH","MANES","MANET","MANGA","MANGE","MANGO","MANGS","MANGY","MANIA","MANIC","MANIS","MANKY","MANLY","MANNA","MANOS","MANSE","MANTA","MANTO","MANTY","MANUL","MANUS","MAPAU","MAPLE","MAQUI","MARAE","MARAH","MARAS","MARCS","MARDY","MARES","MARGE","MARGS","MARIA","MARID","MARKA","MARLE","MARLS","MARLY","MARMS","MARON","MAROR","MARRA","MARRI","MARRY","MARSE","MARTS","MARVY","MASAS","MASED","MASER","MASES","MASHY","MASKS","MASON","MASSA","MASSY","MASTS","MASTY","MASUS","MATAI","MATED","MATER","MATES","MATEY","MATHS","MATIN","MATLO","MATTS","MATZA","MATZO","MAUBY","MAUDS","MAULS","MAUND","MAURI","MAUSY","MAUTS","MAUVE","MAUZY","MAVEN","MAVIE","MAVIN","MAVIS","MAWED","MAWKS","MAWKY","MAWNS","MAWRS","MAXED","MAXES","MAXIM","MAXIS","MAYAN","MAYAS","MAYED","MAYOR","MAYOS","MAYST","MAZED","MAZER","MAZES","MAZEY","MAZUT","MBIRA","MEADS","MEALS","MEALY","MEANE","MEANY","MEARE","MEASE","MEATH","MEATS","MEATY","MEBOS","MECCA","MECHS","MECKS","MEDAL","MEDIC","MEDII","MEDLE","MEEDS","MEERS","MEFFS","MEINS","MEINT","MEINY","MEITH","MEKKA","MELAS","MELBA","MELDS","MELEE","MELIC","MELIK","MELLS","MELON","MELTS","MELTY","MEMES","MEMOS","MENAD","MENDS","MENED","MENES","MENGE","MENGS","MENSA","MENSE","MENSH","MENTA","MENTO","MEOUS","MEOWS","MERCH","MERCS","MERCY","MERDE","MERED","MEREL","MERER","MERES","MERIL","MERIS","MERIT","MERKS","MERLE","MERLS","MERSE","MESAL","MESAS","MESEL","MESES","MESHY","MESIC","MESNE","MESON","MESSY","MESTO","METED","METES","METHO","METHS","METIC","METIF","METIS","METOL","METRE","MEUSE","MEVED","MEVES","MEWED","MEWLS","MEYNT","MEZES","MEZZE","MEZZO","MHORR","MIAOU","MIAOW","MIASM","MIAUL","MICAS","MICHE","MICHT","MICKS","MICKY","MICOS","MICRA","MIDDY","MIDGE","MIDGY","MIDIS","MIDST","MIENS","MIEVE","MIFFS","MIFFY","MIFTY","MIGGS","MIHAS","MIHIS","MIKED","MIKES","MIKRA","MIKVA","MILCH","MILDS","MILER","MILES","MILFS","MILIA","MILKO","MILKS","MILKY","MILLE","MILLS","MILOR","MILOS","MILPA","MILTS","MILTY","MILTZ","MIMED","MIMEO","MIMER","MIMES","MIMIC","MIMSY","MINAE","MINAR","MINAS","MINCE","MINCY","MINED","MINER","MINES","MINGE","MINGS","MINGY","MINIM","MINIS","MINKE","MINKS","MINNY","MINOS","MINTS","MINTY","MINUS","MIRED","MIRES","MIREX","MIRID","MIRIN","MIRKS","MIRKY","MIRLY","MIROS","MIRTH","MIRVS","MIRZA","MISCH","MISDO","MISER","MISES","MISGO","MISOS","MISSA","MISSY","MISTS","MITCH","MITER","MITES","MITIS","MITRE","MITTS","MIXED","MIXEN","MIXER","MIXES","MIXTE","MIZEN","MIZZY","MNEME","MOANS","MOATS","MOBBY","MOBES","MOBEY","MOBIE","MOBLE","MOCHA","MOCHI","MOCHS","MOCHY","MOCKS","MODAL","MODER","MODES","MODGE","MODII","MODUS","MOERS","MOFOS","MOGGY","MOGUL","MOHEL","MOHOS","MOHRS","MOHUA","MOHUR","MOILE","MOILS","MOIRA","MOIRE","MOIST","MOITS","MOJOS","MOKES","MOKIS","MOKOS","MOLAL","MOLAR","MOLAS","MOLDS","MOLDY","MOLED","MOLES","MOLLA","MOLLS","MOLLY","MOLTO","MOLTS","MOLYS","MOMES","MOMMA","MOMMY","MOMUS","MONAD","MONAL","MONAS","MONDE","MONDO","MONER","MONGO","MONGS","MONIC","MONIE","MONKS","MONOS","MONTE","MONTY","MOOBS","MOOCH","MOODS","MOODY","MOOED","MOOKS","MOOLA","MOOLI","MOOLS","MOOLY","MOONG","MOONS","MOONY","MOOPS","MOORS","MOORY","MOOSE","MOOTS","MOOVE","MOPED","MOPER","MOPES","MOPEY","MOPPY","MOPSY","MOPUS","MORAE","MORAL","MORAS","MORAT","MORAY","MOREL","MORES","MORIA","MORNE","MORNS","MORON","MORPH","MORRA","MORRO","MORSE","MORTS","MOSED","MOSEY","MOSKS","MOSSO","MOSSY","MOSTE","MOSTS","MOTED","MOTEL","MOTEN","MOTES","MOTET","MOTEY","MOTHS","MOTHY","MOTIF","MOTIS","MOTOR","MOTTE","MOTTO","MOTTS","MOTTY","MOTUS","MOTZA","MOUCH","MOUES","MOULD","MOULS","MOULT","MOUND","MOUPS","MOURN","MOUST","MOUSY","MOUTH","MOVER","MOVIE","MOWAS","MOWED","MOWER","MOWRA","MOXAS","MOXIE","MOYAS","MOYLE","MOYLS","MOZED","MOZES","MOZOS","MPRET","MUCHO","MUCIC","MUCID","MUCIN","MUCKS","MUCKY","MUCOR","MUCRO","MUCUS","MUDDY","MUDGE","MUDIR","MUDRA","MUFFS","MUFTI","MUGGA","MUGGS","MUGGY","MUHLY","MUIDS","MUILS","MUIRS","MUIST","MUJIK","MULCH","MULCT","MULED","MULES","MULEY","MULGA","MULIE","MULLA","MULLS","MULSE","MULSH","MUMMS","MUMMY","MUMPS","MUMSY","MUMUS","MUNCH","MUNGA","MUNGE","MUNGO","MUNGS","MUNIS","MUNTS","MUNTU","MUONS","MURAL","MURAS","MURED","MURES","MUREX","MURID","MURKS","MURKY","MURLS","MURLY","MURRA","MURRE","MURRI","MURRS","MURRY","MURTI","MURVA","MUSAR","MUSCA","MUSED","MUSER","MUSES","MUSET","MUSHA","MUSHY","MUSIT","MUSKS","MUSKY","MUSOS","MUSSE","MUSSY","MUSTH","MUSTS","MUSTY","MUTCH","MUTED","MUTER","MUTES","MUTHA","MUTIS","MUTON","MUTTS","MUXED","MUXES","MUZAK","MUZZY","MVULE","MYALL","MYLAR","MYNAH","MYNAS","MYOID","MYOMA","MYOPE","MYOPS","MYOPY","MYRRH","MYSID","MYTHI","MYTHS","MYTHY","MYXOS","MZEES","NAAMS","NAANS","NABES","NABIS","NABKS","NABLA","NABOB","NACHE","NACHO","NACRE","NADAS","NADIR","NAEVE","NAEVI","NAFFS","NAGAS","NAGGY","NAGOR","NAHAL","NAIAD","NAIFS","NAIKS","NAILS","NAIRA","NAIRU","NAKED","NAKER","NAKFA","NALAS","NALED","NALLA","NAMER","NAMMA","NAMUS","NANAS","NANCE","NANDU","NANNA","NANNY","NANOS","NANUA","NAPAS","NAPED","NAPES","NAPOO","NAPPA","NAPPE","NAPPY","NARAS","NARCO","NARCS","NARDS","NARES","NARIC","NARIS","NARKS","NARKY","NARRE","NASAL","NASHI","NATAL","NATCH","NATES","NATIS","NATTY","NAUCH","NAUNT","NAVAL","NAVAR","NAVEL","NAVES","NAVEW","NAVVY","NAWAB","NAZES","NAZIR","NAZIS","NDUJA","NEAFE","NEALS","NEAPS","NEARS","NEATH","NEATS","NEBEK","NEBEL","NECKS","NEDDY","NEEDY","NEELD","NEELE","NEEMB","NEEMS","NEEPS","NEESE","NEEZE","NEGRO","NEGUS","NEIFS","NEIGH","NEIST","NEIVE","NELIS","NELLY","NEMAS","NEMNS","NEMPT","NENES","NEONS","NEPER","NEPIT","NERAL","NERDS","NERDY","NERKA","NERKS","NEROL","NERTS","NERTZ","NERVE","NERVY","NESTS","NETES","NETOP","NETTS","NETTY","NEUKS","NEUME","NEUMS","NEVEL","NEVES","NEVUS","NEWBS","NEWED","NEWEL","NEWIE","NEWSY","NEWTS","NEXTS","NEXUS","NGAIO","NGANA","NGATI","NGOMA","NGWEE","NICAD","NICER","NICHE","NICHT","NICKS","NICOL","NIDAL","NIDED","NIDES","NIDOR","NIDUS","NIECE","NIEFS","NIEVE","NIFES","NIFFS","NIFFY","NIFTY","NIGER","NIGHS","NIHIL","NIKAB","NIKAH","NIKAU","NILLS","NIMBI","NIMBS","NIMPS","NINER","NINES","NINNY","NINON","NINTH","NIPAS","NIPPY","NIQAB","NIRLS","NIRLY","NISEI","NISSE","NISUS","NITER","NITES","NITID","NITON","NITRE","NITRO","NITRY","NITTY","NIVAL","NIXED","NIXER","NIXES","NIXIE","NIZAM","NKOSI","NOAHS","NOBBY","NOBLE","NOBLY","NOCKS","NODAL","NODDY","NODUS","NOELS","NOGGS","NOHOW","NOILS","NOILY","NOINT","NOIRS","NOISY","NOLES","NOLLS","NOLOS","NOMAD","NOMAS","NOMEN","NOMES","NOMIC","NOMOI","NOMOS","NONAS","NONCE","NONES","NONET","NONGS","NONIS","NONNY","NONYL","NOOBS","NOOIT","NOOKS","NOOKY","NOONS","NOOPS","NOOSE","NOPAL","NORIA","NORIS","NORKS","NORMA","NORMS","NOSED","NOSER","NOSES","NOSEY","NOTAL","NOTCH","NOTER","NOTUM","NOULD","NOULE","NOULS","NOUNS","NOUNY","NOUPS","NOVAE","NOVAS","NOVUM","NOWAY","NOWED","NOWLS","NOWTS","NOWTY","NOXAL","NOXES","NOYAU","NOYED","NOYES","NUBBY","NUBIA","NUCHA","NUDDY","NUDER","NUDES","NUDGE","NUDIE","NUDZH","NUFFS","NUGAE","NUKED","NUKES","NULLA","NULLS","NUMBS","NUMEN","NUMMY","NUNNY","NURDS","NURDY","NURLS","NURRS","NUTSO","NUTSY","NUTTY","NYAFF","NYALA","NYING","NYLON","NYMPH","NYSSA","OAKED","OAKEN","OAKER","OAKUM","OARED","OASES","OASIS","OASTS","OATEN","OATER","OATHS","OAVES","OBANG","OBEAH","OBELI","OBESE","OBEYS","OBIAS","OBIED","OBIIT","OBITS","OBJET","OBOES","OBOLE","OBOLI","OBOLS","OCCAM","OCHER","OCHES","OCHRE","OCHRY","OCKER","OCREA","OCTAD","OCTAL","OCTAN","OCTAS","OCTET","OCTYL","OCULI","ODAHS","ODALS","ODDER","ODDLY","ODEON","ODEUM","ODISM","ODIST","ODIUM","ODORS","ODOUR","ODYLE","ODYLS","OFAYS","OFFAL","OFFED","OFFIE","OFLAG","OFTER","OGAMS","OGEED","OGEES","OGGIN","OGHAM","OGIVE","OGLED","OGLER","OGLES","OGMIC","OGRES","OHIAS","OHING","OHMIC","OHONE","OIDIA","OILED","OILER","OINKS","OINTS","OJIME","OKAPI","OKAYS","OKEHS","OKRAS","OKTAS","OLDEN","OLDIE","OLEIC","OLEIN","OLENT","OLEOS","OLEUM","OLIOS","OLIVE","OLLAS","OLLAV","OLLER","OLLIE","OLOGY","OLPAE","OLPES","OMASA","OMBER","OMBRE","OMBUS","OMEGA","OMENS","OMERS","OMITS","OMLAH","OMOVS","OMRAH","ONCER","ONCES","ONCET","ONCUS","ONELY","ONERS","ONERY","ONION","ONIUM","ONKUS","ONLAY","ONNED","ONSET","ONTIC","OOBIT","OOHED","OOMPH","OONTS","OOPED","OORIE","OOSES","OOTID","OOZED","OOZES","OPAHS","OPALS","OPEPE","OPERA","OPINE","OPING","OPIUM","OPPOS","OPSIN","OPTED","OPTER","ORACH","ORACY","ORALS","ORANG","ORANT","ORATE","ORBED","ORBIT","ORCAS","ORCIN","ORDOS","OREAD","ORFES","ORGAN","ORGIA","ORGIC","ORGUE","ORIBI","ORIEL","ORIXA","ORLES","ORLON","ORLOP","ORMER","ORNIS","ORPIN","ORRIS","ORTHO","ORVAL","ORZOS","OSCAR","OSHAC","OSIER","OSMIC","OSMOL","OSSIA","OSTIA","OTAKU","OTARY","OTTAR","OTTER","OTTOS","OUBIT","OUCHT","OUENS","OUGHT","OUIJA","OULKS","OUMAS","OUNCE","OUNDY","OUPAS","OUPED","OUPHE","OUPHS","OURIE","OUSEL","OUSTS","OUTBY","OUTDO","OUTED","OUTER","OUTGO","OUTRE","OUTRO","OUTTA","OUZEL","OUZOS","OVALS","OVARY","OVATE","OVELS","OVENS","OVERS","OVERT","OVINE","OVIST","OVOID","OVOLI","OVOLO","OVULE","OWCHE","OWIES","OWING","OWLED","OWLER","OWLET","OWNED","OWRES","OWRIE","OWSEN","OXBOW","OXERS","OXEYE","OXIDE","OXIDS","OXIES","OXIME","OXIMS","OXLIP","OXTER","OYERS","OZEKI","OZONE","OZZIE","PAALS","PAANS","PACAS","PACED","PACER","PACES","PACEY","PACHA","PACKS","PACOS","PACTA","PACTS","PADDY","PADIS","PADLE","PADMA","PADRE","PADRI","PAEAN","PAEDO","PAEON","PAGAN","PAGED","PAGER","PAGLE","PAGOD","PAGRI","PAIKS","PAILS","PAIRE","PAIRS","PAISA","PAISE","PAKKA","PALAS","PALAY","PALEA","PALED","PALER","PALES","PALET","PALIS","PALKI","PALLA","PALLS","PALLY","PALMS","PALMY","PALPI","PALPS","PALSA","PALSY","PAMPA","PANAX","PANCE","PANDA","PANDS","PANDY","PANED","PANES","PANGA","PANGS","PANIC","PANIM","PANKO","PANNE","PANNI","PANSY","PANTO","PANTS","PANTY","PAOLI","PAOLO","PAPAL","PAPAS","PAPAW","PAPES","PAPPI","PAPPY","PARAE","PARAS","PARCH","PARDI","PARDS","PARDY","PARED","PAREN","PAREO","PARER","PARES","PAREU","PAREV","PARGE","PARGO","PARIS","PARKA","PARKI","PARKS","PARKY","PARLE","PARLY","PARMA","PAROL","PARPS","PARRA","PARRS","PARRY","PARSE","PARTI","PARVE","PARVO","PASEO","PASES","PASHA","PASHM","PASKA","PASPY","PASSE","PASTA","PASTS","PASTY","PATED","PATEN","PATER","PATES","PATHS","PATIN","PATIO","PATKA","PATLY","PATSY","PATTE","PATTY","PATUS","PAUAS","PAULS","PAVAN","PAVED","PAVEN","PAVER","PAVES","PAVID","PAVIN","PAVIS","PAWAS","PAWAW","PAWED","PAWER","PAWKS","PAWKY","PAWLS","PAWNS","PAXES","PAYED","PAYEE","PAYER","PAYOR","PAYSD","PEACE","PEACH","PEAGE","PEAGS","PEAKS","PEAKY","PEALS","PEANS","PEARE","PEARL","PEARS","PEART","PEASE","PEATS","PEATY","PEAVY","PEAZE","PEBAS","PECAN","PECHS","PECKE","PECKS","PECKY","PEDAL","PEDES","PEDIS","PEDRO","PEECE","PEEKS","PEELS","PEENS","PEEOY","PEEPE","PEEPS","PEERS","PEERY","PEEVE","PEGGY","PEGHS","PEINS","PEISE","PEIZE","PEKAN","PEKES","PEKIN","PEKOE","PELAS","PELAU","PELES","PELFS","PELLS","PELMA","PELON","PELTA","PELTS","PENAL","PENCE","PENDS","PENDU","PENED","PENES","PENGO","PENIE","PENIS","PENKS","PENNA","PENNE","PENNI","PENNY","PENTS","PEONS","PEONY","PEPLA","PEPOS","PEPPY","PEPSI","PERAI","PERCE","PERCH","PERCS","PERDU","PERDY","PEREA","PERES","PERIL","PERIS","PERKS","PERKY","PERMS","PERNS","PEROG","PERPS","PERRY","PERSE","PERST","PERTS","PERVE","PERVO","PERVS","PERVY","PESKY","PESOS","PESTO","PESTS","PESTY","PETAL","PETAR","PETRE","PETRI","PETTI","PETTO","PETTY","PEWEE","PEWIT","PEYSE","PHAGE","PHANG","PHARE","PHARM","PHEER","PHENE","PHEON","PHESE","PHIAL","PHISH","PHIZZ","PHLOX","PHOCA","PHONO","PHONS","PHONY","PHOTS","PHPHT","PHUTS","PHYLA","PHYLE","PIANI","PIANO","PIANS","PIBAL","PICAL","PICAS","PICCY","PICKY","PICOT","PICRA","PICUL","PIEND","PIERS","PIERT","PIETA","PIETS","PIETY","PIEZO","PIGGY","PIGHT","PIGMY","PIING","PIKAS","PIKAU","PIKED","PIKER","PIKES","PIKEY","PIKIS","PIKUL","PILAE","PILAF","PILAO","PILAR","PILAU","PILAW","PILCH","PILEA","PILED","PILEI","PILER","PILES","PILIS","PILLS","PILOW","PILUM","PILUS","PIMAS","PIMPS","PINAS","PINED","PINES","PINEY","PINGO","PINKO","PINKS","PINKY","PINNA","PINNY","PINON","PINOT","PINTA","PINTO","PINTS","PINUP","PIONS","PIONY","PIOUS","PIOYE","PIOYS","PIPAL","PIPAS","PIPED","PIPER","PIPES","PIPET","PIPIS","PIPIT","PIPPY","PIPUL","PIQUE","PIRAI","PIRLS","PIRNS","PIROG","PISCO","PISES","PISKY","PISOS","PISSY","PISTE","PITAS","PITCH","PITHS","PITHY","PITON","PITOT","PITTA","PIUMS","PIXEL","PIXES","PIXIE","PIZED","PIZES","PIZZA","PLAAS","PLACE","PLACK","PLAGE","PLAID","PLAIT","PLANK","PLAPS","PLASH","PLASM","PLAST","PLATS","PLATT","PLATY","PLAYA","PLAZA","PLEAD","PLEAS","PLEAT","PLEBE","PLEBS","PLENA","PLEON","PLESH","PLEWS","PLICA","PLIED","PLIER","PLIES","PLIMS","PLING","PLINK","PLOAT","PLODS","PLONG","PLONK","PLOOK","PLOPS","PLOTS","PLOTZ","PLOUK","PLOWS","PLOYE","PLOYS","PLUCK","PLUES","PLUFF","PLUMB","PLUME","PLUMP","PLUMS","PLUMY","PLUNK","PLUOT","PLUSH","PLUTO","PLYER","POACH","POAKA","POAKE","POBOY","POCKS","POCKY","PODAL","PODDY","PODEX","PODGE","PODGY","PODIA","POEMS","POEPS","POESY","POETS","POGEY","POGGE","POGOS","POHED","POILU","POIND","POISE","POKAL","POKED","POKER","POKES","POKEY","POKIE","POLAR","POLED","POLER","POLES","POLEY","POLIO","POLIS","POLJE","POLKA","POLKS","POLLS","POLLY","POLOS","POLTS","POLYP","POLYS","POMBE","POMES","POMMY","POMOS","POMPS","PONCE","PONCY","PONDS","PONES","PONEY","PONGA","PONGO","PONGS","PONGY","PONKS","PONTS","PONTY","PONZU","POOCH","POODS","POOED","POOFS","POOFY","POOHS","POOJA","POOKA","POOKS","POOLS","POONS","POOPS","POOPY","POORI","POORT","POOTS","POOVE","POOVY","POPES","POPPA","POPPY","POPSY","PORAE","PORAL","PORED","PORER","PORES","PORGE","PORGY","PORIN","PORKS","PORKY","PORNO","PORNS","PORNY","PORTA","PORTY","POSER","POSES","POSEY","POSHO","POSIT","POSSE","POTAE","POTCH","POTED","POTES","POTIN","POTOO","POTSY","POTTO","POTTS","POTTY","POUCH","POUFF","POUFS","POUKE","POUKS","POULE","POULP","POULT","POUND","POUPE","POUPT","POURS","POUTS","POUTY","POWAN","POWIN","POWND","POWNS","POWNY","POWRE","POXED","POXES","POYNT","POYOU","POYSE","POZZY","PRAAM","PRADS","PRAHU","PRAMS","PRANA","PRANG","PRANK","PRAOS","PRASE","PRATE","PRATS","PRATT","PRATY","PRAUS","PRAWN","PRAYS","PREDY","PREED","PREEN","PREES","PREIF","PREMS","PREMY","PRENT","PREON","PREOP","PREPS","PRESA","PRESE","PREST","PREVE","PREXY","PREYS","PRIAL","PRICK","PRICY","PRIDE","PRIED","PRIEF","PRIER","PRIES","PRIGS","PRILL","PRIMA","PRIMI","PRIMP","PRIMS","PRIMY","PRINK","PRION","PRISE","PRISM","PRISS","PRIVY","PRIZE","PROAS","PROBE","PROBS","PRODS","PROEM","PROFS","PROGS","PROIN","PROKE","PROLE","PROLL","PROMS","PRONE","PRONG","PRONK","PROPS","PRORE","PROSE","PROSO","PROSS","PROST","PROSY","PROTO","PROUD","PROUL","PROWL","PROWS","PROYN","PRUDE","PRUNE","PRUNT","PRUTA","PRYER","PRYSE","PSALM","PSEUD","PSHAW","PSION","PSOAE","PSOAI","PSOAS","PSORA","PSYCH","PSYOP","PUBCO","PUBES","PUBIC","PUBIS","PUCAN","PUCER","PUCES","PUCKA","PUCKS","PUDDY","PUDGE","PUDGY","PUDIC","PUDOR","PUDSY","PUDUS","PUERS","PUFFA","PUFFS","PUFFY","PUGGY","PUGIL","PUHAS","PUJAH","PUJAS","PUKAS","PUKED","PUKER","PUKES","PUKEY","PUKKA","PUKUS","PULAO","PULAS","PULED","PULER","PULES","PULIK","PULIS","PULKA","PULKS","PULLI","PULLS","PULLY","PULMO","PULPS","PULPY","PULSE","PULUS","PUMAS","PUMIE","PUMPS","PUNAS","PUNCE","PUNGA","PUNGS","PUNJI","PUNKA","PUNKS","PUNKY","PUNNY","PUNTO","PUNTS","PUNTY","PUPAE","PUPAL","PUPAS","PUPIL","PUPPY","PUPUS","PURDA","PURED","PUREE","PURER","PURES","PURIN","PURIS","PURLS","PURPY","PURRS","PURSE","PURSY","PURTY","PUSES","PUSHY","PUSLE","PUSSY","PUTID","PUTON","PUTTI","PUTTO","PUTTS","PUTTY","PUZEL","PWNED","PYATS","PYETS","PYGAL","PYGMY","PYINS","PYLON","PYNED","PYNES","PYOID","PYOTS","PYRAL","PYRAN","PYRES","PYREX","PYRIC","PYROS","PYXED","PYXES","PYXIE","PYXIS","PZAZZ","QADIS","QAIDS","QAJAQ","QANAT","QAPIK","QIBLA","QOPHS","QORMA","QUACK","QUADS","QUAFF","QUAGS","QUAIL","QUAIR","QUAIS","QUAKE","QUAKY","QUALE","QUALM","QUANT","QUARE","QUARK","QUART","QUASH","QUASI","QUASS","QUATE","QUATS","QUAYD","QUAYS","QUBIT","QUEAN","QUEEN","QUEER","QUELL","QUEME","QUENA","QUERN","QUEST","QUEYN","QUEYS","QUICH","QUIDS","QUIFF","QUILL","QUILT","QUIMS","QUINA","QUINE","QUINO","QUINS","QUINT","QUIPO","QUIPS","QUIPU","QUIRE","QUIRK","QUIRT","QUIST","QUITS","QUOAD","QUODS","QUOIF","QUOIN","QUOIT","QUOLL","QUONK","QUOPS","QUOTA","QUOTH","QURSH","QUYTE","RABAT","RABBI","RABIC","RABID","RABIS","RACED","RACER","RACES","RACHE","RACON","RADAR","RADGE","RADII","RADIX","RADON","RAFFS","RAFTS","RAGAS","RAGDE","RAGED","RAGEE","RAGER","RAGES","RAGGA","RAGGS","RAGGY","RAGIS","RAGUS","RAHED","RAHUI","RAIAS","RAIDS","RAIKS","RAILE","RAILS","RAINE","RAINS","RAIRD","RAITA","RAITS","RAJAH","RAJAS","RAJES","RAKED","RAKEE","RAKER","RAKES","RAKIA","RAKIS","RAKUS","RALES","RALLY","RALPH","RAMAL","RAMEE","RAMEN","RAMET","RAMIE","RAMIN","RAMIS","RAMMY","RAMUS","RANAS","RANCE","RANCH","RANDS","RANEE","RANGA","RANGI","RANGS","RANGY","RANID","RANIS","RANKE","RANKS","RANTS","RAPED","RAPER","RAPES","RAPHE","RAPPE","RARED","RAREE","RARER","RARES","RARKS","RASED","RASER","RASES","RASPS","RASPY","RASSE","RASTA","RATAL","RATAN","RATAS","RATCH","RATEL","RATER","RATHA","RATHE","RATHS","RATOO","RATOS","RATTY","RATUS","RAUNS","RAUPO","RAVED","RAVEL","RAVER","RAVES","RAVEY","RAVIN","RAWER","RAWIN","RAWLY","RAWNS","RAXED","RAXES","RAYAH","RAYAS","RAYED","RAYLE","RAYNE","RAYON","RAZED","RAZEE","RAZER","RAZES","RAZOO","RAZOR","READD","REAIS","REAKS","REALM","REALO","REALS","REAME","REAMS","REAMY","REANS","REAPS","REARM","REARS","REAST","REATA","REATE","REAVE","REBAR","REBBE","REBEC","REBEL","REBID","REBIT","REBOP","REBUS","REBUT","REBUY","RECAL","RECAP","RECCE","RECCO","RECCY","RECIT","RECKS","RECON","RECTA","RECTI","RECTO","RECUR","RECUT","REDAN","REDDS","REDDY","REDED","REDES","REDIA","REDID","REDIP","REDLY","REDON","REDOS","REDOX","REDRY","REDUB","REDUX","REDYE","REECH","REEDE","REEDS","REEDY","REEFS","REEFY","REEKS","REEKY","REELS","REENS","REEST","REEVE","REFED","REFEL","REFFO","REFIS","REFIX","REFLY","REFRY","REGAL","REGAR","REGES","REGGO","REGIE","REGMA","REGNA","REGOS","REGUR","REHAB","REHEM","REIFS","REIFY","REIGN","REIKI","REIKS","REINK","REINS","REIRD","REIST","REIVE","REJIG","REJON","REKED","REKES","REKEY","RELET","RELIC","RELIE","RELIT","RELLO","REMAN","REMAP","REMEN","REMET","REMEX","REMIT","REMIX","RENAL","RENAY","RENDS","RENEY","RENGA","RENIG","RENIN","RENNE","RENOS","RENTE","RENTS","REOIL","REORG","REPAY","REPEG","REPEL","REPIN","REPLA","REPOS","REPOT","REPPS","REPRO","RERAN","RERIG","RERUN","RESAT","RESAW","RESAY","RESEE","RESES","RESEW","RESID","RESIN","RESIT","RESOD","RESOW","RESTO","RESTY","RESUS","RETAG","RETAX","RETCH","RETEM","RETIA","RETIE","RETOX","REVEL","REVET","REVIE","REVUE","REWAN","REWAX","REWED","REWET","REWIN","REWON","REWTH","REXES","REZES","RHEAS","RHEME","RHEUM","RHIES","RHIME","RHINE","RHINO","RHODY","RHOMB","RHONE","RHUMB","RHYME","RHYNE","RHYTA","RIADS","RIALS","RIANT","RIATA","RIBAS","RIBBY","RIBES","RICED","RICER","RICES","RICEY","RICHT","RICIN","RICKS","RIDER","RIDES","RIDGE","RIDGY","RIDIC","RIELS","RIEMS","RIEVE","RIFER","RIFFS","RIFLE","RIFTE","RIFTS","RIFTY","RIGGS","RIGID","RIGOL","RIGOR","RILED","RILES","RILEY","RILLE","RILLS","RIMAE","RIMED","RIMER","RIMES","RIMUS","RINDS","RINDY","RINES","RINKS","RINSE","RIOJA","RIOTS","RIPED","RIPEN","RIPER","RIPES","RIPPS","RISEN","RISER","RISES","RISHI","RISPS","RISUS","RITES","RITTS","RITZY","RIVAL","RIVAS","RIVED","RIVEL","RIVEN","RIVES","RIVET","RIYAL","RIZAS","ROACH","ROADS","ROAMS","ROANS","ROARS","ROARY","ROAST","ROATE","ROBED","ROBES","ROBIN","ROBLE","ROCKS","ROCKY","RODED","RODEO","RODES","ROGUE","ROGUY","ROHES","ROIDS","ROILS","ROILY","ROINS","ROIST","ROJAK","ROJIS","ROKED","ROKER","ROKES","ROLAG","ROLES","ROLFS","ROMAL","ROMAN","ROMEO","ROMPS","RONDE","RONDO","RONEO","RONES","RONIN","RONNE","RONTE","RONTS","ROODS","ROOFS","ROOFY","ROOKS","ROOKY","ROOMY","ROONS","ROOPS","ROOPY","ROOSA","ROOSE","ROOST","ROOTS","ROOTY","ROPED","ROPER","ROPES","ROPEY","ROQUE","RORAL","RORES","RORIC","RORID","RORIE","RORTS","RORTY","ROSED","ROSES","ROSET","ROSHI","ROSIN","ROSIT","ROSTI","ROSTS","ROTAL","ROTAN","ROTAS","ROTCH","ROTED","ROTES","ROTIS","ROTLS","ROTON","ROTOR","ROTOS","ROTTE","ROUEN","ROUES","ROUGE","ROULE","ROULS","ROUMS","ROUPS","ROUPY","ROUSE","ROUST","ROUTH","ROUTS","ROVED","ROVEN","ROVER","ROVES","ROWAN","ROWDY","ROWED","ROWEL","ROWEN","ROWER","ROWIE","ROWME","ROWND","ROWTH","ROWTS","ROYNE","ROYST","ROZET","ROZIT","RUANA","RUBAI","RUBBY","RUBEL","RUBES","RUBIN","RUBLE","RUBLI","RUBUS","RUCHE","RUCKS","RUDAS","RUDDS","RUDDY","RUDER","RUDES","RUDIE","RUDIS","RUEDA","RUERS","RUFFE","RUFFS","RUGAE","RUGAL","RUGBY","RUGGY","RUING","RUINS","RUKHS","RULER","RUMAL","RUMBA","RUMBO","RUMEN","RUMES","RUMLY","RUMMY","RUMOR","RUMPO","RUMPS","RUMPY","RUNCH","RUNDS","RUNED","RUNES","RUNGS","RUNIC","RUNNY","RUNTS","RUNTY","RUPEE","RUPIA","RURAL","RURPS","RURUS","RUSAS","RUSES","RUSHY","RUSKS","RUSMA","RUSSE","RUSTS","RUSTY","RUTHS","RUTIN","RUTTY","RYALS","RYBAT","RYKED","RYKES","RYMME","RYNDS","RYOTS","RYPER","SAAGS","SABAL","SABED","SABER","SABES","SABHA","SABIN","SABIR","SABLE","SABOT","SABRA","SABRE","SACKS","SACRA","SADDO","SADES","SADHE","SADHU","SADIS","SADOS","SADZA","SAFED","SAFES","SAGAS","SAGER","SAGES","SAGGY","SAGOS","SAGUM","SAHEB","SAHIB","SAICE","SAICK","SAICS","SAIDS","SAIGA","SAILS","SAIMS","SAINE","SAINS","SAIRS","SAIST","SAITH","SAJOU","SAKAI","SAKER","SAKES","SAKIA","SAKIS","SAKTI","SALAD","SALAL","SALAT","SALEP","SALET","SALIC","SALIX","SALLE","SALLY","SALMI","SALOL","SALON","SALOP","SALPA","SALPS","SALSA","SALSE","SALTO","SALTS","SALUE","SALUT","SALVE","SALVO","SAMAN","SAMAS","SAMBA","SAMBO","SAMEK","SAMEL","SAMEN","SAMES","SAMEY","SAMFU","SAMPI","SAMPS","SANDS","SANED","SANER","SANES","SANGA","SANGH","SANGO","SANGS","SANKO","SANSA","SANTO","SANTS","SAOLA","SAPAN","SAPID","SAPOR","SAPPY","SARAN","SARDS","SARED","SAREE","SARGE","SARGO","SARIN","SARIS","SARKS","SARKY","SAROD","SAROS","SARUS","SASER","SASIN","SASSE","SASSY","SATAI","SATAY","SATED","SATEM","SATES","SATIN","SATIS","SATYR","SAUBA","SAUCE","SAUCH","SAUCY","SAUGH","SAULS","SAULT","SAUNA","SAUNT","SAURY","SAUTE","SAUTS","SAVER","SAVEY","SAVIN","SAVOR","SAVOY","SAVVY","SAWAH","SAWED","SAWER","SAXES","SAYED","SAYER","SAYID","SAYNE","SAYON","SAYST","SAZES","SCABS","SCADS","SCAFF","SCAGS","SCAIL","SCALA","SCALD","SCALL","SCALP","SCALY","SCAMP","SCAND","SCANT","SCAPA","SCAPE","SCAPI","SCARE","SCARF","SCARP","SCARS","SCART","SCARY","SCATH","SCATS","SCATT","SCAUD","SCAUP","SCAUR","SCAWS","SCEAT","SCENA","SCEND","SCENE","SCENT","SCHAV","SCHMO","SCHUL","SCHWA","SCION","SCLIM","SCODY","SCOFF","SCOGS","SCOLD","SCONE","SCOOG","SCOOP","SCOOT","SCOPA","SCOPS","SCORN","SCOTS","SCOUG","SCOUP","SCOUR","SCOUT","SCOWL","SCOWP","SCOWS","SCRAB","SCRAE","SCRAG","SCRAM","SCRAN","SCRAP","SCRAT","SCRAW","SCRAY","SCREE","SCREW","SCRIM","SCRIP","SCROB","SCROD","SCROG","SCROW","SCRUB","SCRUM","SCUBA","SCUDI","SCUDO","SCUDS","SCUFF","SCUFT","SCUGS","SCULK","SCULL","SCULP","SCULS","SCUMS","SCUPS","SCURF","SCURS","SCUSE","SCUTA","SCUTE","SCUTS","SCUZZ","SCYES","SDAYN","SDEIN","SEALS","SEAME","SEAMS","SEAMY","SEANS","SEARE","SEARS","SEASE","SEAZE","SEBUM","SECCO","SECHS","SECTS","SEDAN","SEDER","SEDES","SEDGE","SEDGY","SEDUM","SEEDS","SEEDY","SEEKS","SEELD","SEELS","SEELY","SEEPS","SEEPY","SEERS","SEFER","SEGAR","SEGNI","SEGNO","SEGOL","SEGOS","SEGUE","SEHRI","SEIFS","SEILS","SEINE","SEIRS","SEISE","SEISM","SEITY","SEIZA","SEKOS","SEKTS","SELAH","SELES","SELFS","SELLA","SELLE","SELVA","SEMEE","SEMEN","SEMES","SEMIE","SEMIS","SENAS","SENES","SENGI","SENNA","SENOR","SENSA","SENSI","SENTE","SENTI","SENTS","SENVY","SENZA","SEPAD","SEPAL","SEPIA","SEPIC","SEPOY","SEPTA","SEPTS","SERAC","SERAI","SERAL","SERED","SERER","SERES","SERFS","SERGE","SERIC","SERIF","SERIN","SERKS","SERON","SEROW","SERRA","SERRE","SERRS","SERRY","SERUM","SERVO","SESEY","SESSA","SETAE","SETAL","SETON","SETTS","SEWAN","SEWAR","SEWED","SEWEL","SEWEN","SEWER","SEWIN","SEXED","SEXER","SEXES","SEXTO","SEXTS","SEYEN","SHACK","SHADE","SHADS","SHADY","SHAFT","SHAGS","SHAHS","SHAKE","SHAKO","SHAKT","SHAKY","SHALE","SHALM","SHALT","SHALY","SHAMA","SHAME","SHAMS","SHAND","SHANK","SHANS","SHAPS","SHARD","SHARK","SHARN","SHASH","SHAUL","SHAVE","SHAWL","SHAWM","SHAWS","SHAYA","SHAYS","SHCHI","SHEAF","SHEAL","SHEAR","SHEAS","SHEDS","SHEEL","SHEEN","SHEEP","SHEIK","SHEND","SHENT","SHEOL","SHERD","SHERE","SHERO","SHETS","SHEVA","SHEWN","SHEWS","SHIAI","SHIED","SHIEL","SHIER","SHIES","SHIFT","SHILL","SHILY","SHIMS","SHINE","SHINS","SHIRE","SHIRK","SHIRR","SHIRS","SHIRT","SHISH","SHISO","SHIST","SHITE","SHITS","SHIUR","SHIVA","SHIVE","SHIVS","SHLEP","SHLUB","SHMEK","SHMOE","SHOAL","SHOAT","SHOCK","SHOED","SHOER","SHOES","SHOGI","SHOGS","SHOJI","SHOJO","SHOLA","SHONE","SHOOK","SHOOL","SHOON","SHOOS","SHOPE","SHOPS","SHORE","SHORL","SHORN","SHOTE","SHOTS","SHOTT","SHOUT","SHOVE","SHOWD","SHOWY","SHOYU","SHREW","SHRIS","SHROW","SHRUB","SHRUG","SHTIK","SHTUM","SHTUP","SHUCK","SHULE","SHULN","SHULS","SHUNS","SHUNT","SHURA","SHUSH","SHUTE","SHUTS","SHWAS","SHYER","SHYLY","SIALS","SIBBS","SIBYL","SICES","SICHT","SICKO","SICKS","SICKY","SIDAS","SIDER","SIDHA","SIDHE","SIDLE","SIEGE","SIELD","SIENS","SIENT","SIETH","SIEUR","SIEVE","SIFTS","SIGHS","SIGHT","SIGIL","SIGLA","SIGMA","SIGNA","SIGNS","SIJOS","SIKAS","SIKER","SIKES","SILDS","SILED","SILEN","SILER","SILES","SILEX","SILKS","SILKY","SILLS","SILOS","SILTS","SILTY","SILVA","SIMAR","SIMAS","SIMBA","SIMIS","SIMPS","SIMUL","SINDS","SINED","SINES","SINEW","SINGE","SINGS","SINHS","SINKS","SINKY","SINUS","SIPED","SIPES","SIPPY","SIRED","SIREE","SIREN","SIRES","SIRIH","SIRIS","SIROC","SIRRA","SIRUP","SISAL","SISES","SISSY","SISTA","SISTS","SITAR","SITED","SITHE","SITKA","SITUP","SITUS","SIVER","SIXER","SIXES","SIXMO","SIXTE","SIXTH","SIXTY","SIZAR","SIZED","SIZEL","SIZER","SKAGS","SKAIL","SKALD","SKANK","SKART","SKATE","SKATS","SKATT","SKAWS","SKEAN","SKEAR","SKEDS","SKEED","SKEEF","SKEEN","SKEER","SKEES","SKEET","SKEGG","SKEGS","SKEIN","SKELF","SKELL","SKELM","SKELP","SKENE","SKENS","SKEOS","SKEPS","SKERS","SKETS","SKEWS","SKIED","SKIER","SKIES","SKIEY","SKIFF","SKILL","SKIMO","SKIMP","SKIMS","SKINK","SKINS","SKINT","SKIOS","SKIPS","SKIRL","SKIRR","SKIRT","SKITE","SKITS","SKIVE","SKIVY","SKLIM","SKOAL","SKODY","SKOFF","SKOGS","SKOLS","SKOOL","SKORT","SKOSH","SKRAN","SKRIK","SKUAS","SKUGS","SKULK","SKULL","SKUNK","SKYED","SKYER","SKYEY","SKYFS","SKYRE","SKYRS","SKYTE","SLABS","SLADE","SLAES","SLAGS","SLAID","SLAIN","SLAKE","SLAMS","SLANE","SLANG","SLANK","SLANT","SLAPS","SLART","SLASH","SLATS","SLATY","SLAWS","SLAYS","SLEBS","SLEEK","SLEER","SLEET","SLEPT","SLEWS","SLEYS","SLICE","SLICK","SLIER","SLILY","SLIME","SLIMS","SLIMY","SLING","SLINK","SLIPE","SLIPS","SLIPT","SLISH","SLITS","SLIVE","SLOAN","SLOBS","SLOES","SLOGS","SLOID","SLOJD","SLOMO","SLOOM","SLOOP","SLOOT","SLOPS","SLOPY","SLORM","SLOSH","SLOTH","SLOTS","SLOVE","SLOYD","SLUBB","SLUBS","SLUED","SLUES","SLUFF","SLUGS","SLUIT","SLUMP","SLUMS","SLUNG","SLUNK","SLURB","SLURP","SLURS","SLUSE","SLUSH","SLUTS","SLYER","SLYLY","SLYPE","SMAAK","SMACK","SMAIK","SMALM","SMALT","SMARM","SMASH","SMAZE","SMEAR","SMEEK","SMEES","SMEIK","SMEKE","SMELT","SMERK","SMEWS","SMILE","SMIRK","SMIRR","SMIRS","SMITE","SMITS","SMOCK","SMOGS","SMOKE","SMOKO","SMOKY","SMOLT","SMOOR","SMOOT","SMORE","SMORG","SMOTE","SMOUT","SMOWT","SMUGS","SMURS","SMUSH","SMUTS","SNABS","SNACK","SNAFU","SNAGS","SNAIL","SNAKE","SNAKY","SNAPS","SNARE","SNARF","SNARK","SNARL","SNARS","SNARY","SNASH","SNATH","SNAWS","SNEAD","SNEAP","SNEBS","SNECK","SNEDS","SNEED","SNEER","SNEES","SNELL","SNIBS","SNICK","SNIDE","SNIES","SNIFF","SNIFT","SNIGS","SNIPE","SNIPS","SNIPY","SNIRT","SNITS","SNOBS","SNODS","SNOEK","SNOEP","SNOGS","SNOKE","SNOOD","SNOOK","SNOOL","SNOOP","SNOOT","SNORE","SNORT","SNOTS","SNOUT","SNOWK","SNOWS","SNOWY","SNUBS","SNUCK","SNUFF","SNUGS","SNUSH","SNYES","SOAKS","SOAPS","SOAPY","SOARE","SOARS","SOAVE","SOBAS","SOBER","SOCAS","SOCES","SOCKO","SOCKS","SOCLE","SODAS","SODDY","SODIC","SODOM","SOFAR","SOFAS","SOFTA","SOFTS","SOFTY","SOGER","SOGGY","SOHUR","SOILS","SOILY","SOJAS","SOJUS","SOKAH","SOKEN","SOKES","SOKOL","SOLAH","SOLAN","SOLAR","SOLAS","SOLDE","SOLDI","SOLDO","SOLDS","SOLED","SOLEI","SOLER","SOLES","SOLON","SOLOS","SOLUM","SOLUS","SOMAN","SOMAS","SONAR","SONCE","SONDE","SONES","SONGS","SONIC","SONLY","SONNE","SONNY","SONSE","SONSY","SOOEY","SOOKS","SOOKY","SOOLE","SOOLS","SOOMS","SOOPS","SOOTE","SOOTH","SOOTS","SOOTY","SOPHS","SOPHY","SOPOR","SOPPY","SOPRA","SORAL","SORAS","SORBO","SORBS","SORDA","SORDO","SORDS","SORED","SOREE","SOREL","SORER","SORES","SOREX","SORGO","SORNS","SORRA","SORTA","SORUS","SOTHS","SOTOL","SOUCE","SOUCT","SOUGH","SOUKS","SOUMS","SOUPS","SOUPY","SOURS","SOUSE","SOUTS","SOWAR","SOWCE","SOWED","SOWER","SOWFF","SOWFS","SOWLE","SOWLS","SOWMS","SOWND","SOWNE","SOWPS","SOWSE","SOWTH","SOYAS","SOYLE","SOYUZ","SOZIN","SPACY","SPADE","SPADO","SPAED","SPAER","SPAES","SPAGS","SPAHI","SPAIL","SPAIN","SPAIT","SPAKE","SPALD","SPALE","SPALL","SPALT","SPAMS","SPANE","SPANG","SPANK","SPANS","SPARD","SPARK","SPARS","SPART","SPASM","SPATE","SPATS","SPAUL","SPAWL","SPAWN","SPAWS","SPAYD","SPAYS","SPAZA","SPAZZ","SPEAL","SPEAN","SPEAR","SPEAT","SPECK","SPECT","SPEEL","SPEER","SPEIL","SPEIR","SPEKS","SPELD","SPELK","SPELT","SPEOS","SPERM","SPETS","SPEUG","SPEWS","SPEWY","SPIAL","SPICA","SPICE","SPICK","SPICS","SPICY","SPIDE","SPIED","SPIEL","SPIER","SPIES","SPIFF","SPIFS","SPIKE","SPIKS","SPIKY","SPILE","SPILL","SPILT","SPIMS","SPINA","SPINE","SPINK","SPINS","SPINY","SPIRE","SPIRT","SPIRY","SPITS","SPITZ","SPIVS","SPLAT","SPLAY","SPLOG","SPODE","SPODS","SPOIL","SPOOF","SPOOK","SPOOL","SPOOM","SPOON","SPOOR","SPOOT","SPORE","SPORK","SPORT","SPOSH","SPOTS","SPOUT","SPRAD","SPRAG","SPRAT","SPRED","SPREE","SPREW","SPRIG","SPRIT","SPROD","SPROG","SPRUE","SPRUG","SPUDS","SPUED","SPUER","SPUES","SPUGS","SPULE","SPUME","SPUMY","SPUNK","SPURN","SPURS","SPURT","SPUTA","SPYAL","SPYRE","SQUAB","SQUAD","SQUAT","SQUAW","SQUEG","SQUIB","SQUID","SQUIT","SQUIZ","STABS","STADE","STAGS","STAGY","STAID","STAIG","STAIN","STAIR","STAKE","STALE","STALK","STALL","STAMP","STANE","STANG","STANK","STAPH","STAPS","STARE","STARK","STARN","STARR","STARS","STASH","STATS","STAUN","STAVE","STAWS","STEAD","STEAK","STEAL","STEAM","STEAN","STEAR","STEDD","STEDE","STEDS","STEED","STEEK","STEEL","STEEM","STEEN","STEEP","STEER","STEIL","STEIN","STELA","STELE","STELL","STEME","STEMS","STEND","STENO","STENS","STENT","STEPT","STERE","STERN","STETS","STEWS","STEWY","STEYS","STICH","STIED","STIES","STIFF","STILB","STILE","STILT","STIME","STIMS","STIMY","STING","STINK","STINT","STIPA","STIPE","STIRE","STIRK","STIRP","STIRS","STIVE","STIVY","STOAE","STOAI","STOAS","STOAT","STOBS","STOEP","STOGY","STOIC","STOIT","STOKE","STOLE","STOLN","STOMA","STOMP","STOND","STONE","STONG","STONK","STONN","STONY","STOOD","STOOK","STOOL","STOOP","STOOR","STOPE","STOPT","STORK","STOSS","STOTS","STOTT","STOUN","STOUP","STOUR","STOUT","STOVE","STOWN","STOWP","STOWS","STRAD","STRAE","STRAG","STRAK","STRAP","STRAW","STRAY","STREP","STREW","STRIA","STRIG","STRIM","STROP","STROW","STROY","STRUM","STRUT","STUDE","STUDS","STULL","STULM","STUMM","STUMP","STUMS","STUNG","STUNK","STUNS","STUNT","STUPA","STUPE","STURE","STURT","STYED","STYES","STYLI","STYLO","STYME","STYMY","STYRE","STYTE","SUAVE","SUBAH","SUBAS","SUBBY","SUBER","SUBHA","SUCCI","SUCKY","SUCRE","SUDDS","SUDOR","SUDSY","SUEDE","SUENT","SUERS","SUETE","SUETS","SUETY","SUGAN","SUGAR","SUGHS","SUGOS","SUHUR","SUIDS","SUING","SUINT","SUITS","SUJEE","SUKHS","SUKUK","SULCI","SULFA","SULFO","SULKS","SULKY","SULLY","SULPH","SULUS","SUMAC","SUMIS","SUMMA","SUMOS","SUMPH","SUMPS","SUNIS","SUNKS","SUNNA","SUNNS","SUNNY","SUNUP","SUPES","SUPRA","SURAH","SURAL","SURAS","SURAT","SURDS","SURED","SURER","SURES","SURFS","SURFY","SURGY","SURLY","SURRA","SUSED","SUSES","SUSHI","SUSUS","SUTOR","SUTRA","SUTTA","SWABS","SWACK","SWADS","SWAGE","SWAGS","SWAIL","SWAIN","SWALE","SWALY","SWAMI","SWAMP","SWAMY","SWANG","SWANK","SWANS","SWAPS","SWAPT","SWARD","SWARE","SWARF","SWARM","SWART","SWASH","SWATH","SWATS","SWAYL","SWAYS","SWEAL","SWEAR","SWEAT","SWEDE","SWEED","SWEEL","SWEEP","SWEER","SWEES","SWEET","SWEIR","SWELT","SWEPT","SWERF","SWEYS","SWIES","SWIFT","SWIGS","SWILE","SWILL","SWIMS","SWINE","SWINK","SWIRE","SWIRL","SWISH","SWISS","SWITH","SWITS","SWIVE","SWIZZ","SWOBS","SWOLE","SWOLN","SWOON","SWOOP","SWOPS","SWOPT","SWORD","SWORE","SWORN","SWOTS","SWOUN","SWUNG","SYBBE","SYBIL","SYBOE","SYBOW","SYCEE","SYCES","SYCON","SYENS","SYKER","SYKES","SYLIS","SYLPH","SYLVA","SYMAR","SYNCH","SYNCS","SYNDS","SYNED","SYNES","SYNOD","SYNTH","SYPED","SYPES","SYPHS","SYRAH","SYREN","SYRUP","SYSOP","SYTHE","SYVER","TAALS","TAATA","TABBY","TABER","TABES","TABID","TABIS","TABLA","TABOO","TABOR","TABUN","TABUS","TACAN","TACES","TACET","TACHE","TACHO","TACHS","TACIT","TACKS","TACKY","TACOS","TACTS","TAELS","TAFFY","TAFIA","TAGGY","TAGMA","TAHAS","TAHRS","TAIGA","TAIGS","TAIKO","TAILS","TAINS","TAINT","TAIRA","TAISH","TAITS","TAJES","TAKAS","TAKER","TAKHI","TAKIN","TAKIS","TAKKY","TALAK","TALAQ","TALAR","TALAS","TALCS","TALCY","TALEA","TALER","TALES","TALKY","TALLS","TALMA","TALON","TALPA","TALUK","TALUS","TAMAL","TAMED","TAMER","TAMES","TAMIN","TAMIS","TAMMY","TAMPS","TANAS","TANGA","TANGI","TANGO","TANGS","TANGY","TANHS","TANKA","TANKY","TANNA","TANSY","TANTI","TANTO","TANTY","TAPAS","TAPEN","TAPER","TAPET","TAPIR","TAPIS","TAPPA","TAPUS","TARAS","TARDO","TARDY","TARED","TARES","TARGA","TARGE","TARNS","TAROC","TAROK","TAROS","TAROT","TARPS","TARRE","TARRY","TARSI","TARTS","TARTY","TASAR","TASED","TASER","TASES","TASSA","TASSE","TASSO","TASTE","TASTY","TATAR","TATER","TATES","TATHS","TATIE","TATOU","TATTS","TATTY","TATUS","TAUBE","TAULD","TAUNT","TAUON","TAUPE","TAUTS","TAVAH","TAVAS","TAVER","TAWAI","TAWAS","TAWED","TAWER","TAWIE","TAWNY","TAWSE","TAWTS","TAXED","TAXER","TAXIS","TAXOL","TAXON","TAXOR","TAXUS","TAYRA","TAZZA","TAZZE","TEADE","TEADS","TEAED","TEAKS","TEALS","TEARS","TEARY","TEASE","TEATS","TEAZE","TECHY","TECTA","TEDDY","TEELS","TEEMS","TEEND","TEENE","TEENS","TEENY","TEERS","TEFFS","TEGGS","TEGUA","TEGUS","TEHRS","TEIID","TEILS","TEIND","TEINS","TELAE","TELCO","TELES","TELEX","TELIA","TELIC","TELLY","TELOI","TELOS","TEMED","TEMES","TEMPI","TEMPO","TEMPS","TEMPT","TEMSE","TENCH","TENDS","TENDU","TENES","TENET","TENGE","TENIA","TENNE","TENNO","TENNY","TENON","TENOR","TENSE","TENTH","TENTS","TENTY","TENUE","TEPAL","TEPAS","TEPEE","TEPID","TEPOY","TERAI","TERAS","TERCE","TEREK","TERES","TERFE","TERFS","TERGA","TERNE","TERNS","TERRA","TERRY","TERSE","TERTS","TESLA","TESTA","TESTE","TESTY","TETES","TETHS","TETRA","TETRI","TEUCH","TEUGH","TEWED","TEWEL","TEWIT","TEXAS","TEXES","TEXTS","THACK","THAGI","THAIM","THALE","THALI","THANA","THANE","THANG","THANS","THANX","THARM","THARS","THAWS","THAWY","THEBE","THECA","THEED","THEEK","THEES","THEGN","THEIC","THEIN","THELF","THEMA","THENS","THEOW","THERM","THESP","THETA","THETE","THEWS","THEWY","THIEF","THIGH","THIGS","THILK","THILL","THINE","THINS","THIOL","THIRL","THOFT","THOLE","THOLI","THONG","THORN","THORO","THORP","THOUS","THOWL","THRAE","THRAW","THRID","THRIP","THROB","THROE","THRUM","THUDS","THUGS","THUJA","THUMP","THUNK","THURL","THUYA","THYME","THYMI","THYMY","TIANS","TIARA","TIARS","TIBIA","TICAL","TICCA","TICED","TICES","TICHY","TICKS","TICKY","TIDAL","TIDDY","TIDED","TIDES","TIERS","TIFFS","TIFOS","TIFTS","TIGER","TIGES","TIGON","TIKAS","TIKES","TIKIS","TIKKA","TILAK","TILDE","TILED","TILER","TILES","TILLS","TILTH","TILTS","TIMBO","TIMER","TIMID","TIMON","TIMPS","TINAS","TINCT","TINDS","TINEA","TINED","TINES","TINGE","TINGS","TINKS","TINNY","TINTS","TINTY","TIPIS","TIPPY","TIPSY","TIRES","TIRLS","TIROS","TIRRS","TITAN","TITCH","TITER","TITHE","TITIS","TITRE","TITTY","TITUP","TIYIN","TIYNS","TIZES","TIZZY","TOADS","TOADY","TOAST","TOAZE","TOCKS","TOCKY","TOCOS","TODDE","TODDY","TOEAS","TOFFS","TOFFY","TOFTS","TOFUS","TOGAE","TOGAS","TOGED","TOGES","TOGUE","TOHOS","TOILE","TOILS","TOING","TOISE","TOITS","TOKAY","TOKED","TOKEN","TOKER","TOKES","TOKOS","TOLAN","TOLAR","TOLAS","TOLED","TOLES","TOLLS","TOLLY","TOLTS","TOLUS","TOLYL","TOMAN","TOMBS","TOMES","TOMIA","TOMOS","TONAL","TONDI","TONDO","TONED","TONES","TONEY","TONGA","TONGS","TONIC","TONKA","TONKS","TONNE","TONUS","TOOMS","TOONS","TOOTH","TOOTS","TOPAZ","TOPED","TOPEE","TOPEK","TOPER","TOPES","TOPHE","TOPHI","TOPHS","TOPIS","TOPOI","TOPOS","TOPPY","TOQUE","TORAH","TORAN","TORAS","TORCH","TORCS","TORES","TORIC","TORII","TOROS","TOROT","TORRS","TORSE","TORSI","TORSK","TORSO","TORTA","TORTE","TORTS","TORUS","TOSAS","TOSED","TOSES","TOSHY","TOSSY","TOTED","TOTEM","TOTER","TOTES","TOTTY","TOUKS","TOUNS","TOURS","TOUSE","TOUSY","TOUTS","TOUZE","TOUZY","TOWEL","TOWIE","TOWNS","TOWNY","TOWSE","TOWSY","TOWTS","TOWZE","TOWZY","TOXIC","TOXIN","TOYED","TOYER","TOYON","TOYOS","TOZED","TOZES","TOZIE","TRABS","TRACT","TRADE","TRADS","TRAGI","TRAIK","TRAIL","TRAIT","TRAMP","TRAMS","TRANK","TRANQ","TRANS","TRANT","TRAPE","TRAPS","TRAPT","TRASS","TRATS","TRATT","TRAVE","TRAWL","TRAYF","TREAD","TRECK","TREED","TREEN","TREES","TREFA","TREIF","TREKS","TREMA","TREMS","TRESS","TREST","TRETS","TREWS","TREYF","TREYS","TRIAC","TRIAD","TRIBE","TRICE","TRIDE","TRIER","TRIFF","TRIGO","TRIGS","TRIKE","TRILD","TRILL","TRIMS","TRINE","TRINS","TRIOL","TRIOR","TRIOS","TRIPE","TRIPY","TRIST","TRITE","TROAD","TROAK","TROAT","TROCK","TRODE","TRODS","TROGS","TROIS","TROKE","TROLL","TROMP","TRONA","TRONC","TRONE","TRONK","TRONS","TROOP","TROOZ","TROPE","TROTH","TROTS","TROUT","TROVE","TROWS","TROYS","TRUCE","TRUED","TRUER","TRUES","TRUGO","TRUGS","TRULL","TRUMP","TRUSS","TRYER","TRYKE","TRYMA","TRYPS","TRYST","TSADE","TSADI","TSARS","TSKED","TSUBA","TSUBO","TUANS","TUART","TUATH","TUBAE","TUBAL","TUBAR","TUBAS","TUBBY","TUBED","TUBER","TUBES","TUCKS","TUFAS","TUFFE","TUFFS","TUFTS","TUFTY","TUGRA","TUILE","TUINA","TUISM","TULES","TULIP","TULLE","TULPA","TULSI","TUMID","TUMMY","TUMOR","TUMPS","TUMPY","TUNAS","TUNDS","TUNED","TUNER","TUNES","TUNGS","TUNIC","TUNNY","TUPEK","TUPIK","TUPLE","TUQUE","TURBO","TURDS","TURFS","TURFY","TURKS","TURME","TURMS","TURNT","TURPS","TURRS","TUSHY","TUSKS","TUSKY","TUTEE","TUTOR","TUTTI","TUTTY","TUTUS","TUXES","TUYER","TWAES","TWAIN","TWALS","TWANG","TWANK","TWATS","TWAYS","TWEAK","TWEED","TWEEL","TWEEN","TWEEP","TWEER","TWEET","TWERK","TWERP","TWIER","TWIGS","TWILL","TWILT","TWINE","TWINK","TWINS","TWINY","TWIRE","TWIRL","TWIRP","TWIST","TWITE","TWITS","TWIXT","TWOER","TWYER","TYEES","TYERS","TYING","TYIYN","TYKES","TYLER","TYMPS","TYNDE","TYNED","TYNES","TYPAL","TYPEY","TYPIC","TYPPS","TYPTO","TYRAN","TYRED","TYRES","TYROS","TYTHE","TZARS","UDALS","UDDER","UDONS","UGALI","UGGED","UHLAN","UHURU","UKASE","ULAMA","ULANS","ULCER","ULEMA","ULMIN","ULNAD","ULNAE","ULNAR","ULNAS","ULPAN","ULTRA","ULVAS","ULYIE","ULZIE","UMAMI","UMBEL","UMBER","UMBLE","UMBOS","UMBRA","UMBRE","UMIAC","UMIAK","UMIAQ","UMMAH","UMMAS","UMMED","UMPED","UMPHS","UMPIE","UMPTY","UMRAH","UMRAS","UNAIS","UNAPT","UNARM","UNARY","UNAUS","UNBAG","UNBAN","UNBAR","UNBED","UNBID","UNBOX","UNCAP","UNCES","UNCIA","UNCLE","UNCOS","UNCOY","UNCUS","UNCUT","UNDAM","UNDEE","UNDID","UNDOS","UNDUG","UNETH","UNFED","UNFIT","UNFIX","UNGAG","UNGET","UNGOD","UNGOT","UNGUM","UNHAT","UNHIP","UNICA","UNIFY","UNION","UNITE","UNITY","UNJAM","UNKED","UNKET","UNKID","UNLAW","UNLAY","UNLED","UNLET","UNLID","UNLIT","UNMAN","UNMET","UNMEW","UNMIX","UNPAY","UNPEG","UNPEN","UNPIN","UNRED","UNRID","UNRIG","UNRIP","UNSAW","UNSAY","UNSEE","UNSET","UNSEW","UNSEX","UNSOD","UNTAX","UNTIE","UNTIN","UNWED","UNWET","UNWIT","UNWON","UPBOW","UPBYE","UPDOS","UPDRY","UPEND","UPJET","UPLAY","UPLED","UPLIT","UPPED","UPRAN","UPRUN","UPSEE","UPSEY","UPTAK","UPTER","UPTIE","URAEI","URALI","URAOS","URARE","URARI","URASE","URATE","URBEX","URBIA","URDEE","UREAL","UREAS","UREDO","UREIC","URENA","URENT","URGED","URGER","URGES","URIAL","URINE","URITE","URMAN","URNAL","URNED","URPED","URSAE","URSID","URSON","URUBU","URVAS","USHER","USNEA","USQUE","USURE","USURP","USURY","UTERI","UTILE","UTTER","UVEAL","UVEAS","UVULA","VACUA","VADED","VADES","VAGAL","VAGUE","VAGUS","VAILS","VAIRE","VAIRS","VAIRY","VAKAS","VAKIL","VALES","VALET","VALIS","VALOR","VALSE","VALVE","VAMPS","VAMPY","VANDA","VANED","VANES","VANGS","VANTS","VAPED","VAPER","VAPES","VAPID","VAPOR","VARAN","VARAS","VARDY","VAREC","VARES","VARIA","VARIX","VARNA","VARUS","VARVE","VASAL","VASES","VASTS","VASTY","VATIC","VATUS","VAUCH","VAULT","VAUNT","VAUTE","VAUTS","VAWTE","VAXES","VEALE","VEALS","VEALY","VEENA","VEEPS","VEERS","VEERY","VEGAN","VEGAS","VEGES","VEGIE","VEGOS","VEHME","VEILS","VEILY","VEINS","VEINY","VELAR","VELDS","VELDT","VELES","VELLS","VELUM","VENAE","VENAL","VENDS","VENDU","VENEY","VENGE","VENIN","VENOM","VENTS","VENUE","VENUS","VERBS","VERGE","VERRA","VERRY","VERSE","VERSO","VERST","VERTS","VERTU","VERVE","VESPA","VESTA","VESTS","VETCH","VEXED","VEXER","VEXES","VEXIL","VEZIR","VIALS","VIAND","VIBES","VIBEX","VIBEY","VICAR","VICED","VICES","VICHY","VIERS","VIEWY","VIFDA","VIFFS","VIGAS","VIGIA","VIGIL","VIGOR","VILDE","VILER","VILLA","VILLI","VILLS","VIMEN","VINAL","VINAS","VINCA","VINED","VINER","VINES","VINEW","VINIC","VINOS","VINTS","VINYL","VIOLA","VIOLD","VIOLS","VIPER","VIRAL","VIRED","VIREO","VIRES","VIRGA","VIRGE","VIRID","VIRLS","VIRTU","VISAS","VISED","VISES","VISIE","VISNE","VISON","VISOR","VISTA","VISTO","VITAE","VITAL","VITAS","VITEX","VITRO","VITTA","VIVAS","VIVAT","VIVDA","VIVER","VIVES","VIVID","VIXEN","VIZIR","VIZOR","VLEIS","VLIES","VLOGS","VOARS","VOCAB","VOCAL","VOCES","VODDY","VODKA","VODOU","VODUN","VOEMA","VOGIE","VOGUE","VOIDS","VOILA","VOILE","VOIPS","VOLAE","VOLAR","VOLED","VOLES","VOLET","VOLKS","VOLTA","VOLTE","VOLTI","VOLTS","VOLVA","VOLVE","VOMER","VOMIT","VOTER","VOTES","VOUCH","VOUGE","VOULU","VOWED","VOWEL","VOWER","VOXEL","VOZHD","VRAIC","VRILS","VROOM","VROUS","VROUW","VROWS","VUGGS","VUGGY","VUGHS","VUGHY","VULGO","VULNS","VULVA","VUTTY","VYING","WAACS","WACKE","WACKO","WACKS","WACKY","WADDS","WADDY","WADED","WADER","WADES","WADGE","WADIS","WADTS","WAFER","WAFFS","WAFTS","WAGED","WAGER","WAGES","WAGGA","WAGON","WAGYU","WAHOO","WAIDE","WAIFS","WAIFT","WAILS","WAINS","WAIRS","WAIST","WAITE","WAITS","WAIVE","WAKAS","WAKED","WAKEN","WAKER","WAKES","WAKFS","WALDO","WALDS","WALED","WALER","WALES","WALIE","WALIS","WALKS","WALLA","WALLY","WALTY","WALTZ","WAMED","WAMES","WAMUS","WANDS","WANED","WANES","WANEY","WANGS","WANKS","WANKY","WANLE","WANLY","WANTY","WANZE","WAQFS","WARBS","WARBY","WARDS","WARED","WARES","WAREZ","WARKS","WARNS","WARPS","WARRE","WARST","WARTS","WARTY","WASES","WASHY","WASMS","WASPS","WASPY","WASTS","WATAP","WAUFF","WAUGH","WAUKS","WAULK","WAULS","WAURS","WAVED","WAVER","WAVEY","WAWAS","WAWES","WAWLS","WAXED","WAXEN","WAXER","WAXES","WAYED","WAZIR","WAZOO","WEALD","WEALS","WEAMB","WEANS","WEARS","WEARY","WEAVE","WEBBY","WEBER","WECHT","WEDEL","WEDGE","WEDGY","WEEDS","WEEDY","WEEKE","WEELS","WEEMS","WEENS","WEENY","WEEPS","WEEPY","WEEST","WEETE","WEETS","WEFTE","WEFTS","WEIDS","WEIGH","WEILS","WEIRS","WEISE","WEIZE","WEKAS","WELCH","WELDS","WELKE","WELKS","WELKT","WELLS","WELLY","WELSH","WELTS","WEMBS","WENCH","WENDS","WENGE","WENNY","WENTS","WEROS","WERSH","WESTS","WETAS","WETLY","WEXED","WEXES","WHACK","WHALE","WHAMO","WHAMS","WHANG","WHAPS","WHARE","WHARF","WHATA","WHAUP","WHAUR","WHEAL","WHEAR","WHEAT","WHEEN","WHEEP","WHEFT","WHELK","WHELM","WHELP","WHENS","WHETS","WHEWS","WHEYS","WHIDS","WHIFF","WHIFT","WHIGS","WHILK","WHIMS","WHINE","WHINS","WHINY","WHIOS","WHIPS","WHIPT","WHIRL","WHIRR","WHIRS","WHISH","WHISK","WHISS","WHIST","WHITS","WHITY","WHIZZ","WHOMP","WHOOF","WHOOP","WHOOT","WHOPS","WHORE","WHORL","WHORT","WHOSO","WHOWS","WHUMP","WHUPS","WHYDA","WICCA","WICKS","WICKY","WIDDY","WIDEN","WIDES","WIDOW","WIELD","WIELS","WIFED","WIFES","WIFEY","WIFIE","WIFTY","WIGAN","WIGGA","WIGGY","WIGHT","WIKIS","WILCO","WILDS","WILED","WILES","WILGA","WILIS","WILJA","WILLS","WILTS","WIMPS","WIMPY","WINCE","WINCH","WINDY","WINED","WINES","WINEY","WINGE","WINGS","WINGY","WINKS","WINNA","WINNS","WINOS","WINZE","WIPED","WIPER","WIRER","WIRRA","WISED","WISER","WISES","WISHA","WISHT","WISPS","WISPY","WISTS","WITAN","WITED","WITES","WITHE","WITHS","WITHY","WITTY","WIVED","WIVER","WIVES","WIZEN","WIZES","WOADS","WOALD","WOCKS","WODGE","WOFUL","WOJUS","WOKEN","WOKER","WOKKA","WOLDS","WOLFS","WOLLY","WOLVE","WOMAN","WOMBS","WOMBY","WOMEN","WOMYN","WONGA","WONGI","WONKS","WONKY","WONTS","WOODY","WOOED","WOOER","WOOFS","WOOFY","WOOLD","WOOLS","WOOLY","WOONS","WOOPS","WOOPY","WOOSE","WOOSH","WOOTZ","WOOZY","WORDY","WORMS","WORMY","WORTS","WOUND","WOVEN","WOWED","WOWEE","WOXEN","WRACK","WRANG","WRAPT","WRAST","WRATE","WRATH","WRAWL","WREAK","WRECK","WRENS","WREST","WRICK","WRIED","WRIER","WRIES","WRING","WRIST","WRITS","WROKE","WROOT","WROTH","WRUNG","WRYER","WRYLY","WUDDY","WUDUS","WULLS","WURST","WUSES","WUSHU","WUSSY","WUXIA","WYLED","WYLES","WYNDS","WYNNS","WYTED","WYTES","XEBEC","XENIA","XENIC","XENON","XERIC","XERUS","XOANA","XRAYS","XYLAN","XYLEM","XYLIC","XYLOL","XYLYL","XYSTI","XYSTS","YAARS","YABAS","YABBA","YABBY","YACCA","YACHT","YACKA","YACKS","YAFFS","YAGER","YAGES","YAGIS","YAHOO","YAIRD","YAKKA","YAKOW","YALES","YAMEN","YAMPY","YAMUN","YANGS","YANKS","YAPOK","YAPON","YAPPS","YAPPY","YARAK","YARCO","YARDS","YARER","YARFA","YARKS","YARNS","YARRS","YARTA","YARTO","YATES","YAUDS","YAULD","YAUPS","YAWED","YAWEY","YAWLS","YAWNS","YAWNY","YAWPS","YBORE","YCLAD","YCLED","YCOND","YDRAD","YDRED","YEADS","YEAHS","YEALM","YEANS","YEARD","YEARN","YEAST","YECCH","YECHS","YECHY","YEDES","YEEDS","YEESH","YEGGS","YELKS","YELLS","YELMS","YELPS","YELTS","YENTA","YENTE","YERBA","YERDS","YERKS","YESES","YESKS","YESTS","YESTY","YETIS","YETTS","YEUKS","YEUKY","YEVEN","YEVES","YEWEN","YEXED","YEXES","YFERE","YIKED","YIKES","YILLS","YINCE","YIPES","YIPPY","YIRDS","YIRKS","YIRRS","YIRTH","YITES","YITIE","YLEMS","YLIKE","YLKES","YMOLT","YMPES","YOBBO","YOBBY","YOCKS","YODEL","YODHS","YODLE","YOGAS","YOGEE","YOGHS","YOGIC","YOGIN","YOGIS","YOICK","YOJAN","YOKED","YOKEL","YOKER","YOKES","YOKUL","YOLKS","YOLKY","YOMIM","YOMPS","YONIC","YONIS","YONKS","YOOFS","YOOPS","YORES","YORKS","YORPS","YOUKS","YOUNG","YOURN","YOURT","YOUSE","YOUTH","YOWED","YOWES","YOWIE","YOWLS","YOWZA","YRAPT","YRENT","YRIVD","YRNEH","YSAME","YTOST","YUANS","YUCAS","YUCCA","YUCCH","YUCKO","YUCKS","YUCKY","YUFTS","YUGAS","YUKED","YUKES","YUKKY","YUKOS","YULAN","YULES","YUMMO","YUMMY","YUMPS","YUPON","YUPPY","YURTA","YURTS","YUZUS","ZABRA","ZACKS","ZAIDA","ZAIDY","ZAIRE","ZAKAT","ZAMAN","ZAMBO","ZAMIA","ZANJA","ZANTE","ZANZA","ZANZE","ZAPPY","ZARFS","ZARIS","ZATIS","ZAXES","ZAYIN","ZAZEN","ZEALS","ZEBEC","ZEBUB","ZEBUS","ZEDAS","ZEINS","ZENDO","ZERDA","ZERKS","ZESTS","ZESTY","ZETAS","ZEXES","ZEZES","ZHOMO","ZIBET","ZIFFS","ZIGAN","ZILAS","ZILCH","ZILLA","ZILLS","ZIMBI","ZIMBS","ZINCO","ZINCS","ZINCY","ZINEB","ZINES","ZINGS","ZINGY","ZINKE","ZINKY","ZIPPO","ZIPPY","ZIRAM","ZITIS","ZIZEL","ZIZIT","ZLOTE","ZLOTY","ZOAEA","ZOBOS","ZOBUS","ZOCCO","ZOEAE","ZOEAL","ZOEAS","ZOISM","ZOIST","ZOMBI","ZONAE","ZONAL","ZONDA","ZONED","ZONER","ZONKS","ZOOEA","ZOOEY","ZOOID","ZOOKS","ZOOMS","ZOONS","ZOOTY","ZOPPA","ZOPPO","ZORIL","ZORIS","ZORRO","ZOUKS","ZOWEE","ZOWIE","ZULUS","ZUPAN","ZUPAS","ZUPPA","ZURFS","ZUZIM","ZYGAL","ZYGON","ZYMES","ZYMIC"];class aS extends Error{constructor(S){super("ClientResponseError"),this.url="",this.status=0,this.response={},this.isAbort=!1,this.originalError=null,Object.setPrototypeOf(this,aS.prototype),null!==S&&"object"==typeof S&&(this.url="string"==typeof S.url?S.url:"",this.status="number"==typeof S.status?S.status:0,this.isAbort=!!S.isAbort,this.originalError=S.originalError,null!==S.response&&"object"==typeof S.response?this.response=S.response:null!==S.data&&"object"==typeof S.data?this.response=S.data:this.response={}),this.originalError||S instanceof aS||(this.originalError=S),"undefined"!=typeof DOMException&&S instanceof DOMException&&(this.isAbort=!0),this.name="ClientResponseError "+this.status,this.message=this.response?.message,this.message||(this.isAbort?this.message="The request was autocancelled. You can find more info in https://github.com/pocketbase/js-sdk#auto-cancellation.":this.originalError?.cause?.message?.includes("ECONNREFUSED ::1")?this.message="Failed to connect to the PocketBase server. Try changing the SDK URL from localhost to 127.0.0.1 (https://github.com/pocketbase/js-sdk/issues/21).":this.message="Something went wrong while processing your request.")}get data(){return this.response}toJSON(){return{...this}}}const lS=/^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;function cS(S,E,A){const O=Object.assign({},A||{}),e=O.encode||BS;if(!lS.test(S))throw new TypeError("argument name is invalid");const R=e(E);if(R&&!lS.test(R))throw new TypeError("argument val is invalid");let t=S+"="+R;if(null!=O.maxAge){const S=O.maxAge-0;if(isNaN(S)||!isFinite(S))throw new TypeError("option maxAge is invalid");t+="; Max-Age="+Math.floor(S)}if(O.domain){if(!lS.test(O.domain))throw new TypeError("option domain is invalid");t+="; Domain="+O.domain}if(O.path){if(!lS.test(O.path))throw new TypeError("option path is invalid");t+="; Path="+O.path}if(O.expires){if(!function(S){return"[object Date]"===Object.prototype.toString.call(S)||S instanceof Date}(O.expires)||isNaN(O.expires.valueOf()))throw new TypeError("option expires is invalid");t+="; Expires="+O.expires.toUTCString()}if(O.httpOnly&&(t+="; HttpOnly"),O.secure&&(t+="; Secure"),O.priority)switch("string"==typeof O.priority?O.priority.toLowerCase():O.priority){case"low":t+="; Priority=Low";break;case"medium":t+="; Priority=Medium";break;case"high":t+="; Priority=High";break;default:throw new TypeError("option priority is invalid")}if(O.sameSite)switch("string"==typeof O.sameSite?O.sameSite.toLowerCase():O.sameSite){case!0:t+="; SameSite=Strict";break;case"lax":t+="; SameSite=Lax";break;case"strict":t+="; SameSite=Strict";break;case"none":t+="; SameSite=None";break;default:throw new TypeError("option sameSite is invalid")}return t}function HS(S){return-1!==S.indexOf("%")?decodeURIComponent(S):S}function BS(S){return encodeURIComponent(S)}const GS="undefined"!=typeof navigator&&"ReactNative"===navigator.product||"undefined"!=typeof global&&global.HermesInternal;let KS;function uS(S){if(S)try{const E=decodeURIComponent(KS(S.split(".")[1]).split("").map((function(S){return"%"+("00"+S.charCodeAt(0).toString(16)).slice(-2)})).join(""));return JSON.parse(E)||{}}catch(S){}return{}}function dS(S,E=0){let A=uS(S);return!(Object.keys(A).length>0&&(!A.exp||A.exp-E>Date.now()/1e3))}KS="function"!=typeof atob||GS?S=>{let E=String(S).replace(/=+$/,"");if(E.length%4==1)throw new Error("'atob' failed: The string to be decoded is not correctly encoded.");for(var A,O,e=0,R=0,t="";O=E.charAt(R++);~O&&(A=e%4?64*A+O:O,e++%4)?t+=String.fromCharCode(255&A>>(-2*e&6)):0)O="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(O);return t}:atob;const hS="pb_auth";class FS{constructor(){this.baseToken="",this.baseModel=null,this._onChangeCallbacks=[]}get token(){return this.baseToken}get record(){return this.baseModel}get model(){return this.baseModel}get isValid(){return!dS(this.token)}get isSuperuser(){let S=uS(this.token);return"auth"==S.type&&("_superusers"==this.record?.collectionName||!this.record?.collectionName&&"pbc_3142635823"==S.collectionId)}get isAdmin(){return console.warn("Please replace pb.authStore.isAdmin with pb.authStore.isSuperuser OR simply check the value of pb.authStore.record?.collectionName"),this.isSuperuser}get isAuthRecord(){return console.warn("Please replace pb.authStore.isAuthRecord with !pb.authStore.isSuperuser OR simply check the value of pb.authStore.record?.collectionName"),"auth"==uS(this.token).type&&!this.isSuperuser}save(S,E){this.baseToken=S||"",this.baseModel=E||null,this.triggerChange()}clear(){this.baseToken="",this.baseModel=null,this.triggerChange()}loadFromCookie(S,E=hS){const A=function(S,E){const A={};if("string"!=typeof S)return A;const O=Object.assign({},E||{}).decode||HS;let e=0;for(;e<S.length;){const E=S.indexOf("=",e);if(-1===E)break;let R=S.indexOf(";",e);if(-1===R)R=S.length;else if(R<E){e=S.lastIndexOf(";",E-1)+1;continue}const t=S.slice(e,E).trim();if(void 0===A[t]){let e=S.slice(E+1,R).trim();34===e.charCodeAt(0)&&(e=e.slice(1,-1));try{A[t]=O(e)}catch(S){A[t]=e}}e=R+1}return A}(S||"")[E]||"";let O={};try{O=JSON.parse(A),(null===typeof O||"object"!=typeof O||Array.isArray(O))&&(O={})}catch(S){}this.save(O.token||"",O.record||O.model||null)}exportToCookie(S,E=hS){const A={secure:!0,sameSite:!0,httpOnly:!0,path:"/"},O=uS(this.token);A.expires=O?.exp?new Date(1e3*O.exp):new Date("1970-01-01"),S=Object.assign({},A,S);const e={token:this.token,record:this.record?JSON.parse(JSON.stringify(this.record)):null};let R=cS(E,JSON.stringify(e),S);const t="undefined"!=typeof Blob?new Blob([R]).size:R.length;if(e.record&&t>4096){e.record={id:e.record?.id,email:e.record?.email};const A=["collectionId","collectionName","verified"];for(const S in this.record)A.includes(S)&&(e.record[S]=this.record[S]);R=cS(E,JSON.stringify(e),S)}return R}onChange(S,E=!1){return this._onChangeCallbacks.push(S),E&&S(this.token,this.record),()=>{for(let E=this._onChangeCallbacks.length-1;E>=0;E--)if(this._onChangeCallbacks[E]==S)return delete this._onChangeCallbacks[E],void this._onChangeCallbacks.splice(E,1)}}triggerChange(){for(const S of this._onChangeCallbacks)S&&S(this.token,this.record)}}class WS extends FS{constructor(S="pocketbase_auth"){super(),this.storageFallback={},this.storageKey=S,this._bindStorageEvent()}get token(){return(this._storageGet(this.storageKey)||{}).token||""}get record(){const S=this._storageGet(this.storageKey)||{};return S.record||S.model||null}get model(){return this.record}save(S,E){this._storageSet(this.storageKey,{token:S,record:E}),super.save(S,E)}clear(){this._storageRemove(this.storageKey),super.clear()}_storageGet(S){if("undefined"!=typeof window&&window?.localStorage){const E=window.localStorage.getItem(S)||"";try{return JSON.parse(E)}catch(S){return E}}return this.storageFallback[S]}_storageSet(S,E){if("undefined"!=typeof window&&window?.localStorage){let A=E;"string"!=typeof E&&(A=JSON.stringify(E)),window.localStorage.setItem(S,A)}else this.storageFallback[S]=E}_storageRemove(S){"undefined"!=typeof window&&window?.localStorage&&window.localStorage?.removeItem(S),delete this.storageFallback[S]}_bindStorageEvent(){"undefined"!=typeof window&&window?.localStorage&&window.addEventListener&&window.addEventListener("storage",(S=>{if(S.key!=this.storageKey)return;const E=this._storageGet(this.storageKey)||{};super.save(E.token||"",E.record||E.model||null)}))}}class fS{constructor(S){this.client=S}}class pS extends fS{async getAll(S){return S=Object.assign({method:"GET"},S),this.client.send("/api/settings",S)}async update(S,E){return E=Object.assign({method:"PATCH",body:S},E),this.client.send("/api/settings",E)}async testS3(S="storage",E){return E=Object.assign({method:"POST",body:{filesystem:S}},E),this.client.send("/api/settings/test/s3",E).then((()=>!0))}async testEmail(S,E,A,O){return O=Object.assign({method:"POST",body:{email:E,template:A,collection:S}},O),this.client.send("/api/settings/test/email",O).then((()=>!0))}async generateAppleClientSecret(S,E,A,O,e,R){return R=Object.assign({method:"POST",body:{clientId:S,teamId:E,keyId:A,privateKey:O,duration:e}},R),this.client.send("/api/settings/apple/generate-client-secret",R)}}const VS=["requestKey","$cancelKey","$autoCancel","fetch","headers","body","query","params","cache","credentials","headers","integrity","keepalive","method","mode","redirect","referrer","referrerPolicy","signal","window"];function gS(S){if(S){S.query=S.query||{};for(let E in S)VS.includes(E)||(S.query[E]=S[E],delete S[E])}}function mS(S){const E=[];for(const A in S){if(null===S[A]||void 0===S[A])continue;const O=S[A],e=encodeURIComponent(A);if(Array.isArray(O))for(const S of O)E.push(e+"="+encodeURIComponent(S));else O instanceof Date?E.push(e+"="+encodeURIComponent(O.toISOString())):null!==typeof O&&"object"==typeof O?E.push(e+"="+encodeURIComponent(JSON.stringify(O))):E.push(e+"="+encodeURIComponent(O))}return E.join("&")}class bS extends fS{constructor(){super(...arguments),this.clientId="",this.eventSource=null,this.subscriptions={},this.lastSentSubscriptions=[],this.maxConnectTimeout=15e3,this.reconnectAttempts=0,this.maxReconnectAttempts=1/0,this.predefinedReconnectIntervals=[200,300,500,1e3,1200,1500,2e3],this.pendingConnects=[]}get isConnected(){return!!this.eventSource&&!!this.clientId&&!this.pendingConnects.length}async subscribe(S,E,A){if(!S)throw new Error("topic must be set.");let O=S;if(A){gS(A=Object.assign({},A));const S="options="+encodeURIComponent(JSON.stringify({query:A.query,headers:A.headers}));O+=(O.includes("?")?"&":"?")+S}const e=function(S){const A=S;let O;try{O=JSON.parse(A?.data)}catch{}E(O||{})};return this.subscriptions[O]||(this.subscriptions[O]=[]),this.subscriptions[O].push(e),this.isConnected?1===this.subscriptions[O].length?await this.submitSubscriptions():this.eventSource?.addEventListener(O,e):await this.connect(),async()=>this.unsubscribeByTopicAndListener(S,e)}async unsubscribe(S){let E=!1;if(S){const A=this.getSubscriptionsByTopic(S);for(let S in A)if(this.hasSubscriptionListeners(S)){for(let E of this.subscriptions[S])this.eventSource?.removeEventListener(S,E);delete this.subscriptions[S],E||(E=!0)}}else this.subscriptions={};this.hasSubscriptionListeners()?E&&await this.submitSubscriptions():this.disconnect()}async unsubscribeByPrefix(S){let E=!1;for(let A in this.subscriptions)if((A+"?").startsWith(S)){E=!0;for(let S of this.subscriptions[A])this.eventSource?.removeEventListener(A,S);delete this.subscriptions[A]}E&&(this.hasSubscriptionListeners()?await this.submitSubscriptions():this.disconnect())}async unsubscribeByTopicAndListener(S,E){let A=!1;const O=this.getSubscriptionsByTopic(S);for(let S in O){if(!Array.isArray(this.subscriptions[S])||!this.subscriptions[S].length)continue;let O=!1;for(let A=this.subscriptions[S].length-1;A>=0;A--)this.subscriptions[S][A]===E&&(O=!0,delete this.subscriptions[S][A],this.subscriptions[S].splice(A,1),this.eventSource?.removeEventListener(S,E));O&&(this.subscriptions[S].length||delete this.subscriptions[S],A||this.hasSubscriptionListeners(S)||(A=!0))}this.hasSubscriptionListeners()?A&&await this.submitSubscriptions():this.disconnect()}hasSubscriptionListeners(S){if(this.subscriptions=this.subscriptions||{},S)return!!this.subscriptions[S]?.length;for(let S in this.subscriptions)if(this.subscriptions[S]?.length)return!0;return!1}async submitSubscriptions(){if(this.clientId)return this.addAllSubscriptionListeners(),this.lastSentSubscriptions=this.getNonEmptySubscriptionKeys(),this.client.send("/api/realtime",{method:"POST",body:{clientId:this.clientId,subscriptions:this.lastSentSubscriptions},requestKey:this.getSubscriptionsCancelKey()}).catch((S=>{if(!S?.isAbort)throw S}))}getSubscriptionsCancelKey(){return"realtime_"+this.clientId}getSubscriptionsByTopic(S){const E={};S=S.includes("?")?S:S+"?";for(let A in this.subscriptions)(A+"?").startsWith(S)&&(E[A]=this.subscriptions[A]);return E}getNonEmptySubscriptionKeys(){const S=[];for(let E in this.subscriptions)this.subscriptions[E].length&&S.push(E);return S}addAllSubscriptionListeners(){if(this.eventSource){this.removeAllSubscriptionListeners();for(let S in this.subscriptions)for(let E of this.subscriptions[S])this.eventSource.addEventListener(S,E)}}removeAllSubscriptionListeners(){if(this.eventSource)for(let S in this.subscriptions)for(let E of this.subscriptions[S])this.eventSource.removeEventListener(S,E)}async connect(){if(!(this.reconnectAttempts>0))return new Promise(((S,E)=>{this.pendingConnects.push({resolve:S,reject:E}),this.pendingConnects.length>1||this.initConnect()}))}initConnect(){this.disconnect(!0),clearTimeout(this.connectTimeoutId),this.connectTimeoutId=setTimeout((()=>{this.connectErrorHandler(new Error("EventSource connect took too long."))}),this.maxConnectTimeout),this.eventSource=new EventSource(this.client.buildURL("/api/realtime")),this.eventSource.onerror=S=>{this.connectErrorHandler(new Error("Failed to establish realtime connection."))},this.eventSource.addEventListener("PB_CONNECT",(S=>{const E=S;this.clientId=E?.lastEventId,this.submitSubscriptions().then((async()=>{let S=3;for(;this.hasUnsentSubscriptions()&&S>0;)S--,await this.submitSubscriptions()})).then((()=>{for(let S of this.pendingConnects)S.resolve();this.pendingConnects=[],this.reconnectAttempts=0,clearTimeout(this.reconnectTimeoutId),clearTimeout(this.connectTimeoutId);const E=this.getSubscriptionsByTopic("PB_CONNECT");for(let A in E)for(let O of E[A])O(S)})).catch((S=>{this.clientId="",this.connectErrorHandler(S)}))}))}hasUnsentSubscriptions(){const S=this.getNonEmptySubscriptionKeys();if(S.length!=this.lastSentSubscriptions.length)return!0;for(const E of S)if(!this.lastSentSubscriptions.includes(E))return!0;return!1}connectErrorHandler(S){if(clearTimeout(this.connectTimeoutId),clearTimeout(this.reconnectTimeoutId),!this.clientId&&!this.reconnectAttempts||this.reconnectAttempts>this.maxReconnectAttempts){for(let E of this.pendingConnects)E.reject(new aS(S));return this.pendingConnects=[],void this.disconnect()}this.disconnect(!0);const E=this.predefinedReconnectIntervals[this.reconnectAttempts]||this.predefinedReconnectIntervals[this.predefinedReconnectIntervals.length-1];this.reconnectAttempts++,this.reconnectTimeoutId=setTimeout((()=>{this.initConnect()}),E)}disconnect(S=!1){if(this.clientId&&this.onDisconnect&&this.onDisconnect(Object.keys(this.subscriptions)),clearTimeout(this.connectTimeoutId),clearTimeout(this.reconnectTimeoutId),this.removeAllSubscriptionListeners(),this.client.cancelRequest(this.getSubscriptionsCancelKey()),this.eventSource?.close(),this.eventSource=null,this.clientId="",!S){this.reconnectAttempts=0;for(let S of this.pendingConnects)S.resolve();this.pendingConnects=[]}}}class yS extends fS{decode(S){return S}async getFullList(S,E){if("number"==typeof S)return this._getFullList(S,E);let A=500;return(E=Object.assign({},S,E)).batch&&(A=E.batch,delete E.batch),this._getFullList(A,E)}async getList(S=1,E=30,A){return(A=Object.assign({method:"GET"},A)).query=Object.assign({page:S,perPage:E},A.query),this.client.send(this.baseCrudPath,A).then((S=>(S.items=S.items?.map((S=>this.decode(S)))||[],S)))}async getFirstListItem(S,E){return(E=Object.assign({requestKey:"one_by_filter_"+this.baseCrudPath+"_"+S},E)).query=Object.assign({filter:S,skipTotal:1},E.query),this.getList(1,1,E).then((S=>{if(!S?.items?.length)throw new aS({status:404,response:{code:404,message:"The requested resource wasn't found.",data:{}}});return S.items[0]}))}async getOne(S,E){if(!S)throw new aS({url:this.client.buildURL(this.baseCrudPath+"/"),status:404,response:{code:404,message:"Missing required record id.",data:{}}});return E=Object.assign({method:"GET"},E),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(S),E).then((S=>this.decode(S)))}async create(S,E){return E=Object.assign({method:"POST",body:S},E),this.client.send(this.baseCrudPath,E).then((S=>this.decode(S)))}async update(S,E,A){return A=Object.assign({method:"PATCH",body:E},A),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(S),A).then((S=>this.decode(S)))}async delete(S,E){return E=Object.assign({method:"DELETE"},E),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(S),E).then((()=>!0))}_getFullList(S=500,E){(E=E||{}).query=Object.assign({skipTotal:1},E.query);let A=[],O=async e=>this.getList(e,S||500,E).then((S=>{const E=S.items;return A=A.concat(E),E.length==S.perPage?O(e+1):A}));return O(1)}}function ZS(S,E,A,O){const e=void 0!==O;return e||void 0!==A?e?(console.warn(S),E.body=Object.assign({},E.body,A),E.query=Object.assign({},E.query,O),E):Object.assign(E,A):E}function wS(S){S._resetAutoRefresh?.()}class JS extends yS{constructor(S,E){super(S),this.collectionIdOrName=E}get baseCrudPath(){return this.baseCollectionPath+"/records"}get baseCollectionPath(){return"/api/collections/"+encodeURIComponent(this.collectionIdOrName)}get isSuperusers(){return"_superusers"==this.collectionIdOrName||"_pbc_2773867675"==this.collectionIdOrName}async subscribe(S,E,A){if(!S)throw new Error("Missing topic.");if(!E)throw new Error("Missing subscription callback.");return this.client.realtime.subscribe(this.collectionIdOrName+"/"+S,E,A)}async unsubscribe(S){return S?this.client.realtime.unsubscribe(this.collectionIdOrName+"/"+S):this.client.realtime.unsubscribeByPrefix(this.collectionIdOrName)}async getFullList(S,E){if("number"==typeof S)return super.getFullList(S,E);const A=Object.assign({},S,E);return super.getFullList(A)}async getList(S=1,E=30,A){return super.getList(S,E,A)}async getFirstListItem(S,E){return super.getFirstListItem(S,E)}async getOne(S,E){return super.getOne(S,E)}async create(S,E){return super.create(S,E)}async update(S,E,A){return super.update(S,E,A).then((S=>{if(this.client.authStore.record?.id===S?.id&&(this.client.authStore.record?.collectionId===this.collectionIdOrName||this.client.authStore.record?.collectionName===this.collectionIdOrName)){let E=Object.assign({},this.client.authStore.record.expand),A=Object.assign({},this.client.authStore.record,S);E&&(A.expand=Object.assign(E,S.expand)),this.client.authStore.save(this.client.authStore.token,A)}return S}))}async delete(S,E){return super.delete(S,E).then((E=>(!E||this.client.authStore.record?.id!==S||this.client.authStore.record?.collectionId!==this.collectionIdOrName&&this.client.authStore.record?.collectionName!==this.collectionIdOrName||this.client.authStore.clear(),E)))}authResponse(S){const E=this.decode(S?.record||{});return this.client.authStore.save(S?.token,E),Object.assign({},S,{token:S?.token||"",record:E})}async listAuthMethods(S){return S=Object.assign({method:"GET",fields:"mfa,otp,password,oauth2"},S),this.client.send(this.baseCollectionPath+"/auth-methods",S)}async authWithPassword(S,E,A){let O;A=Object.assign({method:"POST",body:{identity:S,password:E}},A),this.isSuperusers&&(O=A.autoRefreshThreshold,delete A.autoRefreshThreshold,A.autoRefresh||wS(this.client));let e=await this.client.send(this.baseCollectionPath+"/auth-with-password",A);return e=this.authResponse(e),O&&this.isSuperusers&&function(S,E,A,O){wS(S);const e=S.beforeSend,R=S.authStore.record,t=S.authStore.onChange(((E,A)=>{(!E||A?.id!=R?.id||(A?.collectionId||R?.collectionId)&&A?.collectionId!=R?.collectionId)&&wS(S)}));S._resetAutoRefresh=function(){t(),S.beforeSend=e,delete S._resetAutoRefresh},S.beforeSend=async(R,t)=>{const I=S.authStore.token;if(t.query?.autoRefresh)return e?e(R,t):{url:R,sendOptions:t};let L=S.authStore.isValid;if(L&&dS(S.authStore.token,E))try{await A()}catch(S){L=!1}L||await O();const T=t.headers||{};for(let E in T)if("authorization"==E.toLowerCase()&&I==T[E]&&S.authStore.token){T[E]=S.authStore.token;break}return t.headers=T,e?e(R,t):{url:R,sendOptions:t}}}(this.client,O,(()=>this.authRefresh({autoRefresh:!0})),(()=>this.authWithPassword(S,E,Object.assign({autoRefresh:!0},A)))),e}async authWithOAuth2Code(S,E,A,O,e,R,t){let I={method:"POST",body:{provider:S,code:E,codeVerifier:A,redirectURL:O,createData:e}};return I=ZS("This form of authWithOAuth2Code(provider, code, codeVerifier, redirectURL, createData?, body?, query?) is deprecated. Consider replacing it with authWithOAuth2Code(provider, code, codeVerifier, redirectURL, createData?, options?).",I,R,t),this.client.send(this.baseCollectionPath+"/auth-with-oauth2",I).then((S=>this.authResponse(S)))}authWithOAuth2(...S){if(S.length>1||"string"==typeof S?.[0])return console.warn("PocketBase: This form of authWithOAuth2() is deprecated and may get removed in the future. Please replace with authWithOAuth2Code() OR use the authWithOAuth2() realtime form as shown in https://pocketbase.io/docs/authentication/#oauth2-integration."),this.authWithOAuth2Code(S?.[0]||"",S?.[1]||"",S?.[2]||"",S?.[3]||"",S?.[4]||{},S?.[5]||{},S?.[6]||{});const E=S?.[0]||{};let A=null;E.urlCallback||(A=XS(void 0));const O=new bS(this.client);function e(){A?.close(),O.unsubscribe()}const R={},t=E.requestKey;return t&&(R.requestKey=t),this.listAuthMethods(R).then((S=>{const R=S.oauth2.providers.find((S=>S.name===E.provider));if(!R)throw new aS(new Error(`Missing or invalid provider "${E.provider}".`));const I=this.client.buildURL("/api/oauth2-redirect"),L=t?this.client.cancelControllers?.[t]:void 0;return L&&(L.signal.onabort=()=>{e()}),new Promise((async(S,t)=>{try{await O.subscribe("@oauth2",(async A=>{const T=O.clientId;try{if(!A.state||T!==A.state)throw new Error("State parameters don't match.");if(A.error||!A.code)throw new Error("OAuth2 redirect error or missing code: "+A.error);const O=Object.assign({},E);delete O.provider,delete O.scopes,delete O.createData,delete O.urlCallback,L?.signal?.onabort&&(L.signal.onabort=null);const e=await this.authWithOAuth2Code(R.name,A.code,R.codeVerifier,I,E.createData,O);S(e)}catch(S){t(new aS(S))}e()}));const T={state:O.clientId};E.scopes?.length&&(T.scope=E.scopes.join(" "));const n=this._replaceQueryParams(R.authURL+I,T);let N=E.urlCallback||function(S){A?A.location.href=S:A=XS(S)};await N(n)}catch(S){e(),t(new aS(S))}}))})).catch((S=>{throw e(),S}))}async authRefresh(S,E){let A={method:"POST"};return A=ZS("This form of authRefresh(body?, query?) is deprecated. Consider replacing it with authRefresh(options?).",A,S,E),this.client.send(this.baseCollectionPath+"/auth-refresh",A).then((S=>this.authResponse(S)))}async requestPasswordReset(S,E,A){let O={method:"POST",body:{email:S}};return O=ZS("This form of requestPasswordReset(email, body?, query?) is deprecated. Consider replacing it with requestPasswordReset(email, options?).",O,E,A),this.client.send(this.baseCollectionPath+"/request-password-reset",O).then((()=>!0))}async confirmPasswordReset(S,E,A,O,e){let R={method:"POST",body:{token:S,password:E,passwordConfirm:A}};return R=ZS("This form of confirmPasswordReset(token, password, passwordConfirm, body?, query?) is deprecated. Consider replacing it with confirmPasswordReset(token, password, passwordConfirm, options?).",R,O,e),this.client.send(this.baseCollectionPath+"/confirm-password-reset",R).then((()=>!0))}async requestVerification(S,E,A){let O={method:"POST",body:{email:S}};return O=ZS("This form of requestVerification(email, body?, query?) is deprecated. Consider replacing it with requestVerification(email, options?).",O,E,A),this.client.send(this.baseCollectionPath+"/request-verification",O).then((()=>!0))}async confirmVerification(S,E,A){let O={method:"POST",body:{token:S}};return O=ZS("This form of confirmVerification(token, body?, query?) is deprecated. Consider replacing it with confirmVerification(token, options?).",O,E,A),this.client.send(this.baseCollectionPath+"/confirm-verification",O).then((()=>{const E=uS(S),A=this.client.authStore.record;return A&&!A.verified&&A.id===E.id&&A.collectionId===E.collectionId&&(A.verified=!0,this.client.authStore.save(this.client.authStore.token,A)),!0}))}async requestEmailChange(S,E,A){let O={method:"POST",body:{newEmail:S}};return O=ZS("This form of requestEmailChange(newEmail, body?, query?) is deprecated. Consider replacing it with requestEmailChange(newEmail, options?).",O,E,A),this.client.send(this.baseCollectionPath+"/request-email-change",O).then((()=>!0))}async confirmEmailChange(S,E,A,O){let e={method:"POST",body:{token:S,password:E}};return e=ZS("This form of confirmEmailChange(token, password, body?, query?) is deprecated. Consider replacing it with confirmEmailChange(token, password, options?).",e,A,O),this.client.send(this.baseCollectionPath+"/confirm-email-change",e).then((()=>{const E=uS(S),A=this.client.authStore.record;return A&&A.id===E.id&&A.collectionId===E.collectionId&&this.client.authStore.clear(),!0}))}async listExternalAuths(S,E){return this.client.collection("_externalAuths").getFullList(Object.assign({},E,{filter:this.client.filter("recordRef = {:id}",{id:S})}))}async unlinkExternalAuth(S,E,A){const O=await this.client.collection("_externalAuths").getFirstListItem(this.client.filter("recordRef = {:recordId} && provider = {:provider}",{recordId:S,provider:E}));return this.client.collection("_externalAuths").delete(O.id,A).then((()=>!0))}async requestOTP(S,E){return E=Object.assign({method:"POST",body:{email:S}},E),this.client.send(this.baseCollectionPath+"/request-otp",E)}async authWithOTP(S,E,A){return A=Object.assign({method:"POST",body:{otpId:S,password:E}},A),this.client.send(this.baseCollectionPath+"/auth-with-otp",A).then((S=>this.authResponse(S)))}async impersonate(S,E,A){(A=Object.assign({method:"POST",body:{duration:E}},A)).headers=A.headers||{},A.headers.Authorization||(A.headers.Authorization=this.client.authStore.token);const O=new eE(this.client.baseURL,new FS,this.client.lang),e=await O.send(this.baseCollectionPath+"/impersonate/"+encodeURIComponent(S),A);return O.authStore.save(e?.token,this.decode(e?.record||{})),O}_replaceQueryParams(S,E={}){let A=S,O="";S.indexOf("?")>=0&&(A=S.substring(0,S.indexOf("?")),O=S.substring(S.indexOf("?")+1));const e={},R=O.split("&");for(const S of R){if(""==S)continue;const E=S.split("=");e[decodeURIComponent(E[0].replace(/\+/g," "))]=decodeURIComponent((E[1]||"").replace(/\+/g," "))}for(let S in E)E.hasOwnProperty(S)&&(null==E[S]?delete e[S]:e[S]=E[S]);O="";for(let S in e)e.hasOwnProperty(S)&&(""!=O&&(O+="&"),O+=encodeURIComponent(S.replace(/%20/g,"+"))+"="+encodeURIComponent(e[S].replace(/%20/g,"+")));return""!=O?A+"?"+O:A}}function XS(S){if("undefined"==typeof window||!window?.open)throw new aS(new Error("Not in a browser context - please pass a custom urlCallback function."));let E=1024,A=768,O=window.innerWidth,e=window.innerHeight;E=E>O?O:E,A=A>e?e:A;let R=O/2-E/2,t=e/2-A/2;return window.open(S,"popup_window","width="+E+",height="+A+",top="+t+",left="+R+",resizable,menubar=no")}class vS extends yS{get baseCrudPath(){return"/api/collections"}async import(S,E=!1,A){return A=Object.assign({method:"PUT",body:{collections:S,deleteMissing:E}},A),this.client.send(this.baseCrudPath+"/import",A).then((()=>!0))}async getScaffolds(S){return S=Object.assign({method:"GET"},S),this.client.send(this.baseCrudPath+"/meta/scaffolds",S)}async truncate(S,E){return E=Object.assign({method:"DELETE"},E),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(S)+"/truncate",E).then((()=>!0))}}class $S extends fS{async getList(S=1,E=30,A){return(A=Object.assign({method:"GET"},A)).query=Object.assign({page:S,perPage:E},A.query),this.client.send("/api/logs",A)}async getOne(S,E){if(!S)throw new aS({url:this.client.buildURL("/api/logs/"),status:404,response:{code:404,message:"Missing required log id.",data:{}}});return E=Object.assign({method:"GET"},E),this.client.send("/api/logs/"+encodeURIComponent(S),E)}async getStats(S){return S=Object.assign({method:"GET"},S),this.client.send("/api/logs/stats",S)}}class kS extends fS{async check(S){return S=Object.assign({method:"GET"},S),this.client.send("/api/health",S)}}class xS extends fS{getUrl(S,E,A={}){return console.warn("Please replace pb.files.getUrl() with pb.files.getURL()"),this.getURL(S,E,A)}getURL(S,E,A={}){if(!E||!S?.id||!S?.collectionId&&!S?.collectionName)return"";const O=[];O.push("api"),O.push("files"),O.push(encodeURIComponent(S.collectionId||S.collectionName)),O.push(encodeURIComponent(S.id)),O.push(encodeURIComponent(E));let e=this.client.buildURL(O.join("/"));if(Object.keys(A).length){!1===A.download&&delete A.download;const S=new URLSearchParams(A);e+=(e.includes("?")?"&":"?")+S}return e}async getToken(S){return S=Object.assign({method:"POST"},S),this.client.send("/api/files/token",S).then((S=>S?.token||""))}}class QS extends fS{async getFullList(S){return S=Object.assign({method:"GET"},S),this.client.send("/api/backups",S)}async create(S,E){return E=Object.assign({method:"POST",body:{name:S}},E),this.client.send("/api/backups",E).then((()=>!0))}async upload(S,E){return E=Object.assign({method:"POST",body:S},E),this.client.send("/api/backups/upload",E).then((()=>!0))}async delete(S,E){return E=Object.assign({method:"DELETE"},E),this.client.send(`/api/backups/${encodeURIComponent(S)}`,E).then((()=>!0))}async restore(S,E){return E=Object.assign({method:"POST"},E),this.client.send(`/api/backups/${encodeURIComponent(S)}/restore`,E).then((()=>!0))}getDownloadUrl(S,E){return console.warn("Please replace pb.backups.getDownloadUrl() with pb.backups.getDownloadURL()"),this.getDownloadURL(S,E)}getDownloadURL(S,E){return this.client.buildURL(`/api/backups/${encodeURIComponent(E)}?token=${encodeURIComponent(S)}`)}}class qS extends fS{async getFullList(S){return S=Object.assign({method:"GET"},S),this.client.send("/api/crons",S)}async run(S,E){return E=Object.assign({method:"POST"},E),this.client.send(`/api/crons/${encodeURIComponent(S)}`,E).then((()=>!0))}}function jS(S){return"undefined"!=typeof Blob&&S instanceof Blob||"undefined"!=typeof File&&S instanceof File||null!==S&&"object"==typeof S&&S.uri&&("undefined"!=typeof navigator&&"ReactNative"===navigator.product||"undefined"!=typeof global&&global.HermesInternal)}function _S(S){return S&&("FormData"===S.constructor.name||"undefined"!=typeof FormData&&S instanceof FormData)}function zS(S){for(const E in S){const A=Array.isArray(S[E])?S[E]:[S[E]];for(const S of A)if(jS(S))return!0}return!1}const SE=/^[\-\.\d]+$/;function EE(S){if("string"!=typeof S)return S;if("true"==S)return!0;if("false"==S)return!1;if(("-"===S[0]||S[0]>="0"&&S[0]<="9")&&SE.test(S)){let E=+S;if(""+E===S)return E}return S}class AE extends fS{constructor(){super(...arguments),this.requests=[],this.subs={}}collection(S){return this.subs[S]||(this.subs[S]=new OE(this.requests,S)),this.subs[S]}async send(S){const E=new FormData,A=[];for(let S=0;S<this.requests.length;S++){const O=this.requests[S];if(A.push({method:O.method,url:O.url,headers:O.headers,body:O.json}),O.files)for(let A in O.files){const e=O.files[A]||[];for(let O of e)E.append("requests."+S+"."+A,O)}}return E.append("@jsonPayload",JSON.stringify({requests:A})),S=Object.assign({method:"POST",body:E},S),this.client.send("/api/batch",S)}}class OE{constructor(S,E){this.requests=[],this.requests=S,this.collectionIdOrName=E}upsert(S,E){E=Object.assign({body:S||{}},E);const A={method:"PUT",url:"/api/collections/"+encodeURIComponent(this.collectionIdOrName)+"/records"};this.prepareRequest(A,E),this.requests.push(A)}create(S,E){E=Object.assign({body:S||{}},E);const A={method:"POST",url:"/api/collections/"+encodeURIComponent(this.collectionIdOrName)+"/records"};this.prepareRequest(A,E),this.requests.push(A)}update(S,E,A){A=Object.assign({body:E||{}},A);const O={method:"PATCH",url:"/api/collections/"+encodeURIComponent(this.collectionIdOrName)+"/records/"+encodeURIComponent(S)};this.prepareRequest(O,A),this.requests.push(O)}delete(S,E){E=Object.assign({},E);const A={method:"DELETE",url:"/api/collections/"+encodeURIComponent(this.collectionIdOrName)+"/records/"+encodeURIComponent(S)};this.prepareRequest(A,E),this.requests.push(A)}prepareRequest(S,E){if(gS(E),S.headers=E.headers,S.json={},S.files={},void 0!==E.query){const A=mS(E.query);A&&(S.url+=(S.url.includes("?")?"&":"?")+A)}let A=E.body;_S(A)&&(A=function(S){let E={};return S.forEach(((S,A)=>{if("@jsonPayload"===A&&"string"==typeof S)try{let A=JSON.parse(S);Object.assign(E,A)}catch(S){console.warn("@jsonPayload error:",S)}else void 0!==E[A]?(Array.isArray(E[A])||(E[A]=[E[A]]),E[A].push(EE(S))):E[A]=EE(S)})),E}(A));for(const E in A){const O=A[E];if(jS(O))S.files[E]=S.files[E]||[],S.files[E].push(O);else if(Array.isArray(O)){const A=[],e=[];for(const S of O)jS(S)?A.push(S):e.push(S);if(A.length>0&&A.length==O.length){S.files[E]=S.files[E]||[];for(let O of A)S.files[E].push(O)}else if(S.json[E]=e,A.length>0){let O=E;E.startsWith("+")||E.endsWith("+")||(O+="+"),S.files[O]=S.files[O]||[];for(let E of A)S.files[O].push(E)}}else S.json[E]=O}}}class eE{get baseUrl(){return this.baseURL}set baseUrl(S){this.baseURL=S}constructor(S="/",E,A="en-US"){this.cancelControllers={},this.recordServices={},this.enableAutoCancellation=!0,this.baseURL=S,this.lang=A,E?this.authStore=E:"undefined"!=typeof window&&window.Deno?this.authStore=new FS:this.authStore=new WS,this.collections=new vS(this),this.files=new xS(this),this.logs=new $S(this),this.settings=new pS(this),this.realtime=new bS(this),this.health=new kS(this),this.backups=new QS(this),this.crons=new qS(this)}get admins(){return this.collection("_superusers")}createBatch(){return new AE(this)}collection(S){return this.recordServices[S]||(this.recordServices[S]=new JS(this,S)),this.recordServices[S]}autoCancellation(S){return this.enableAutoCancellation=!!S,this}cancelRequest(S){return this.cancelControllers[S]&&(this.cancelControllers[S].abort(),delete this.cancelControllers[S]),this}cancelAllRequests(){for(let S in this.cancelControllers)this.cancelControllers[S].abort();return this.cancelControllers={},this}filter(S,E){if(!E)return S;for(let A in E){let O=E[A];switch(typeof O){case"boolean":case"number":O=""+O;break;case"string":O="'"+O.replace(/'/g,"\\'")+"'";break;default:O=null===O?"null":O instanceof Date?"'"+O.toISOString().replace("T"," ")+"'":"'"+JSON.stringify(O).replace(/'/g,"\\'")+"'"}S=S.replaceAll("{:"+A+"}",O)}return S}getFileUrl(S,E,A={}){return console.warn("Please replace pb.getFileUrl() with pb.files.getURL()"),this.files.getURL(S,E,A)}buildUrl(S){return console.warn("Please replace pb.buildUrl() with pb.buildURL()"),this.buildURL(S)}buildURL(S){let E=this.baseURL;return"undefined"==typeof window||!window.location||E.startsWith("https://")||E.startsWith("http://")||(E=window.location.origin?.endsWith("/")?window.location.origin.substring(0,window.location.origin.length-1):window.location.origin||"",this.baseURL.startsWith("/")||(E+=window.location.pathname||"/",E+=E.endsWith("/")?"":"/"),E+=this.baseURL),S&&(E+=E.endsWith("/")?"":"/",E+=S.startsWith("/")?S.substring(1):S),E}async send(S,E){E=this.initSendOptions(S,E);let A=this.buildURL(S);if(this.beforeSend){const S=Object.assign({},await this.beforeSend(A,E));void 0!==S.url||void 0!==S.options?(A=S.url||A,E=S.options||E):Object.keys(S).length&&(E=S,console?.warn&&console.warn("Deprecated format of beforeSend return: please use `return { url, options }`, instead of `return options`."))}if(void 0!==E.query){const S=mS(E.query);S&&(A+=(A.includes("?")?"&":"?")+S),delete E.query}return"application/json"==this.getHeader(E.headers,"Content-Type")&&E.body&&"string"!=typeof E.body&&(E.body=JSON.stringify(E.body)),(E.fetch||fetch)(A,E).then((async S=>{let A={};try{A=await S.json()}catch(S){}if(this.afterSend&&(A=await this.afterSend(S,A,E)),S.status>=400)throw new aS({url:S.url,status:S.status,data:A});return A})).catch((S=>{throw new aS(S)}))}initSendOptions(S,E){if((E=Object.assign({method:"GET"},E)).body=function(S){if("undefined"==typeof FormData||void 0===S||"object"!=typeof S||null===S||_S(S)||!zS(S))return S;const E=new FormData;for(const A in S){const O=S[A];if("object"!=typeof O||zS({data:O})){const S=Array.isArray(O)?O:[O];for(let O of S)E.append(A,O)}else{let S={};S[A]=O,E.append("@jsonPayload",JSON.stringify(S))}}return E}(E.body),gS(E),E.query=Object.assign({},E.params,E.query),void 0===E.requestKey&&(!1===E.$autoCancel||!1===E.query.$autoCancel?E.requestKey=null:(E.$cancelKey||E.query.$cancelKey)&&(E.requestKey=E.$cancelKey||E.query.$cancelKey)),delete E.$autoCancel,delete E.query.$autoCancel,delete E.$cancelKey,delete E.query.$cancelKey,null!==this.getHeader(E.headers,"Content-Type")||_S(E.body)||(E.headers=Object.assign({},E.headers,{"Content-Type":"application/json"})),null===this.getHeader(E.headers,"Accept-Language")&&(E.headers=Object.assign({},E.headers,{"Accept-Language":this.lang})),this.authStore.token&&null===this.getHeader(E.headers,"Authorization")&&(E.headers=Object.assign({},E.headers,{Authorization:this.authStore.token})),this.enableAutoCancellation&&null!==E.requestKey){const A=E.requestKey||(E.method||"GET")+S;delete E.requestKey,this.cancelRequest(A);const O=new AbortController;this.cancelControllers[A]=O,E.signal=O.signal}return E}getHeader(S,E){S=S||{},E=E.toLowerCase();for(let A in S)if(A.toLowerCase()==E)return S[A];return null}}window.addEventListener("hashchange",(()=>{location.reload()}));const RE=new class{#S="UUDDLRLRBAE";#E="";checkKey(S){switch(S){case"ArrowUp":this.#E+="U";break;case"ArrowDown":this.#E+="D";break;case"ArrowLeft":this.#E+="L";break;case"ArrowRight":this.#E+="R";break;case"KeyB":this.#E+="B";break;case"KeyA":this.#E+="A";break;case"Enter":this.#E+="E"}this.#S.startsWith(this.#E)||(this.#E=""),this.#S===this.#E&&(localStorage.removeItem("NHBordleOvertime.state"),this.#E="",location.reload())}};const tE="correct",IE="present",LE="absent",TE="tbd",nE="empty",NE={correct:"🟩",present:"🟨",absent:"⬛",tbd:"⬛",empty:"🔳"},sE=["Genius","Magnificent","Impressive","Splendid","Great","Phew"],iE=new Date(17407e8);let UE=(oE=new Date,DE=iE,oE.setHours(0,0,0,0),DE.setHours(0,0,0,0),Math.round((oE-DE)/864e5));var oE,DE;for(location.hash&&location.hash.startsWith("#/")&&location.hash.length>2&&NaN!==parseInt(location.hash.slice(2))&&(UE=Math.abs(parseInt(location.hash.slice(2))-1));UE>YS.length;)UE-=YS.length;const rE=UE+1;document.title="NHBordle Overtime #"+rE;const CE=YS[UE];let PE=JSON.parse(localStorage.getItem("NHBordleOvertime.state"));PE&&PE.wordNumber!==rE&&(PE=null);const YE=function(S){if(S)return PS(S);let E=new Array(6);for(let S=0;S<6;S++)E[S]={win:!1,invalid:!1,letters:"",evaluations:new Array(5).fill(nE)};return PS({wordNumber:rE,rows:E,keyboard:{},win:!1,ended:!1,message:"",lastPlay:(new Date).getTime()})}(PE),ME=new class{#A;isConnected=!1;store=PS({list:[],loading:!1});constructor(){this.#A=new eE("https://api.nhb.tools")}async connect(S){try{this.store.update((S=>(S.loading=!0,S))),await this.#A.collection("nbovertime_leaderboard").subscribe("*",(S=>{this.store.update((E=>{let A;switch(S.action){case"delete":A=E.list.findIndex((E=>E.id===S.record.id)),A>-1&&E.list.splice(A,1);break;case"update":A=E.list.findIndex((E=>E.id===S.record.id)),A>-1&&(E.list[A]=S.record);break;default:E.list.push(S.record)}return E.list.sort(((S,E)=>S.numHints-E.numHints)),E}))}),{filter:`gameNumber = ${S}`}),await this.initLeaderboard(S),this.isConnected=!0}catch(S){console.error(S),this.isConnected=!1}finally{this.store.update((S=>(S.loading=!1,S)))}}async disconnect(){try{this.store.update((S=>(S.loading=!0,S))),await this.#A.collection("nbovertime_leaderboard").unsubscribe(),this.isConnected=!1}catch(S){console.error(S),this.isConnected=!1}finally{this.store.update((S=>(S.loading=!1,S)))}}async getLeaderboard(S){let E=[];try{if(!this.#A)return E;E=await this.#A.collection("nbovertime_leaderboard").getFullList({sort:"numHints",filter:`gameNumber = ${S}`})}catch(S){console.error(S)}finally{return E}}async setLeaderboard(S,E,A,O,e){try{await this.#A.collection("nbovertime_leaderboard").create({gameNumber:S,name:E,board:A,boardAnswers:O,numHints:e})}catch(S){console.error(S)}}async initLeaderboard(S){try{this.store.update((S=>(S.loading=!0,S)));const E=await this.getLeaderboard(S);this.store.update((S=>(S.list=E,S)))}catch(S){console.error(S)}finally{this.store.update((S=>(S.loading=!1,S)))}}};ME.connect(rE);const aE=function(S,E,A,O){return function(){var e=(S>>>=0)+(E>>>=0)|0;return S=E^E>>>9,E=(A>>>=0)+(A<<3)|0,A=(A=A<<21|A>>>11)+(e=e+(O=1+(O>>>=0)|0)|0)|0,(e>>>0)/4294967296}}(...function(S){let E=1779033703,A=3144134277,O=1013904242,e=2773480762;for(let R,t=0;t<S.length;t++)R=S.charCodeAt(t),E=A^Math.imul(E^R,597399067),A=O^Math.imul(A^R,2869860233),O=e^Math.imul(O^R,951274213),e=E^Math.imul(e^R,2716044179);return E=Math.imul(O^E>>>18,597399067),A=Math.imul(e^A>>>22,2869860233),O=Math.imul(E^O>>>17,951274213),e=Math.imul(A^e>>>19,2716044179),[(E^A^O^e)>>>0,(A^E)>>>0,(O^E)>>>0,(e^E)>>>0]}(CE));const lE=[],cE=new Set;for(;lE.length<3;){const S=MS[Math.floor(aE()*MS.length)];let E=0,A="";for(let O=0;O<S.length;O++)CE.indexOf(S[O])>-1&&(E++,A=S[O]);1!==E||cE.has(A)||(lE.push(S),cE.add(A))}for(let S=0;S<lE.length;S++)YE.update((E=>(E.rows[S].letters=lE[S],E.rows[S].evaluations.fill(TE),E))),BE();function HE(S){YE.update((E=>{if(E.ended)return E;for(let A of E.rows)if(A.evaluations[0]===nE||A.evaluations[0]===TE){"0"===S?A.letters.length>0&&(A.evaluations[A.letters.length-1]=nE,A.letters=A.letters.slice(0,A.letters.length-1)):A.letters.length<5&&(A.letters+=S,A.evaluations[A.letters.length-1]=TE);break}return E}))}function BE(){YE.update((S=>{for(let E=0;E<S.rows.length;E++)if(S.rows[E].evaluations[0]===TE){if(S.rows[E].letters.length<5)S.message="Not enough letters",S.rows[E].invalid=!0;else if(-1===YS.indexOf(S.rows[E].letters)&&-1===MS.indexOf(S.rows[E].letters))S.message="Not in word lists",S.rows[E].invalid=!0;else{let A=0,O=CE.split("").filter(((A,O)=>S.rows[E].letters[O]!==A));for(let e=0;e<S.rows[E].letters.length;e++){const R=S.rows[E].letters[e],t=O.indexOf(R);R===CE[e]?(S.rows[E].evaluations[e]=tE,S.keyboard[R]=tE,A++):t>-1?(S.rows[E].evaluations[e]=IE,S.keyboard[R]!==tE&&(S.keyboard[R]=IE),O[t]=""):(S.rows[E].evaluations[e]=LE,S.keyboard.hasOwnProperty(R)||(S.keyboard[R]=LE))}5===A?(S.rows[E].win=!0,S.win=!0,S.ended=!0,S.message=sE[E]):5===E&&(S.ended=!0,S.message=CE),S.lastPlay=(new Date).getTime(),localStorage.setItem("NHBordleOvertime.state",JSON.stringify({...S,message:""}))}break}return S}))}function GE(){YE.update((S=>{for(let E of S.rows)E.invalid=!1;return S}))}function KE(E){let A,O,e,R,t,I;return{c(){A=B("section"),O=B("div"),e=G(E[0]),h(O,"class",R=i(`tile ${E[1]||nE}`)+" svelte-othzw2"),h(O,"data-animation",E[2]),h(A,"class","svelte-othzw2")},m(S,R){l(S,A,R),Y(A,O),Y(O,e),t||(I=d(O,"animationend",E[3]),t=!0)},p(S,[E]){1&E&&F(e,S[0]),2&E&&R!==(R=i(`tile ${S[1]||nE}`)+" svelte-othzw2")&&h(O,"class",R),4&E&&h(O,"data-animation",S[2])},i:S,o:S,d(S){S&&c(A),t=!1,I()}}}function uE(S,E,A){let{letter:O=""}=E,{letterIndex:e=0}=E,{evaluation:R=nE}=E,t=O,I=R,L="idle";return S.$$set=S=>{"letter"in S&&A(0,O=S.letter),"letterIndex"in S&&A(4,e=S.letterIndex),"evaluation"in S&&A(1,R=S.evaluation)},S.$$.update=()=>{115&S.$$.dirty&&(O!==t&&(A(2,L="pop"),A(5,t=O)),R!==I&&(R!==nE&&R!==TE&&(e>0?setTimeout((()=>A(2,L="flip-in")),25*e):A(2,L="flip-in")),A(6,I=R)))},[O,R,L,function(){A(2,L="flip-in"===L?"flip-out":"idle")},e,t,I]}class dE extends rS{constructor(S){super(),DS(this,S,uE,KE,t,{letter:0,letterIndex:4,evaluation:1})}}function hE(S,E,A){const O=S.slice();return O[4]=E[A],O[6]=A,O}function FE(S){let E,A;return E=new dE({props:{letter:S[0][S[6]]||"",letterIndex:S[6],evaluation:S[4]}}),{c(){sS(E.$$.fragment)},m(S,O){iS(E,S,O),A=!0},p(S,A){const O={};1&A&&(O.letter=S[0][S[6]]||""),2&A&&(O.evaluation=S[4]),E.$set(O)},i(S){A||(LS(E.$$.fragment,S),A=!0)},o(S){TS(E.$$.fragment,S),A=!1},d(S){US(E,S)}}}function WE(S){let E,A,O,e,R,t=S[1],I=[];for(let E=0;E<t.length;E+=1)I[E]=FE(hE(S,t,E));const L=S=>TS(I[S],1,1,(()=>{I[S]=null}));return{c(){E=B("section"),A=B("div");for(let S=0;S<I.length;S+=1)I[S].c();h(A,"class","row svelte-5ge685"),h(E,"class","svelte-5ge685"),p(E,"invalid",S[2]),p(E,"win",S[3])},m(S,t){l(S,E,t),Y(E,A);for(let S=0;S<I.length;S+=1)I[S]&&I[S].m(A,null);O=!0,e||(R=d(E,"animationend",GE),e=!0)},p(S,[e]){if(3&e){let E;for(t=S[1],E=0;E<t.length;E+=1){const O=hE(S,t,E);I[E]?(I[E].p(O,e),LS(I[E],1)):(I[E]=FE(O),I[E].c(),LS(I[E],1),I[E].m(A,null))}for(tS(),E=t.length;E<I.length;E+=1)L(E);IS()}(!O||4&e)&&p(E,"invalid",S[2]),(!O||8&e)&&p(E,"win",S[3])},i(S){if(!O){for(let S=0;S<t.length;S+=1)LS(I[S]);O=!0}},o(S){I=I.filter(Boolean);for(let S=0;S<I.length;S+=1)TS(I[S]);O=!1},d(S){S&&c(E),H(I,S),e=!1,R()}}}function fE(S,E,A){let{letters:O=""}=E,{evaluations:e=[]}=E,{invalid:R=!1}=E,{win:t=!1}=E;return S.$$set=S=>{"letters"in S&&A(0,O=S.letters),"evaluations"in S&&A(1,e=S.evaluations),"invalid"in S&&A(2,R=S.invalid),"win"in S&&A(3,t=S.win)},[O,e,R,t]}class pE extends rS{constructor(S){super(),DS(this,S,fE,WE,t,{letters:0,evaluations:1,invalid:2,win:3})}}function VE(S,E,A){const O=S.slice();return O[1]=E[A],O}function gE(S){let E,A;return E=new pE({props:{letters:S[1].letters,evaluations:S[1].evaluations,invalid:S[1].invalid,win:S[1].win}}),{c(){sS(E.$$.fragment)},m(S,O){iS(E,S,O),A=!0},p(S,A){const O={};1&A&&(O.letters=S[1].letters),1&A&&(O.evaluations=S[1].evaluations),1&A&&(O.invalid=S[1].invalid),1&A&&(O.win=S[1].win),E.$set(O)},i(S){A||(LS(E.$$.fragment,S),A=!0)},o(S){TS(E.$$.fragment,S),A=!1},d(S){US(E,S)}}}function mE(S){let E,A,O=S[0].rows,e=[];for(let E=0;E<O.length;E+=1)e[E]=gE(VE(S,O,E));const R=S=>TS(e[S],1,1,(()=>{e[S]=null}));return{c(){E=B("div");for(let S=0;S<e.length;S+=1)e[S].c();h(E,"id","board"),h(E,"class","svelte-1tl4m1x"),f(E,"grid-template-rows","repeat(6, 1fr);"),f(E,"height","420px")},m(S,O){l(S,E,O);for(let S=0;S<e.length;S+=1)e[S]&&e[S].m(E,null);A=!0},p(S,[A]){if(1&A){let t;for(O=S[0].rows,t=0;t<O.length;t+=1){const R=VE(S,O,t);e[t]?(e[t].p(R,A),LS(e[t],1)):(e[t]=gE(R),e[t].c(),LS(e[t],1),e[t].m(E,null))}for(tS(),t=O.length;t<e.length;t+=1)R(t);IS()}},i(S){if(!A){for(let S=0;S<O.length;S+=1)LS(e[S]);A=!0}},o(S){e=e.filter(Boolean);for(let S=0;S<e.length;S+=1)TS(e[S]);A=!1},d(S){S&&c(E),H(e,S)}}}function bE(S,E,A){let O;return I(S,YE,(S=>A(0,O=S))),[O]}class yE extends rS{constructor(S){super(),DS(this,S,bE,mE,t,{})}}function ZE(S,E,A){const O=S.slice();return O[3]=E[A],O}function wE(S,E,A){const O=S.slice();return O[6]=E[A],O}function JE(S){let E,A,O,e,R,t=("1"===S[6]?"ENTER":"0"===S[6]?"BKSP":S[6])+"";return{c(){E=B("button"),A=G(t),h(E,"class",O=i(S[0].keyboard[S[6]]||"")+" svelte-qygiv8"),h(E,"data-key",S[6]),p(E,"one-and-a-half","1"===S[6]||"0"===S[6])},m(O,t){l(O,E,t),Y(E,A),e||(R=d(E,"click",S[2]),e=!0)},p(S,A){1&A&&O!==(O=i(S[0].keyboard[S[6]]||"")+" svelte-qygiv8")&&h(E,"class",O),3&A&&p(E,"one-and-a-half","1"===S[6]||"0"===S[6])},d(S){S&&c(E),e=!1,R()}}}function XE(E){let A;return{c(){A=B("div"),h(A,"class","half svelte-qygiv8")},m(S,E){l(S,A,E)},p:S,d(S){S&&c(A)}}}function vE(S){let E;let A=function(S){return" "===S[6]?XE:JE}(S),O=A(S);return{c(){O.c(),E=u()},m(S,A){O.m(S,A),l(S,E,A)},p(S,E){O.p(S,E)},d(S){O.d(S),S&&c(E)}}}function $E(S){let E,A,O=S[3],e=[];for(let E=0;E<O.length;E+=1)e[E]=vE(wE(S,O,E));return{c(){E=B("div");for(let S=0;S<e.length;S+=1)e[S].c();A=K(),h(E,"class","row svelte-qygiv8")},m(S,O){l(S,E,O);for(let S=0;S<e.length;S+=1)e[S]&&e[S].m(E,null);Y(E,A)},p(S,R){if(7&R){let t;for(O=S[3],t=0;t<O.length;t+=1){const I=wE(S,O,t);e[t]?e[t].p(I,R):(e[t]=vE(I),e[t].c(),e[t].m(E,A))}for(;t<e.length;t+=1)e[t].d(1);e.length=O.length}},d(S){S&&c(E),H(e,S)}}}function kE(E){let A,O=E[1],e=[];for(let S=0;S<O.length;S+=1)e[S]=$E(ZE(E,O,S));return{c(){A=B("div");for(let S=0;S<e.length;S+=1)e[S].c();h(A,"id","keyboard"),h(A,"class","svelte-qygiv8")},m(S,E){l(S,A,E);for(let S=0;S<e.length;S+=1)e[S]&&e[S].m(A,null)},p(S,[E]){if(7&E){let R;for(O=S[1],R=0;R<O.length;R+=1){const t=ZE(S,O,R);e[R]?e[R].p(t,E):(e[R]=$E(t),e[R].c(),e[R].m(A,null))}for(;R<e.length;R+=1)e[R].d(1);e.length=O.length}},i:S,o:S,d(S){S&&c(A),H(e,S)}}}function xE(S,E,A){let O;I(S,YE,(S=>A(0,O=S)));return[O,["QWERTYUIOP"," ASDFGHJKL ","1ZXCVBNM0"],function(S){let E=S.target.dataset.key;"1"!==E?HE(E):BE()}]}class QE extends rS{constructor(S){super(),DS(this,S,xE,kE,t,{})}}function qE(S){const E=S-1;return E*E*E+1}function jE(S,{delay:A=0,duration:O=400,easing:e=E}={}){const R=+getComputedStyle(S).opacity;return{delay:A,duration:O,easing:e,css:S=>"opacity: "+S*R}}function _E(S,{delay:E=0,duration:A=400,easing:O=qE,x:e=0,y:R=0,opacity:t=0}={}){const I=getComputedStyle(S),L=+I.opacity,T="none"===I.transform?"":I.transform,n=L*(1-t),[N,s]=U(e),[i,o]=U(R);return{delay:E,duration:A,easing:O,css:(S,E)=>`\n\t\t\ttransform: ${T} translate(${(1-S)*N}${s}, ${(1-S)*i}${o});\n\t\t\topacity: ${L-n*E}`}}function zE(S){let E,A,O,e,R=S[0].message+"";return{c(){E=B("div"),A=G(R),h(E,"class","toast svelte-1fk0tkt"),p(E,"win",S[0].win)},m(S,O){l(S,E,O),Y(E,A),e=!0},p(S,O){(!e||1&O)&&R!==(R=S[0].message+"")&&F(A,R),(!e||1&O)&&p(E,"win",S[0].win)},i(S){e||(j((()=>{e&&(O||(O=NS(E,jE,{duration:300},!0)),O.run(1))})),e=!0)},o(S){O||(O=NS(E,jE,{duration:300},!1)),O.run(0),e=!1},d(S){S&&c(E),S&&O&&O.end()}}}function SA(S){let E,A,O=S[0].message&&zE(S);return{c(){E=B("div"),O&&O.c(),h(E,"class","toaster svelte-1fk0tkt"),h(E,"id","game-toaster")},m(S,e){l(S,E,e),O&&O.m(E,null),A=!0},p(S,[A]){S[0].message?O?(O.p(S,A),1&A&&LS(O,1)):(O=zE(S),O.c(),LS(O,1),O.m(E,null)):O&&(tS(),TS(O,1,1,(()=>{O=null})),IS())},i(S){A||(LS(O),A=!0)},o(S){TS(O),A=!1},d(S){S&&c(E),O&&O.d()}}}function EA(S,E,A){let O;I(S,YE,(S=>A(0,O=S)));let e=null,R=O.message;function t(){var S,E;S=YE,O.message="",E=O,S.set(E),A(2,R=""),A(1,e=null)}return S.$$.update=()=>{7&S.$$.dirty&&""!==O.message&&O.message!==R&&(e&&clearTimeout(e),O.ended?O.win&&A(1,e=setTimeout(t,3e3)):A(1,e=setTimeout(t,1500)),A(2,R=O.message))},[O,e,R]}class AA extends rS{constructor(S){super(),DS(this,S,EA,SA,t,{})}}function OA(S,E,A){const O=S.slice();return O[2]=E[A],O}function eA(E){let A;return{c(){A=B("div"),A.textContent="Nothing to see"},m(S,E){l(S,A,E)},p:S,i:S,o:S,d(S){S&&c(A)}}}function RA(S){let E,A,O=S[0],e=[];for(let E=0;E<O.length;E+=1)e[E]=IA(OA(S,O,E));const R=S=>TS(e[S],1,1,(()=>{e[S]=null}));return{c(){for(let S=0;S<e.length;S+=1)e[S].c();E=u()},m(S,O){for(let E=0;E<e.length;E+=1)e[E]&&e[E].m(S,O);l(S,E,O),A=!0},p(S,A){if(1&A){let t;for(O=S[0],t=0;t<O.length;t+=1){const R=OA(S,O,t);e[t]?(e[t].p(R,A),LS(e[t],1)):(e[t]=IA(R),e[t].c(),LS(e[t],1),e[t].m(E.parentNode,E))}for(tS(),t=O.length;t<e.length;t+=1)R(t);IS()}},i(S){if(!A){for(let S=0;S<O.length;S+=1)LS(e[S]);A=!0}},o(S){e=e.filter(Boolean);for(let S=0;S<e.length;S+=1)TS(e[S]);A=!1},d(S){H(e,S),S&&c(E)}}}function tA(E){let A;return{c(){A=B("div"),A.textContent="Loading..."},m(S,E){l(S,A,E)},p:S,i:S,o:S,d(S){S&&c(A)}}}function IA(S){let E,A,O,e,R,t,I,L,T,n,N,s,i,U,o,D=S[2].name+"",r=S[2].numHints+"",C=S[2].board+"";return{c(){E=B("li"),A=B("details"),O=B("summary"),e=B("div"),R=G(D),t=K(),I=B("div"),L=G(r),T=K(),n=B("div"),N=B("pre"),s=G(C),i=K(),h(e,"class","name"),h(I,"class","score svelte-18zrbcg"),p(I,"great",1===S[2].numHints||2===S[2].numHints),p(I,"good",3===S[2].numHints||4===S[2].numHints),h(O,"class","svelte-18zrbcg"),h(n,"class","board"),h(E,"class","svelte-18zrbcg")},m(S,U){l(S,E,U),Y(E,A),Y(A,O),Y(O,e),Y(e,R),Y(O,t),Y(O,I),Y(I,L),Y(A,T),Y(A,n),Y(n,N),Y(N,s),Y(E,i),o=!0},p(S,E){(!o||1&E)&&D!==(D=S[2].name+"")&&F(R,D),(!o||1&E)&&r!==(r=S[2].numHints+"")&&F(L,r),(!o||1&E)&&p(I,"great",1===S[2].numHints||2===S[2].numHints),(!o||1&E)&&p(I,"good",3===S[2].numHints||4===S[2].numHints),(!o||1&E)&&C!==(C=S[2].board+"")&&F(s,C)},i(S){o||(j((()=>{o&&(U||(U=NS(E,jE,{duration:300},!0)),U.run(1))})),o=!0)},o(S){U||(U=NS(E,jE,{duration:300},!1)),U.run(0),o=!1},d(S){S&&c(E),S&&U&&U.end()}}}function LA(S){let E,A,O,e;const R=[tA,RA,eA],t=[];function I(S,E){return S[1]?0:S[0].length>0?1:2}return A=I(S),O=t[A]=R[A](S),{c(){E=B("ul"),O.c(),h(E,"class","svelte-18zrbcg")},m(S,O){l(S,E,O),t[A].m(E,null),e=!0},p(S,[e]){let L=A;A=I(S),A===L?t[A].p(S,e):(tS(),TS(t[L],1,1,(()=>{t[L]=null})),IS(),O=t[A],O?O.p(S,e):(O=t[A]=R[A](S),O.c()),LS(O,1),O.m(E,null))},i(S){e||(LS(O),e=!0)},o(S){TS(O),e=!1},d(S){S&&c(E),t[A].d()}}}function TA(S,E,A){let{list:O=[]}=E,{loading:e=!1}=E;return S.$$set=S=>{"list"in S&&A(0,O=S.list),"loading"in S&&A(1,e=S.loading)},[O,e]}class nA extends rS{constructor(S){super(),DS(this,S,TA,LA,t,{list:0,loading:1})}}function NA(S){let E;const A=S[7].default,O=L(A,S,S[6],null);return{c(){O&&O.c()},m(S,A){O&&O.m(S,A),E=!0},p(S,e){O&&O.p&&(!E||64&e)&&N(O,A,S,S[6],E?n(A,S[6],e,null):s(S[6]),null)},i(S){E||(LS(O,S),E=!0)},o(S){TS(O,S),E=!1},d(S){O&&O.d(S)}}}function sA(E){let A;return{c(){A=G(E[5])},m(S,E){l(S,A,E)},p(S,E){32&E&&F(A,S[5])},i:S,o:S,d(S){S&&c(A)}}}function iA(S){let E,A,O,e,R,t,I,L;const T=[sA,NA],n=[];function N(S,E){return S[4]?0:1}return A=N(S),O=n[A]=T[A](S),{c(){E=B("button"),O.c(),h(E,"class",e=i(S[0])+" svelte-12i8imc"),E.disabled=R=S[1]||S[4],p(E,"small",S[2]),p(E,"outline",S[3])},m(O,e){l(O,E,e),n[A].m(E,null),t=!0,I||(L=d(E,"click",S[8]),I=!0)},p(S,[I]){let L=A;A=N(S),A===L?n[A].p(S,I):(tS(),TS(n[L],1,1,(()=>{n[L]=null})),IS(),O=n[A],O?O.p(S,I):(O=n[A]=T[A](S),O.c()),LS(O,1),O.m(E,null)),(!t||1&I&&e!==(e=i(S[0])+" svelte-12i8imc"))&&h(E,"class",e),(!t||18&I&&R!==(R=S[1]||S[4]))&&(E.disabled=R),(!t||5&I)&&p(E,"small",S[2]),(!t||9&I)&&p(E,"outline",S[3])},i(S){t||(LS(O),t=!0)},o(S){TS(O),t=!1},d(S){S&&c(E),n[A].d(),I=!1,L()}}}function UA(S,E,A){let{$$slots:O={},$$scope:e}=E,{intent:R="default"}=E,{disabled:t=!1}=E,{small:I=!1}=E,{outline:L=!1}=E,{loading:T=!1}=E,{loadingMessage:n="Loading..."}=E;return S.$$set=S=>{"intent"in S&&A(0,R=S.intent),"disabled"in S&&A(1,t=S.disabled),"small"in S&&A(2,I=S.small),"outline"in S&&A(3,L=S.outline),"loading"in S&&A(4,T=S.loading),"loadingMessage"in S&&A(5,n=S.loadingMessage),"$$scope"in S&&A(6,e=S.$$scope)},[R,t,I,L,T,n,e,O,function(E){X.call(this,S,E)}]}class oA extends rS{constructor(S){super(),DS(this,S,UA,iA,t,{intent:0,disabled:1,small:2,outline:3,loading:4,loadingMessage:5})}}function DA(S,E,A){const O=S.slice();return O[14]=E[A],O}function rA(S){let E,A,O,R,t,I,T,i,U,o,D,r,C,P,M=!S[2]&&CA(S);const a=S[10].default,H=L(a,S,S[12],null);let u=S[4].length&&PA(S);return{c(){E=B("div"),A=B("div"),O=B("div"),R=B("div"),t=G(S[1]),I=K(),M&&M.c(),T=K(),i=B("div"),H&&H.c(),U=K(),u&&u.c(),h(R,"class","modal-title svelte-hvfqmv"),h(O,"class","modal-header svelte-hvfqmv"),h(i,"class","modal-body svelte-hvfqmv"),h(A,"class","modal svelte-hvfqmv"),h(E,"class","modal-backdrop svelte-hvfqmv"),h(E,"tabindex","-1"),p(E,"centered",S[3])},m(e,L){var n;l(e,E,L),Y(E,A),Y(A,O),Y(O,R),Y(R,t),Y(O,I),M&&M.m(O,null),Y(A,T),Y(A,i),H&&H.m(i,null),Y(A,U),u&&u.m(A,null),r=!0,C||(P=[d(A,"introend",S[6]),d(A,"outroend",S[7]),d(E,"click",(n=S[11],function(S){S.target===this&&n.call(this,S)}))],C=!0)},p(S,e){(!r||2&e)&&F(t,S[1]),S[2]?M&&(M.d(1),M=null):M?M.p(S,e):(M=CA(S),M.c(),M.m(O,null)),H&&H.p&&(!r||4096&e)&&N(H,a,S,S[12],r?n(a,S[12],e,null):s(S[12]),null),S[4].length?u?(u.p(S,e),16&e&&LS(u,1)):(u=PA(S),u.c(),LS(u,1),u.m(A,null)):u&&(tS(),TS(u,1,1,(()=>{u=null})),IS()),(!r||8&e)&&p(E,"centered",S[3])},i(S){r||(LS(H,S),LS(u),j((()=>{r&&(o||(o=NS(A,_E,{y:-50,duration:300},!0)),o.run(1))})),j((()=>{r&&(D||(D=NS(E,jE,{duration:300},!0)),D.run(1))})),r=!0)},o(S){TS(H,S),TS(u),o||(o=NS(A,_E,{y:-50,duration:300},!1)),o.run(0),D||(D=NS(E,jE,{duration:300},!1)),D.run(0),r=!1},d(S){S&&c(E),M&&M.d(),H&&H.d(S),u&&u.d(),S&&o&&o.end(),S&&D&&D.end(),C=!1,e(P)}}}function CA(E){let A,O,e;return{c(){A=B("button"),A.innerHTML="<span>×</span>",h(A,"class","close svelte-hvfqmv")},m(S,R){l(S,A,R),O||(e=d(A,"click",E[5]),O=!0)},p:S,d(S){S&&c(A),O=!1,e()}}}function PA(S){let E,A,O=S[4],e=[];for(let E=0;E<O.length;E+=1)e[E]=MA(DA(S,O,E));const R=S=>TS(e[S],1,1,(()=>{e[S]=null}));return{c(){E=B("div");for(let S=0;S<e.length;S+=1)e[S].c();h(E,"class","modal-footer svelte-hvfqmv")},m(S,O){l(S,E,O);for(let S=0;S<e.length;S+=1)e[S]&&e[S].m(E,null);A=!0},p(S,A){if(16&A){let t;for(O=S[4],t=0;t<O.length;t+=1){const R=DA(S,O,t);e[t]?(e[t].p(R,A),LS(e[t],1)):(e[t]=MA(R),e[t].c(),LS(e[t],1),e[t].m(E,null))}for(tS(),t=O.length;t<e.length;t+=1)R(t);IS()}},i(S){if(!A){for(let S=0;S<O.length;S+=1)LS(e[S]);A=!0}},o(S){e=e.filter(Boolean);for(let S=0;S<e.length;S+=1)TS(e[S]);A=!1},d(S){S&&c(E),H(e,S)}}}function YA(S){let E,A=S[14].label+"";return{c(){E=G(A)},m(S,A){l(S,E,A)},p(S,O){16&O&&A!==(A=S[14].label+"")&&F(E,A)},d(S){S&&c(E)}}}function MA(S){let E,A;return E=new oA({props:{intent:S[14].intent||"default",loading:S[14].loading,loadingMessage:S[14].loadingMessage||"Loading...",disabled:S[14].disabled,outline:S[14].outline,$$slots:{default:[YA]},$$scope:{ctx:S}}}),E.$on("click",(function(){R(S[14].fn)&&S[14].fn.apply(this,arguments)})),{c(){sS(E.$$.fragment)},m(S,O){iS(E,S,O),A=!0},p(A,O){S=A;const e={};16&O&&(e.intent=S[14].intent||"default"),16&O&&(e.loading=S[14].loading),16&O&&(e.loadingMessage=S[14].loadingMessage||"Loading..."),16&O&&(e.disabled=S[14].disabled),16&O&&(e.outline=S[14].outline),4112&O&&(e.$$scope={dirty:O,ctx:S}),E.$set(e)},i(S){A||(LS(E.$$.fragment,S),A=!0)},o(S){TS(E.$$.fragment,S),A=!1},d(S){US(E,S)}}}function aA(S){let E,A,O=S[0]&&rA(S);return{c(){O&&O.c(),E=u()},m(S,e){O&&O.m(S,e),l(S,E,e),A=!0},p(S,[A]){S[0]?O?(O.p(S,A),1&A&&LS(O,1)):(O=rA(S),O.c(),LS(O,1),O.m(E.parentNode,E)):O&&(tS(),TS(O,1,1,(()=>{O=null})),IS())},i(S){A||(LS(O),A=!0)},o(S){TS(O),A=!1},d(S){O&&O.d(S),S&&c(E)}}}function lA(S,E,A){let{$$slots:O={},$$scope:e}=E;const R=function(){const S=J();return(E,A,{cancelable:O=!1}={})=>{const e=S.$$.callbacks[E];if(e){const R=V(E,A,{cancelable:O});return e.slice().forEach((E=>{E.call(S,R)})),!R.defaultPrevented}return!0}}();let{isOpen:t=!1}=E,{title:I=""}=E,{mandatory:L=!1}=E,{centered:T=!1}=E,{actions:n=[]}=E;const N=()=>{A(0,t=!1),R("closing")};return S.$$set=S=>{"isOpen"in S&&A(0,t=S.isOpen),"title"in S&&A(1,I=S.title),"mandatory"in S&&A(2,L=S.mandatory),"centered"in S&&A(3,T=S.centered),"actions"in S&&A(4,n=S.actions),"$$scope"in S&&A(12,e=S.$$scope)},[t,I,L,T,n,N,()=>{R("open")},()=>{R("closed")},()=>{A(0,t=!0),R("opening")},()=>{A(0,t=!t),R(t?"opening":"closing")},O,()=>!L&&N(),e]}class cA extends rS{constructor(S){super(),DS(this,S,lA,aA,t,{isOpen:0,title:1,mandatory:2,centered:3,actions:4,open:8,close:5,toggle:9})}get open(){return this.$$.ctx[8]}get close(){return this.$$.ctx[5]}get toggle(){return this.$$.ctx[9]}}function HA(S){let E,A,O,e,R,t,I,L,T,n,N,s,i=S[4].wordNumber-1+"";return N=new nA({props:{list:S[7],loading:S[8]}}),{c(){E=B("h3"),E.textContent="Rules",A=K(),O=B("p"),O.innerHTML='This game plays exactly like <a href="https://jfdesrochers.github.io/kmhbordle" target="_blank">NHBordle</a> with the following exceptions:',e=K(),R=B("ul"),R.innerHTML="<li>The game will provide you with 3 guesses already filled.</li> \n        <li>There will be 3 guaranteed clues in these guesses.</li> \n        <li>You will have to guess the word using these clues.</li> \n        <li>As such, you will have only 3 remaining guesses to do so. Choose carefully!</li>",t=K(),I=B("h3"),L=G("Yesterday's Leaderboard #"),T=G(i),n=K(),sS(N.$$.fragment),h(E,"class","mt-0 svelte-ymm7q0")},m(S,i){l(S,E,i),l(S,A,i),l(S,O,i),l(S,e,i),l(S,R,i),l(S,t,i),l(S,I,i),Y(I,L),Y(I,T),l(S,n,i),iS(N,S,i),s=!0},p(S,E){(!s||16&E)&&i!==(i=S[4].wordNumber-1+"")&&F(T,i);const A={};128&E&&(A.list=S[7]),256&E&&(A.loading=S[8]),N.$set(A)},i(S){s||(LS(N.$$.fragment,S),s=!0)},o(S){TS(N.$$.fragment,S),s=!1},d(S){S&&c(E),S&&c(A),S&&c(O),S&&c(e),S&&c(R),S&&c(t),S&&c(I),S&&c(n),US(N,S)}}}function BA(S){let E,A,O,e,R,t,I,L,T,n,N,s,i,U,o,D=S[2]>1?"guesses":"guess";return{c(){E=B("h3"),A=G("You WIN in "),O=G(S[2]),e=K(),R=G(D),t=G("!"),I=K(),L=B("pre"),T=G(S[3]),n=K(),N=B("label"),N.textContent="Please enter your name below for the leaderboard:",s=K(),i=B("input"),h(E,"class","mt-0 svelte-ymm7q0"),h(N,"for","leadername"),h(N,"class","svelte-ymm7q0"),h(i,"type","text"),h(i,"name","leadername"),h(i,"id","leadername"),h(i,"class","svelte-ymm7q0")},m(D,r){l(D,E,r),Y(E,A),Y(E,O),Y(E,e),Y(E,R),Y(E,t),l(D,I,r),l(D,L,r),Y(L,T),l(D,n,r),l(D,N,r),l(D,s,r),l(D,i,r),W(i,S[1]),U||(o=d(i,"input",S[14]),U=!0)},p(S,E){4&E&&F(O,S[2]),4&E&&D!==(D=S[2]>1?"guesses":"guess")&&F(R,D),8&E&&F(T,S[3]),2&E&&i.value!==S[1]&&W(i,S[1])},d(S){S&&c(E),S&&c(I),S&&c(L),S&&c(n),S&&c(N),S&&c(s),S&&c(i),U=!1,o()}}}function GA(S){let E,A,O,e,R,t,I,L,T,n,N,s,i,U,o,D,r,C,P,M,a,H;t=new yE({}),L=new QE({}),n=new AA({}),o=new nA({props:{list:S[9].list,loading:S[9].loading}});let G={title:"Welcome to NHBordle Overtime #"+S[4].wordNumber+"!",$$slots:{default:[HA]},$$scope:{ctx:S}};r=new cA({props:G}),S[13](r);let u={title:"Congratulations!",actions:S[6],mandatory:!0,$$slots:{default:[BA]},$$scope:{ctx:S}};return P=new cA({props:u}),S[15](P),{c(){E=B("header"),E.innerHTML='<div class="menu-left"></div> \n    <div class="title svelte-ymm7q0">NHBordle Overtime</div> \n    <div class="menu-right"></div>',A=K(),O=B("div"),e=B("div"),R=B("div"),sS(t.$$.fragment),I=K(),sS(L.$$.fragment),T=K(),sS(n.$$.fragment),N=K(),s=B("div"),i=B("h3"),i.textContent="Leaderboard",U=K(),sS(o.$$.fragment),D=K(),sS(r.$$.fragment),C=K(),sS(P.$$.fragment),h(E,"class","svelte-ymm7q0"),h(R,"id","board-container"),h(R,"class","svelte-ymm7q0"),h(e,"id","game"),h(e,"class","svelte-ymm7q0"),h(i,"class","svelte-ymm7q0"),h(s,"id","leaderboard"),h(s,"class","svelte-ymm7q0"),h(O,"class","game-container svelte-ymm7q0")},m(c,B){l(c,E,B),l(c,A,B),l(c,O,B),Y(O,e),Y(e,R),iS(t,R,null),Y(e,I),iS(L,e,null),Y(e,T),iS(n,e,null),Y(O,N),Y(O,s),Y(s,i),Y(s,U),iS(o,s,null),l(c,D,B),iS(r,c,B),l(c,C,B),iS(P,c,B),M=!0,a||(H=d(window,"keydown",S[11]),a=!0)},p(S,[E]){const A={};512&E&&(A.list=S[9].list),512&E&&(A.loading=S[9].loading),o.$set(A);const O={};16&E&&(O.title="Welcome to NHBordle Overtime #"+S[4].wordNumber+"!"),65936&E&&(O.$$scope={dirty:E,ctx:S}),r.$set(O);const e={};64&E&&(e.actions=S[6]),65550&E&&(e.$$scope={dirty:E,ctx:S}),P.$set(e)},i(S){M||(LS(t.$$.fragment,S),LS(L.$$.fragment,S),LS(n.$$.fragment,S),LS(o.$$.fragment,S),LS(r.$$.fragment,S),LS(P.$$.fragment,S),M=!0)},o(S){TS(t.$$.fragment,S),TS(L.$$.fragment,S),TS(n.$$.fragment,S),TS(o.$$.fragment,S),TS(r.$$.fragment,S),TS(P.$$.fragment,S),M=!1},d(e){e&&c(E),e&&c(A),e&&c(O),US(t),US(L),US(n),US(o),e&&c(D),S[13](null),US(r,e),e&&c(C),S[15](null),US(P,e),a=!1,H()}}}function KA(S,E,A){let O,e,R,t;I(S,YE,(S=>A(4,O=S)));let L="",T=[{label:"Submit",intent:"primary",loadingMessage:"Submitting...",loading:!1,disabled:!0,fn:async()=>{try{A(6,T[0].loading=!0,T),await ME.setLeaderboard(O.wordNumber,L,U,o,i)}finally{A(6,T[0].loading=!1,T),t.close()}}}];const n=ME.store;I(S,n,(S=>A(9,e=S)));let N=[],s=!1,i=0,U="",o="";var D;return D=async()=>{0===O.rows[3].letters.length&&R.open();try{A(8,s=!0),O.wordNumber>1&&A(7,N=await ME.getLeaderboard(O.wordNumber-1))}finally{A(8,s=!1)}},J().$$.on_mount.push(D),S.$$.update=()=>{if(2&S.$$.dirty&&A(6,T[0].disabled=0===L.length,T),4125&S.$$.dirty&&O.ended&&O.win&&""!==O.message){A(2,i=0),A(3,U=""),A(12,o="");for(let S of O.rows)if(S.letters.length>0){U.length>0&&A(3,U+="\n"),o.length>0&&A(12,o+="\n"),A(2,i++,i);for(let E of S.evaluations)A(3,U+=NE[E]);A(12,o+=S.letters)}A(2,i-=3),t.open()}},[t,L,i,U,O,R,T,N,s,e,n,function(S){if("INPUT"===S.target.tagName)return;S.preventDefault(),S.stopPropagation(),RE.checkKey(S.code);let E=S.key.toUpperCase();if("ENTER"===E)BE();else if("BACKSPACE"===E)HE("0");else if(1===E.length){let S=E.charCodeAt(0);S>=65&&S<=90&&HE(E)}},o,function(S){$[S?"unshift":"push"]((()=>{R=S,A(5,R)}))},function(){L=this.value,A(1,L)},function(S){$[S?"unshift":"push"]((()=>{t=S,A(0,t)}))}]}return new class extends rS{constructor(S){super(),DS(this,S,KA,GA,t,{})}}({target:document.body})}();
//# sourceMappingURL=bundle.js.map
